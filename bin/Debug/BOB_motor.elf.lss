
bin/Debug/BOB_motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  0000451e  00004592  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000451e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000056  00800208  00004626  0000469a  2**0
                  ALLOC
  3 .stab         00004fbc  00000000  00000000  0000469c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f69  00000000  00000000  00009658  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_21>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ee e1       	ldi	r30, 0x1E	; 30
      7c:	f5 e4       	ldi	r31, 0x45	; 69
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	a8 30       	cpi	r26, 0x08	; 8
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	12 e0       	ldi	r17, 0x02	; 2
      8c:	a8 e0       	ldi	r26, 0x08	; 8
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 35       	cpi	r26, 0x5E	; 94
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 e5 06 	call	0xdca	; 0xdca <main>
      9e:	0c 94 8d 22 	jmp	0x451a	; 0x451a <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

000000a6 <__vector_21>:
*/
//-------------------------------------------
#include "adc.h"
#include "pwm.h"
ISR(ADC_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	df 93       	push	r29
      b2:	cf 93       	push	r28
      b4:	cd b7       	in	r28, 0x3d	; 61
      b6:	de b7       	in	r29, 0x3e	; 62
}
      b8:	cf 91       	pop	r28
      ba:	df 91       	pop	r29
      bc:	0f 90       	pop	r0
      be:	0f be       	out	0x3f, r0	; 63
      c0:	0f 90       	pop	r0
      c2:	1f 90       	pop	r1
      c4:	18 95       	reti

000000c6 <adc_start>:
void adc_start(void)
{
      c6:	df 93       	push	r29
      c8:	cf 93       	push	r28
      ca:	cd b7       	in	r28, 0x3d	; 61
      cc:	de b7       	in	r29, 0x3e	; 62
    ADCSRA |= (1 << ADPS2)
      ce:	aa e7       	ldi	r26, 0x7A	; 122
      d0:	b0 e0       	ldi	r27, 0x00	; 0
      d2:	ea e7       	ldi	r30, 0x7A	; 122
      d4:	f0 e0       	ldi	r31, 0x00	; 0
      d6:	80 81       	ld	r24, Z
      d8:	87 60       	ori	r24, 0x07	; 7
      da:	8c 93       	st	X, r24
            | (1 << ADPS1)
            | (1 << ADPS0); // Set ADC prescaler to 128 - 125KHz sample rate @ 16MHz
    ADMUX |= (1 << REFS0); // Set ADC reference to AVCC
      dc:	ac e7       	ldi	r26, 0x7C	; 124
      de:	b0 e0       	ldi	r27, 0x00	; 0
      e0:	ec e7       	ldi	r30, 0x7C	; 124
      e2:	f0 e0       	ldi	r31, 0x00	; 0
      e4:	80 81       	ld	r24, Z
      e6:	80 64       	ori	r24, 0x40	; 64
      e8:	8c 93       	st	X, r24
    ADMUX |= (1 << ADLAR); // Left adjust ADC result to allow easy 8 bit reading
      ea:	ac e7       	ldi	r26, 0x7C	; 124
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	ec e7       	ldi	r30, 0x7C	; 124
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	80 81       	ld	r24, Z
      f4:	80 62       	ori	r24, 0x20	; 32
      f6:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADATE);
      f8:	aa e7       	ldi	r26, 0x7A	; 122
      fa:	b0 e0       	ldi	r27, 0x00	; 0
      fc:	ea e7       	ldi	r30, 0x7A	; 122
      fe:	f0 e0       	ldi	r31, 0x00	; 0
     100:	80 81       	ld	r24, Z
     102:	80 62       	ori	r24, 0x20	; 32
     104:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADEN);  // Enable ADC
     106:	aa e7       	ldi	r26, 0x7A	; 122
     108:	b0 e0       	ldi	r27, 0x00	; 0
     10a:	ea e7       	ldi	r30, 0x7A	; 122
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	80 81       	ld	r24, Z
     110:	80 68       	ori	r24, 0x80	; 128
     112:	8c 93       	st	X, r24
    ADCSRA |= (1 << ADIE);  // Enable ADC Interrupt
     114:	aa e7       	ldi	r26, 0x7A	; 122
     116:	b0 e0       	ldi	r27, 0x00	; 0
     118:	ea e7       	ldi	r30, 0x7A	; 122
     11a:	f0 e0       	ldi	r31, 0x00	; 0
     11c:	80 81       	ld	r24, Z
     11e:	88 60       	ori	r24, 0x08	; 8
     120:	8c 93       	st	X, r24
    sei();
     122:	78 94       	sei
    ADCSRA |= (1 << ADSC);  // Start A2D Conversions
     124:	aa e7       	ldi	r26, 0x7A	; 122
     126:	b0 e0       	ldi	r27, 0x00	; 0
     128:	ea e7       	ldi	r30, 0x7A	; 122
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	80 81       	ld	r24, Z
     12e:	80 64       	ori	r24, 0x40	; 64
     130:	8c 93       	st	X, r24
}
     132:	cf 91       	pop	r28
     134:	df 91       	pop	r29
     136:	08 95       	ret

00000138 <adc_stop>:
void adc_stop(){
     138:	df 93       	push	r29
     13a:	cf 93       	push	r28
     13c:	cd b7       	in	r28, 0x3d	; 61
     13e:	de b7       	in	r29, 0x3e	; 62
    //stop the ADC
    ADCSRA |= (0 << ADSC);
     140:	ea e7       	ldi	r30, 0x7A	; 122
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	aa e7       	ldi	r26, 0x7A	; 122
     146:	b0 e0       	ldi	r27, 0x00	; 0
     148:	8c 91       	ld	r24, X
     14a:	80 83       	st	Z, r24
}
     14c:	cf 91       	pop	r28
     14e:	df 91       	pop	r29
     150:	08 95       	ret

00000152 <adc_change>:
void adc_change(int chan){
     152:	df 93       	push	r29
     154:	cf 93       	push	r28
     156:	00 d0       	rcall	.+0      	; 0x158 <adc_change+0x6>
     158:	00 d0       	rcall	.+0      	; 0x15a <adc_change+0x8>
     15a:	cd b7       	in	r28, 0x3d	; 61
     15c:	de b7       	in	r29, 0x3e	; 62
     15e:	9a 83       	std	Y+2, r25	; 0x02
     160:	89 83       	std	Y+1, r24	; 0x01
    //stop the ADC
    ADCSRA |= (0 << ADSC);
     162:	ea e7       	ldi	r30, 0x7A	; 122
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	aa e7       	ldi	r26, 0x7A	; 122
     168:	b0 e0       	ldi	r27, 0x00	; 0
     16a:	8c 91       	ld	r24, X
     16c:	80 83       	st	Z, r24
    //and now change the ADMUX bits to fit which channal you want to use, this should probably be replaced by a switch soon
    switch (chan) {
     16e:	89 81       	ldd	r24, Y+1	; 0x01
     170:	9a 81       	ldd	r25, Y+2	; 0x02
     172:	9c 83       	std	Y+4, r25	; 0x04
     174:	8b 83       	std	Y+3, r24	; 0x03
     176:	8b 81       	ldd	r24, Y+3	; 0x03
     178:	9c 81       	ldd	r25, Y+4	; 0x04
     17a:	84 30       	cpi	r24, 0x04	; 4
     17c:	91 05       	cpc	r25, r1
     17e:	09 f4       	brne	.+2      	; 0x182 <adc_change+0x30>
     180:	56 c0       	rjmp	.+172    	; 0x22e <adc_change+0xdc>
     182:	8b 81       	ldd	r24, Y+3	; 0x03
     184:	9c 81       	ldd	r25, Y+4	; 0x04
     186:	85 30       	cpi	r24, 0x05	; 5
     188:	91 05       	cpc	r25, r1
     18a:	d4 f4       	brge	.+52     	; 0x1c0 <adc_change+0x6e>
     18c:	8b 81       	ldd	r24, Y+3	; 0x03
     18e:	9c 81       	ldd	r25, Y+4	; 0x04
     190:	81 30       	cpi	r24, 0x01	; 1
     192:	91 05       	cpc	r25, r1
     194:	a1 f1       	breq	.+104    	; 0x1fe <adc_change+0xac>
     196:	8b 81       	ldd	r24, Y+3	; 0x03
     198:	9c 81       	ldd	r25, Y+4	; 0x04
     19a:	82 30       	cpi	r24, 0x02	; 2
     19c:	91 05       	cpc	r25, r1
     19e:	2c f4       	brge	.+10     	; 0x1aa <adc_change+0x58>
     1a0:	8b 81       	ldd	r24, Y+3	; 0x03
     1a2:	9c 81       	ldd	r25, Y+4	; 0x04
     1a4:	00 97       	sbiw	r24, 0x00	; 0
     1a6:	21 f1       	breq	.+72     	; 0x1f0 <adc_change+0x9e>
     1a8:	69 c0       	rjmp	.+210    	; 0x27c <adc_change+0x12a>
     1aa:	8b 81       	ldd	r24, Y+3	; 0x03
     1ac:	9c 81       	ldd	r25, Y+4	; 0x04
     1ae:	82 30       	cpi	r24, 0x02	; 2
     1b0:	91 05       	cpc	r25, r1
     1b2:	69 f1       	breq	.+90     	; 0x20e <adc_change+0xbc>
     1b4:	8b 81       	ldd	r24, Y+3	; 0x03
     1b6:	9c 81       	ldd	r25, Y+4	; 0x04
     1b8:	83 30       	cpi	r24, 0x03	; 3
     1ba:	91 05       	cpc	r25, r1
     1bc:	81 f1       	breq	.+96     	; 0x21e <adc_change+0xcc>
     1be:	5e c0       	rjmp	.+188    	; 0x27c <adc_change+0x12a>
     1c0:	8b 81       	ldd	r24, Y+3	; 0x03
     1c2:	9c 81       	ldd	r25, Y+4	; 0x04
     1c4:	86 30       	cpi	r24, 0x06	; 6
     1c6:	91 05       	cpc	r25, r1
     1c8:	09 f4       	brne	.+2      	; 0x1cc <adc_change+0x7a>
     1ca:	41 c0       	rjmp	.+130    	; 0x24e <adc_change+0xfc>
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	86 30       	cpi	r24, 0x06	; 6
     1d2:	91 05       	cpc	r25, r1
     1d4:	a4 f1       	brlt	.+104    	; 0x23e <adc_change+0xec>
     1d6:	8b 81       	ldd	r24, Y+3	; 0x03
     1d8:	9c 81       	ldd	r25, Y+4	; 0x04
     1da:	87 30       	cpi	r24, 0x07	; 7
     1dc:	91 05       	cpc	r25, r1
     1de:	09 f4       	brne	.+2      	; 0x1e2 <adc_change+0x90>
     1e0:	3e c0       	rjmp	.+124    	; 0x25e <adc_change+0x10c>
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	9c 81       	ldd	r25, Y+4	; 0x04
     1e6:	88 30       	cpi	r24, 0x08	; 8
     1e8:	91 05       	cpc	r25, r1
     1ea:	09 f4       	brne	.+2      	; 0x1ee <adc_change+0x9c>
     1ec:	40 c0       	rjmp	.+128    	; 0x26e <adc_change+0x11c>
     1ee:	46 c0       	rjmp	.+140    	; 0x27c <adc_change+0x12a>
        case 0:
            ADMUX |= (0 << MUX0);
     1f0:	ec e7       	ldi	r30, 0x7C	; 124
     1f2:	f0 e0       	ldi	r31, 0x00	; 0
     1f4:	ac e7       	ldi	r26, 0x7C	; 124
     1f6:	b0 e0       	ldi	r27, 0x00	; 0
     1f8:	8c 91       	ld	r24, X
     1fa:	80 83       	st	Z, r24
     1fc:	3f c0       	rjmp	.+126    	; 0x27c <adc_change+0x12a>
            break;
        case 1:
            ADMUX |= (1 << MUX0);
     1fe:	ac e7       	ldi	r26, 0x7C	; 124
     200:	b0 e0       	ldi	r27, 0x00	; 0
     202:	ec e7       	ldi	r30, 0x7C	; 124
     204:	f0 e0       	ldi	r31, 0x00	; 0
     206:	80 81       	ld	r24, Z
     208:	81 60       	ori	r24, 0x01	; 1
     20a:	8c 93       	st	X, r24
     20c:	37 c0       	rjmp	.+110    	; 0x27c <adc_change+0x12a>
            break;
        case 2:
            ADMUX |= (1 << MUX1);
     20e:	ac e7       	ldi	r26, 0x7C	; 124
     210:	b0 e0       	ldi	r27, 0x00	; 0
     212:	ec e7       	ldi	r30, 0x7C	; 124
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	82 60       	ori	r24, 0x02	; 2
     21a:	8c 93       	st	X, r24
     21c:	2f c0       	rjmp	.+94     	; 0x27c <adc_change+0x12a>
            break;
        case 3:
            ADMUX |= (1 << MUX0)
     21e:	ac e7       	ldi	r26, 0x7C	; 124
     220:	b0 e0       	ldi	r27, 0x00	; 0
     222:	ec e7       	ldi	r30, 0x7C	; 124
     224:	f0 e0       	ldi	r31, 0x00	; 0
     226:	80 81       	ld	r24, Z
     228:	83 60       	ori	r24, 0x03	; 3
     22a:	8c 93       	st	X, r24
     22c:	27 c0       	rjmp	.+78     	; 0x27c <adc_change+0x12a>
                  |  (1 << MUX1);
            break;
        case 4:
            ADMUX |= (1 << MUX2);
     22e:	ac e7       	ldi	r26, 0x7C	; 124
     230:	b0 e0       	ldi	r27, 0x00	; 0
     232:	ec e7       	ldi	r30, 0x7C	; 124
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	84 60       	ori	r24, 0x04	; 4
     23a:	8c 93       	st	X, r24
     23c:	1f c0       	rjmp	.+62     	; 0x27c <adc_change+0x12a>
            break;
        case 5:
            ADMUX |= (1 << MUX0)
     23e:	ac e7       	ldi	r26, 0x7C	; 124
     240:	b0 e0       	ldi	r27, 0x00	; 0
     242:	ec e7       	ldi	r30, 0x7C	; 124
     244:	f0 e0       	ldi	r31, 0x00	; 0
     246:	80 81       	ld	r24, Z
     248:	85 60       	ori	r24, 0x05	; 5
     24a:	8c 93       	st	X, r24
     24c:	17 c0       	rjmp	.+46     	; 0x27c <adc_change+0x12a>
                  |  (1 << MUX2);
            break;
        case 6:
            ADMUX |= (1 << MUX1)
     24e:	ac e7       	ldi	r26, 0x7C	; 124
     250:	b0 e0       	ldi	r27, 0x00	; 0
     252:	ec e7       	ldi	r30, 0x7C	; 124
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	86 60       	ori	r24, 0x06	; 6
     25a:	8c 93       	st	X, r24
     25c:	0f c0       	rjmp	.+30     	; 0x27c <adc_change+0x12a>
                  |  (1 << MUX2);
            break;
        case 7:
            ADMUX |= (1 << MUX0)
     25e:	ac e7       	ldi	r26, 0x7C	; 124
     260:	b0 e0       	ldi	r27, 0x00	; 0
     262:	ec e7       	ldi	r30, 0x7C	; 124
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	80 81       	ld	r24, Z
     268:	87 60       	ori	r24, 0x07	; 7
     26a:	8c 93       	st	X, r24
     26c:	07 c0       	rjmp	.+14     	; 0x27c <adc_change+0x12a>
                  |  (1 << MUX1)
                  |  (1 << MUX2);
            break;
        case 8:
            ADMUX |= (1 << MUX3);
     26e:	ac e7       	ldi	r26, 0x7C	; 124
     270:	b0 e0       	ldi	r27, 0x00	; 0
     272:	ec e7       	ldi	r30, 0x7C	; 124
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 81       	ld	r24, Z
     278:	88 60       	ori	r24, 0x08	; 8
     27a:	8c 93       	st	X, r24
               | (1 << MUX2);
    }
    if (chan == 8) {
        ADMUX |= (1 << MUX3);
    }*/
    ADCSRA |= (1 << ADSC);
     27c:	aa e7       	ldi	r26, 0x7A	; 122
     27e:	b0 e0       	ldi	r27, 0x00	; 0
     280:	ea e7       	ldi	r30, 0x7A	; 122
     282:	f0 e0       	ldi	r31, 0x00	; 0
     284:	80 81       	ld	r24, Z
     286:	80 64       	ori	r24, 0x40	; 64
     288:	8c 93       	st	X, r24
}
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	cf 91       	pop	r28
     294:	df 91       	pop	r29
     296:	08 95       	ret

00000298 <all_good>:
freenode - JoshAshby
*/
//-------------------------------------------
//add a basica bios that will take, start the ADC, calibrate the sensors to what value they should try to stay at
//also go through and make sure everything is working from what it can tell if there is an error then it will blink the status led
void all_good(){//turn the status led on
     298:	df 93       	push	r29
     29a:	cf 93       	push	r28
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
    out('D', 3, 1);
     2a0:	84 e4       	ldi	r24, 0x44	; 68
     2a2:	63 e0       	ldi	r22, 0x03	; 3
     2a4:	70 e0       	ldi	r23, 0x00	; 0
     2a6:	41 e0       	ldi	r20, 0x01	; 1
     2a8:	50 e0       	ldi	r21, 0x00	; 0
     2aa:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
}
     2ae:	cf 91       	pop	r28
     2b0:	df 91       	pop	r29
     2b2:	08 95       	ret

000002b4 <oh_crap>:
void oh_crap(){//status led off
     2b4:	df 93       	push	r29
     2b6:	cf 93       	push	r28
     2b8:	cd b7       	in	r28, 0x3d	; 61
     2ba:	de b7       	in	r29, 0x3e	; 62
    out('D', 3, 0);
     2bc:	84 e4       	ldi	r24, 0x44	; 68
     2be:	63 e0       	ldi	r22, 0x03	; 3
     2c0:	70 e0       	ldi	r23, 0x00	; 0
     2c2:	40 e0       	ldi	r20, 0x00	; 0
     2c4:	50 e0       	ldi	r21, 0x00	; 0
     2c6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
}
     2ca:	cf 91       	pop	r28
     2cc:	df 91       	pop	r29
     2ce:	08 95       	ret

000002d0 <error>:
void error(){//blink the status led if there is an error
     2d0:	df 93       	push	r29
     2d2:	cf 93       	push	r28
     2d4:	cd b7       	in	r28, 0x3d	; 61
     2d6:	de b7       	in	r29, 0x3e	; 62
     2d8:	6c 97       	sbiw	r28, 0x1c	; 28
     2da:	0f b6       	in	r0, 0x3f	; 63
     2dc:	f8 94       	cli
     2de:	de bf       	out	0x3e, r29	; 62
     2e0:	0f be       	out	0x3f, r0	; 63
     2e2:	cd bf       	out	0x3d, r28	; 61
    out('D', 3, 1);
     2e4:	84 e4       	ldi	r24, 0x44	; 68
     2e6:	63 e0       	ldi	r22, 0x03	; 3
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	50 e0       	ldi	r21, 0x00	; 0
     2ee:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	aa ef       	ldi	r26, 0xFA	; 250
     2f8:	b3 e4       	ldi	r27, 0x43	; 67
     2fa:	89 8f       	std	Y+25, r24	; 0x19
     2fc:	9a 8f       	std	Y+26, r25	; 0x1a
     2fe:	ab 8f       	std	Y+27, r26	; 0x1b
     300:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     302:	69 8d       	ldd	r22, Y+25	; 0x19
     304:	7a 8d       	ldd	r23, Y+26	; 0x1a
     306:	8b 8d       	ldd	r24, Y+27	; 0x1b
     308:	9c 8d       	ldd	r25, Y+28	; 0x1c
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0
     30e:	4a e7       	ldi	r20, 0x7A	; 122
     310:	55 e4       	ldi	r21, 0x45	; 69
     312:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     316:	dc 01       	movw	r26, r24
     318:	cb 01       	movw	r24, r22
     31a:	8d 8b       	std	Y+21, r24	; 0x15
     31c:	9e 8b       	std	Y+22, r25	; 0x16
     31e:	af 8b       	std	Y+23, r26	; 0x17
     320:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     322:	6d 89       	ldd	r22, Y+21	; 0x15
     324:	7e 89       	ldd	r23, Y+22	; 0x16
     326:	8f 89       	ldd	r24, Y+23	; 0x17
     328:	98 8d       	ldd	r25, Y+24	; 0x18
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	40 e8       	ldi	r20, 0x80	; 128
     330:	5f e3       	ldi	r21, 0x3F	; 63
     332:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     336:	88 23       	and	r24, r24
     338:	2c f4       	brge	.+10     	; 0x344 <error+0x74>
		__ticks = 1;
     33a:	81 e0       	ldi	r24, 0x01	; 1
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	9c 8b       	std	Y+20, r25	; 0x14
     340:	8b 8b       	std	Y+19, r24	; 0x13
     342:	3f c0       	rjmp	.+126    	; 0x3c2 <error+0xf2>
	else if (__tmp > 65535)
     344:	6d 89       	ldd	r22, Y+21	; 0x15
     346:	7e 89       	ldd	r23, Y+22	; 0x16
     348:	8f 89       	ldd	r24, Y+23	; 0x17
     34a:	98 8d       	ldd	r25, Y+24	; 0x18
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	3f ef       	ldi	r19, 0xFF	; 255
     350:	4f e7       	ldi	r20, 0x7F	; 127
     352:	57 e4       	ldi	r21, 0x47	; 71
     354:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     358:	18 16       	cp	r1, r24
     35a:	4c f5       	brge	.+82     	; 0x3ae <error+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     35c:	69 8d       	ldd	r22, Y+25	; 0x19
     35e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     360:	8b 8d       	ldd	r24, Y+27	; 0x1b
     362:	9c 8d       	ldd	r25, Y+28	; 0x1c
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	40 e2       	ldi	r20, 0x20	; 32
     36a:	51 e4       	ldi	r21, 0x41	; 65
     36c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     370:	dc 01       	movw	r26, r24
     372:	cb 01       	movw	r24, r22
     374:	bc 01       	movw	r22, r24
     376:	cd 01       	movw	r24, r26
     378:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     37c:	dc 01       	movw	r26, r24
     37e:	cb 01       	movw	r24, r22
     380:	9c 8b       	std	Y+20, r25	; 0x14
     382:	8b 8b       	std	Y+19, r24	; 0x13
     384:	0f c0       	rjmp	.+30     	; 0x3a4 <error+0xd4>
     386:	80 e9       	ldi	r24, 0x90	; 144
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	9a 8b       	std	Y+18, r25	; 0x12
     38c:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     38e:	89 89       	ldd	r24, Y+17	; 0x11
     390:	9a 89       	ldd	r25, Y+18	; 0x12
     392:	01 97       	sbiw	r24, 0x01	; 1
     394:	f1 f7       	brne	.-4      	; 0x392 <error+0xc2>
     396:	9a 8b       	std	Y+18, r25	; 0x12
     398:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     39a:	8b 89       	ldd	r24, Y+19	; 0x13
     39c:	9c 89       	ldd	r25, Y+20	; 0x14
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	9c 8b       	std	Y+20, r25	; 0x14
     3a2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3a4:	8b 89       	ldd	r24, Y+19	; 0x13
     3a6:	9c 89       	ldd	r25, Y+20	; 0x14
     3a8:	00 97       	sbiw	r24, 0x00	; 0
     3aa:	69 f7       	brne	.-38     	; 0x386 <error+0xb6>
     3ac:	14 c0       	rjmp	.+40     	; 0x3d6 <error+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ae:	6d 89       	ldd	r22, Y+21	; 0x15
     3b0:	7e 89       	ldd	r23, Y+22	; 0x16
     3b2:	8f 89       	ldd	r24, Y+23	; 0x17
     3b4:	98 8d       	ldd	r25, Y+24	; 0x18
     3b6:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     3ba:	dc 01       	movw	r26, r24
     3bc:	cb 01       	movw	r24, r22
     3be:	9c 8b       	std	Y+20, r25	; 0x14
     3c0:	8b 8b       	std	Y+19, r24	; 0x13
     3c2:	8b 89       	ldd	r24, Y+19	; 0x13
     3c4:	9c 89       	ldd	r25, Y+20	; 0x14
     3c6:	98 8b       	std	Y+16, r25	; 0x10
     3c8:	8f 87       	std	Y+15, r24	; 0x0f
     3ca:	8f 85       	ldd	r24, Y+15	; 0x0f
     3cc:	98 89       	ldd	r25, Y+16	; 0x10
     3ce:	01 97       	sbiw	r24, 0x01	; 1
     3d0:	f1 f7       	brne	.-4      	; 0x3ce <error+0xfe>
     3d2:	98 8b       	std	Y+16, r25	; 0x10
     3d4:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(500);
    out('D', 3, 0);
     3d6:	84 e4       	ldi	r24, 0x44	; 68
     3d8:	63 e0       	ldi	r22, 0x03	; 3
     3da:	70 e0       	ldi	r23, 0x00	; 0
     3dc:	40 e0       	ldi	r20, 0x00	; 0
     3de:	50 e0       	ldi	r21, 0x00	; 0
     3e0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	aa ef       	ldi	r26, 0xFA	; 250
     3ea:	b3 e4       	ldi	r27, 0x43	; 67
     3ec:	8b 87       	std	Y+11, r24	; 0x0b
     3ee:	9c 87       	std	Y+12, r25	; 0x0c
     3f0:	ad 87       	std	Y+13, r26	; 0x0d
     3f2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3f4:	6b 85       	ldd	r22, Y+11	; 0x0b
     3f6:	7c 85       	ldd	r23, Y+12	; 0x0c
     3f8:	8d 85       	ldd	r24, Y+13	; 0x0d
     3fa:	9e 85       	ldd	r25, Y+14	; 0x0e
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	4a e7       	ldi	r20, 0x7A	; 122
     402:	55 e4       	ldi	r21, 0x45	; 69
     404:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     408:	dc 01       	movw	r26, r24
     40a:	cb 01       	movw	r24, r22
     40c:	8f 83       	std	Y+7, r24	; 0x07
     40e:	98 87       	std	Y+8, r25	; 0x08
     410:	a9 87       	std	Y+9, r26	; 0x09
     412:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     414:	6f 81       	ldd	r22, Y+7	; 0x07
     416:	78 85       	ldd	r23, Y+8	; 0x08
     418:	89 85       	ldd	r24, Y+9	; 0x09
     41a:	9a 85       	ldd	r25, Y+10	; 0x0a
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	40 e8       	ldi	r20, 0x80	; 128
     422:	5f e3       	ldi	r21, 0x3F	; 63
     424:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     428:	88 23       	and	r24, r24
     42a:	2c f4       	brge	.+10     	; 0x436 <error+0x166>
		__ticks = 1;
     42c:	81 e0       	ldi	r24, 0x01	; 1
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	9e 83       	std	Y+6, r25	; 0x06
     432:	8d 83       	std	Y+5, r24	; 0x05
     434:	3f c0       	rjmp	.+126    	; 0x4b4 <error+0x1e4>
	else if (__tmp > 65535)
     436:	6f 81       	ldd	r22, Y+7	; 0x07
     438:	78 85       	ldd	r23, Y+8	; 0x08
     43a:	89 85       	ldd	r24, Y+9	; 0x09
     43c:	9a 85       	ldd	r25, Y+10	; 0x0a
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	3f ef       	ldi	r19, 0xFF	; 255
     442:	4f e7       	ldi	r20, 0x7F	; 127
     444:	57 e4       	ldi	r21, 0x47	; 71
     446:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     44a:	18 16       	cp	r1, r24
     44c:	4c f5       	brge	.+82     	; 0x4a0 <error+0x1d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     44e:	6b 85       	ldd	r22, Y+11	; 0x0b
     450:	7c 85       	ldd	r23, Y+12	; 0x0c
     452:	8d 85       	ldd	r24, Y+13	; 0x0d
     454:	9e 85       	ldd	r25, Y+14	; 0x0e
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	30 e0       	ldi	r19, 0x00	; 0
     45a:	40 e2       	ldi	r20, 0x20	; 32
     45c:	51 e4       	ldi	r21, 0x41	; 65
     45e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     462:	dc 01       	movw	r26, r24
     464:	cb 01       	movw	r24, r22
     466:	bc 01       	movw	r22, r24
     468:	cd 01       	movw	r24, r26
     46a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     46e:	dc 01       	movw	r26, r24
     470:	cb 01       	movw	r24, r22
     472:	9e 83       	std	Y+6, r25	; 0x06
     474:	8d 83       	std	Y+5, r24	; 0x05
     476:	0f c0       	rjmp	.+30     	; 0x496 <error+0x1c6>
     478:	80 e9       	ldi	r24, 0x90	; 144
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	9c 83       	std	Y+4, r25	; 0x04
     47e:	8b 83       	std	Y+3, r24	; 0x03
     480:	8b 81       	ldd	r24, Y+3	; 0x03
     482:	9c 81       	ldd	r25, Y+4	; 0x04
     484:	01 97       	sbiw	r24, 0x01	; 1
     486:	f1 f7       	brne	.-4      	; 0x484 <error+0x1b4>
     488:	9c 83       	std	Y+4, r25	; 0x04
     48a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     48c:	8d 81       	ldd	r24, Y+5	; 0x05
     48e:	9e 81       	ldd	r25, Y+6	; 0x06
     490:	01 97       	sbiw	r24, 0x01	; 1
     492:	9e 83       	std	Y+6, r25	; 0x06
     494:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     496:	8d 81       	ldd	r24, Y+5	; 0x05
     498:	9e 81       	ldd	r25, Y+6	; 0x06
     49a:	00 97       	sbiw	r24, 0x00	; 0
     49c:	69 f7       	brne	.-38     	; 0x478 <error+0x1a8>
     49e:	14 c0       	rjmp	.+40     	; 0x4c8 <error+0x1f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4a0:	6f 81       	ldd	r22, Y+7	; 0x07
     4a2:	78 85       	ldd	r23, Y+8	; 0x08
     4a4:	89 85       	ldd	r24, Y+9	; 0x09
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     4ac:	dc 01       	movw	r26, r24
     4ae:	cb 01       	movw	r24, r22
     4b0:	9e 83       	std	Y+6, r25	; 0x06
     4b2:	8d 83       	std	Y+5, r24	; 0x05
     4b4:	8d 81       	ldd	r24, Y+5	; 0x05
     4b6:	9e 81       	ldd	r25, Y+6	; 0x06
     4b8:	9a 83       	std	Y+2, r25	; 0x02
     4ba:	89 83       	std	Y+1, r24	; 0x01
     4bc:	89 81       	ldd	r24, Y+1	; 0x01
     4be:	9a 81       	ldd	r25, Y+2	; 0x02
     4c0:	01 97       	sbiw	r24, 0x01	; 1
     4c2:	f1 f7       	brne	.-4      	; 0x4c0 <error+0x1f0>
     4c4:	9a 83       	std	Y+2, r25	; 0x02
     4c6:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(500);
}
     4c8:	6c 96       	adiw	r28, 0x1c	; 28
     4ca:	0f b6       	in	r0, 0x3f	; 63
     4cc:	f8 94       	cli
     4ce:	de bf       	out	0x3e, r29	; 62
     4d0:	0f be       	out	0x3f, r0	; 63
     4d2:	cd bf       	out	0x3d, r28	; 61
     4d4:	cf 91       	pop	r28
     4d6:	df 91       	pop	r29
     4d8:	08 95       	ret

000004da <setup>:
void setup(){
     4da:	df 93       	push	r29
     4dc:	cf 93       	push	r28
     4de:	cd b7       	in	r28, 0x3d	; 61
     4e0:	de b7       	in	r29, 0x3e	; 62
    DDRD |= (1<<2);//LED power
     4e2:	aa e2       	ldi	r26, 0x2A	; 42
     4e4:	b0 e0       	ldi	r27, 0x00	; 0
     4e6:	ea e2       	ldi	r30, 0x2A	; 42
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 81       	ld	r24, Z
     4ec:	84 60       	ori	r24, 0x04	; 4
     4ee:	8c 93       	st	X, r24
    DDRD |= (1<<3);//LED Status
     4f0:	aa e2       	ldi	r26, 0x2A	; 42
     4f2:	b0 e0       	ldi	r27, 0x00	; 0
     4f4:	ea e2       	ldi	r30, 0x2A	; 42
     4f6:	f0 e0       	ldi	r31, 0x00	; 0
     4f8:	80 81       	ld	r24, Z
     4fa:	88 60       	ori	r24, 0x08	; 8
     4fc:	8c 93       	st	X, r24
    DDRD |= (1<<4);//relay back
     4fe:	aa e2       	ldi	r26, 0x2A	; 42
     500:	b0 e0       	ldi	r27, 0x00	; 0
     502:	ea e2       	ldi	r30, 0x2A	; 42
     504:	f0 e0       	ldi	r31, 0x00	; 0
     506:	80 81       	ld	r24, Z
     508:	80 61       	ori	r24, 0x10	; 16
     50a:	8c 93       	st	X, r24
    DDRD |= (1<<5);//relay front
     50c:	aa e2       	ldi	r26, 0x2A	; 42
     50e:	b0 e0       	ldi	r27, 0x00	; 0
     510:	ea e2       	ldi	r30, 0x2A	; 42
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	80 62       	ori	r24, 0x20	; 32
     518:	8c 93       	st	X, r24
    out('D', 2, 1);
     51a:	84 e4       	ldi	r24, 0x44	; 68
     51c:	62 e0       	ldi	r22, 0x02	; 2
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	41 e0       	ldi	r20, 0x01	; 1
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
    pwm_setup1();
     528:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <pwm_setup1>
    adc_start();//because we're using interrupts ADCH will auto update'
     52c:	0e 94 63 00 	call	0xc6	; 0xc6 <adc_start>
    all_good();
     530:	0e 94 4c 01 	call	0x298	; 0x298 <all_good>
}
     534:	cf 91       	pop	r28
     536:	df 91       	pop	r29
     538:	08 95       	ret

0000053a <test>:
void test(){
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	df 93       	push	r29
     540:	cf 93       	push	r28
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	c4 55       	subi	r28, 0x54	; 84
     548:	d0 40       	sbci	r29, 0x00	; 0
     54a:	0f b6       	in	r0, 0x3f	; 63
     54c:	f8 94       	cli
     54e:	de bf       	out	0x3e, r29	; 62
     550:	0f be       	out	0x3f, r0	; 63
     552:	cd bf       	out	0x3d, r28	; 61
    pwm_ramp1A(255, 10);
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	6a e0       	ldi	r22, 0x0A	; 10
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <pwm_ramp1A>
     560:	fe 01       	movw	r30, r28
     562:	ef 5a       	subi	r30, 0xAF	; 175
     564:	ff 4f       	sbci	r31, 0xFF	; 255
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	aa ef       	ldi	r26, 0xFA	; 250
     56c:	b3 e4       	ldi	r27, 0x43	; 67
     56e:	80 83       	st	Z, r24
     570:	91 83       	std	Z+1, r25	; 0x01
     572:	a2 83       	std	Z+2, r26	; 0x02
     574:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     576:	8e 01       	movw	r16, r28
     578:	03 5b       	subi	r16, 0xB3	; 179
     57a:	1f 4f       	sbci	r17, 0xFF	; 255
     57c:	fe 01       	movw	r30, r28
     57e:	ef 5a       	subi	r30, 0xAF	; 175
     580:	ff 4f       	sbci	r31, 0xFF	; 255
     582:	60 81       	ld	r22, Z
     584:	71 81       	ldd	r23, Z+1	; 0x01
     586:	82 81       	ldd	r24, Z+2	; 0x02
     588:	93 81       	ldd	r25, Z+3	; 0x03
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	4a e7       	ldi	r20, 0x7A	; 122
     590:	55 e4       	ldi	r21, 0x45	; 69
     592:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     596:	dc 01       	movw	r26, r24
     598:	cb 01       	movw	r24, r22
     59a:	f8 01       	movw	r30, r16
     59c:	80 83       	st	Z, r24
     59e:	91 83       	std	Z+1, r25	; 0x01
     5a0:	a2 83       	std	Z+2, r26	; 0x02
     5a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5a4:	fe 01       	movw	r30, r28
     5a6:	e3 5b       	subi	r30, 0xB3	; 179
     5a8:	ff 4f       	sbci	r31, 0xFF	; 255
     5aa:	60 81       	ld	r22, Z
     5ac:	71 81       	ldd	r23, Z+1	; 0x01
     5ae:	82 81       	ldd	r24, Z+2	; 0x02
     5b0:	93 81       	ldd	r25, Z+3	; 0x03
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	40 e8       	ldi	r20, 0x80	; 128
     5b8:	5f e3       	ldi	r21, 0x3F	; 63
     5ba:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     5be:	88 23       	and	r24, r24
     5c0:	44 f4       	brge	.+16     	; 0x5d2 <test+0x98>
		__ticks = 1;
     5c2:	fe 01       	movw	r30, r28
     5c4:	e5 5b       	subi	r30, 0xB5	; 181
     5c6:	ff 4f       	sbci	r31, 0xFF	; 255
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	91 83       	std	Z+1, r25	; 0x01
     5ce:	80 83       	st	Z, r24
     5d0:	64 c0       	rjmp	.+200    	; 0x69a <test+0x160>
	else if (__tmp > 65535)
     5d2:	fe 01       	movw	r30, r28
     5d4:	e3 5b       	subi	r30, 0xB3	; 179
     5d6:	ff 4f       	sbci	r31, 0xFF	; 255
     5d8:	60 81       	ld	r22, Z
     5da:	71 81       	ldd	r23, Z+1	; 0x01
     5dc:	82 81       	ldd	r24, Z+2	; 0x02
     5de:	93 81       	ldd	r25, Z+3	; 0x03
     5e0:	20 e0       	ldi	r18, 0x00	; 0
     5e2:	3f ef       	ldi	r19, 0xFF	; 255
     5e4:	4f e7       	ldi	r20, 0x7F	; 127
     5e6:	57 e4       	ldi	r21, 0x47	; 71
     5e8:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     5ec:	18 16       	cp	r1, r24
     5ee:	0c f0       	brlt	.+2      	; 0x5f2 <test+0xb8>
     5f0:	43 c0       	rjmp	.+134    	; 0x678 <test+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5f2:	fe 01       	movw	r30, r28
     5f4:	ef 5a       	subi	r30, 0xAF	; 175
     5f6:	ff 4f       	sbci	r31, 0xFF	; 255
     5f8:	60 81       	ld	r22, Z
     5fa:	71 81       	ldd	r23, Z+1	; 0x01
     5fc:	82 81       	ldd	r24, Z+2	; 0x02
     5fe:	93 81       	ldd	r25, Z+3	; 0x03
     600:	20 e0       	ldi	r18, 0x00	; 0
     602:	30 e0       	ldi	r19, 0x00	; 0
     604:	40 e2       	ldi	r20, 0x20	; 32
     606:	51 e4       	ldi	r21, 0x41	; 65
     608:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     60c:	dc 01       	movw	r26, r24
     60e:	cb 01       	movw	r24, r22
     610:	8e 01       	movw	r16, r28
     612:	05 5b       	subi	r16, 0xB5	; 181
     614:	1f 4f       	sbci	r17, 0xFF	; 255
     616:	bc 01       	movw	r22, r24
     618:	cd 01       	movw	r24, r26
     61a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     61e:	dc 01       	movw	r26, r24
     620:	cb 01       	movw	r24, r22
     622:	f8 01       	movw	r30, r16
     624:	91 83       	std	Z+1, r25	; 0x01
     626:	80 83       	st	Z, r24
     628:	1f c0       	rjmp	.+62     	; 0x668 <test+0x12e>
     62a:	fe 01       	movw	r30, r28
     62c:	e7 5b       	subi	r30, 0xB7	; 183
     62e:	ff 4f       	sbci	r31, 0xFF	; 255
     630:	80 e9       	ldi	r24, 0x90	; 144
     632:	91 e0       	ldi	r25, 0x01	; 1
     634:	91 83       	std	Z+1, r25	; 0x01
     636:	80 83       	st	Z, r24
     638:	fe 01       	movw	r30, r28
     63a:	e7 5b       	subi	r30, 0xB7	; 183
     63c:	ff 4f       	sbci	r31, 0xFF	; 255
     63e:	80 81       	ld	r24, Z
     640:	91 81       	ldd	r25, Z+1	; 0x01
     642:	01 97       	sbiw	r24, 0x01	; 1
     644:	f1 f7       	brne	.-4      	; 0x642 <test+0x108>
     646:	fe 01       	movw	r30, r28
     648:	e7 5b       	subi	r30, 0xB7	; 183
     64a:	ff 4f       	sbci	r31, 0xFF	; 255
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     650:	de 01       	movw	r26, r28
     652:	a5 5b       	subi	r26, 0xB5	; 181
     654:	bf 4f       	sbci	r27, 0xFF	; 255
     656:	fe 01       	movw	r30, r28
     658:	e5 5b       	subi	r30, 0xB5	; 181
     65a:	ff 4f       	sbci	r31, 0xFF	; 255
     65c:	80 81       	ld	r24, Z
     65e:	91 81       	ldd	r25, Z+1	; 0x01
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	11 96       	adiw	r26, 0x01	; 1
     664:	9c 93       	st	X, r25
     666:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     668:	fe 01       	movw	r30, r28
     66a:	e5 5b       	subi	r30, 0xB5	; 181
     66c:	ff 4f       	sbci	r31, 0xFF	; 255
     66e:	80 81       	ld	r24, Z
     670:	91 81       	ldd	r25, Z+1	; 0x01
     672:	00 97       	sbiw	r24, 0x00	; 0
     674:	d1 f6       	brne	.-76     	; 0x62a <test+0xf0>
     676:	27 c0       	rjmp	.+78     	; 0x6c6 <test+0x18c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     678:	8e 01       	movw	r16, r28
     67a:	05 5b       	subi	r16, 0xB5	; 181
     67c:	1f 4f       	sbci	r17, 0xFF	; 255
     67e:	fe 01       	movw	r30, r28
     680:	e3 5b       	subi	r30, 0xB3	; 179
     682:	ff 4f       	sbci	r31, 0xFF	; 255
     684:	60 81       	ld	r22, Z
     686:	71 81       	ldd	r23, Z+1	; 0x01
     688:	82 81       	ldd	r24, Z+2	; 0x02
     68a:	93 81       	ldd	r25, Z+3	; 0x03
     68c:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     690:	dc 01       	movw	r26, r24
     692:	cb 01       	movw	r24, r22
     694:	f8 01       	movw	r30, r16
     696:	91 83       	std	Z+1, r25	; 0x01
     698:	80 83       	st	Z, r24
     69a:	de 01       	movw	r26, r28
     69c:	a9 5b       	subi	r26, 0xB9	; 185
     69e:	bf 4f       	sbci	r27, 0xFF	; 255
     6a0:	fe 01       	movw	r30, r28
     6a2:	e5 5b       	subi	r30, 0xB5	; 181
     6a4:	ff 4f       	sbci	r31, 0xFF	; 255
     6a6:	80 81       	ld	r24, Z
     6a8:	91 81       	ldd	r25, Z+1	; 0x01
     6aa:	8d 93       	st	X+, r24
     6ac:	9c 93       	st	X, r25
     6ae:	fe 01       	movw	r30, r28
     6b0:	e9 5b       	subi	r30, 0xB9	; 185
     6b2:	ff 4f       	sbci	r31, 0xFF	; 255
     6b4:	80 81       	ld	r24, Z
     6b6:	91 81       	ldd	r25, Z+1	; 0x01
     6b8:	01 97       	sbiw	r24, 0x01	; 1
     6ba:	f1 f7       	brne	.-4      	; 0x6b8 <test+0x17e>
     6bc:	fe 01       	movw	r30, r28
     6be:	e9 5b       	subi	r30, 0xB9	; 185
     6c0:	ff 4f       	sbci	r31, 0xFF	; 255
     6c2:	91 83       	std	Z+1, r25	; 0x01
     6c4:	80 83       	st	Z, r24
    _delay_ms(500);
    pwm_ramp1A(0, 10);
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	6a e0       	ldi	r22, 0x0A	; 10
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <pwm_ramp1A>
    out('D', 4, 1);
     6d2:	84 e4       	ldi	r24, 0x44	; 68
     6d4:	64 e0       	ldi	r22, 0x04	; 4
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	41 e0       	ldi	r20, 0x01	; 1
     6da:	50 e0       	ldi	r21, 0x00	; 0
     6dc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
    pwm_ramp1A(255, 10);
     6e0:	8f ef       	ldi	r24, 0xFF	; 255
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	6a e0       	ldi	r22, 0x0A	; 10
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <pwm_ramp1A>
     6ec:	fe 01       	movw	r30, r28
     6ee:	ed 5b       	subi	r30, 0xBD	; 189
     6f0:	ff 4f       	sbci	r31, 0xFF	; 255
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	aa ef       	ldi	r26, 0xFA	; 250
     6f8:	b3 e4       	ldi	r27, 0x43	; 67
     6fa:	80 83       	st	Z, r24
     6fc:	91 83       	std	Z+1, r25	; 0x01
     6fe:	a2 83       	std	Z+2, r26	; 0x02
     700:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     702:	8e 01       	movw	r16, r28
     704:	01 5c       	subi	r16, 0xC1	; 193
     706:	1f 4f       	sbci	r17, 0xFF	; 255
     708:	fe 01       	movw	r30, r28
     70a:	ed 5b       	subi	r30, 0xBD	; 189
     70c:	ff 4f       	sbci	r31, 0xFF	; 255
     70e:	60 81       	ld	r22, Z
     710:	71 81       	ldd	r23, Z+1	; 0x01
     712:	82 81       	ldd	r24, Z+2	; 0x02
     714:	93 81       	ldd	r25, Z+3	; 0x03
     716:	20 e0       	ldi	r18, 0x00	; 0
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	4a e7       	ldi	r20, 0x7A	; 122
     71c:	55 e4       	ldi	r21, 0x45	; 69
     71e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     722:	dc 01       	movw	r26, r24
     724:	cb 01       	movw	r24, r22
     726:	f8 01       	movw	r30, r16
     728:	80 83       	st	Z, r24
     72a:	91 83       	std	Z+1, r25	; 0x01
     72c:	a2 83       	std	Z+2, r26	; 0x02
     72e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     730:	fe 01       	movw	r30, r28
     732:	ff 96       	adiw	r30, 0x3f	; 63
     734:	60 81       	ld	r22, Z
     736:	71 81       	ldd	r23, Z+1	; 0x01
     738:	82 81       	ldd	r24, Z+2	; 0x02
     73a:	93 81       	ldd	r25, Z+3	; 0x03
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	40 e8       	ldi	r20, 0x80	; 128
     742:	5f e3       	ldi	r21, 0x3F	; 63
     744:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     748:	88 23       	and	r24, r24
     74a:	2c f4       	brge	.+10     	; 0x756 <test+0x21c>
		__ticks = 1;
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	9e af       	std	Y+62, r25	; 0x3e
     752:	8d af       	std	Y+61, r24	; 0x3d
     754:	46 c0       	rjmp	.+140    	; 0x7e2 <test+0x2a8>
	else if (__tmp > 65535)
     756:	fe 01       	movw	r30, r28
     758:	ff 96       	adiw	r30, 0x3f	; 63
     75a:	60 81       	ld	r22, Z
     75c:	71 81       	ldd	r23, Z+1	; 0x01
     75e:	82 81       	ldd	r24, Z+2	; 0x02
     760:	93 81       	ldd	r25, Z+3	; 0x03
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	3f ef       	ldi	r19, 0xFF	; 255
     766:	4f e7       	ldi	r20, 0x7F	; 127
     768:	57 e4       	ldi	r21, 0x47	; 71
     76a:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     76e:	18 16       	cp	r1, r24
     770:	64 f5       	brge	.+88     	; 0x7ca <test+0x290>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     772:	fe 01       	movw	r30, r28
     774:	ed 5b       	subi	r30, 0xBD	; 189
     776:	ff 4f       	sbci	r31, 0xFF	; 255
     778:	60 81       	ld	r22, Z
     77a:	71 81       	ldd	r23, Z+1	; 0x01
     77c:	82 81       	ldd	r24, Z+2	; 0x02
     77e:	93 81       	ldd	r25, Z+3	; 0x03
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	40 e2       	ldi	r20, 0x20	; 32
     786:	51 e4       	ldi	r21, 0x41	; 65
     788:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     78c:	dc 01       	movw	r26, r24
     78e:	cb 01       	movw	r24, r22
     790:	bc 01       	movw	r22, r24
     792:	cd 01       	movw	r24, r26
     794:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     798:	dc 01       	movw	r26, r24
     79a:	cb 01       	movw	r24, r22
     79c:	9e af       	std	Y+62, r25	; 0x3e
     79e:	8d af       	std	Y+61, r24	; 0x3d
     7a0:	0f c0       	rjmp	.+30     	; 0x7c0 <test+0x286>
     7a2:	80 e9       	ldi	r24, 0x90	; 144
     7a4:	91 e0       	ldi	r25, 0x01	; 1
     7a6:	9c af       	std	Y+60, r25	; 0x3c
     7a8:	8b af       	std	Y+59, r24	; 0x3b
     7aa:	8b ad       	ldd	r24, Y+59	; 0x3b
     7ac:	9c ad       	ldd	r25, Y+60	; 0x3c
     7ae:	01 97       	sbiw	r24, 0x01	; 1
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <test+0x274>
     7b2:	9c af       	std	Y+60, r25	; 0x3c
     7b4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7b6:	8d ad       	ldd	r24, Y+61	; 0x3d
     7b8:	9e ad       	ldd	r25, Y+62	; 0x3e
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	9e af       	std	Y+62, r25	; 0x3e
     7be:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c0:	8d ad       	ldd	r24, Y+61	; 0x3d
     7c2:	9e ad       	ldd	r25, Y+62	; 0x3e
     7c4:	00 97       	sbiw	r24, 0x00	; 0
     7c6:	69 f7       	brne	.-38     	; 0x7a2 <test+0x268>
     7c8:	16 c0       	rjmp	.+44     	; 0x7f6 <test+0x2bc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7ca:	fe 01       	movw	r30, r28
     7cc:	ff 96       	adiw	r30, 0x3f	; 63
     7ce:	60 81       	ld	r22, Z
     7d0:	71 81       	ldd	r23, Z+1	; 0x01
     7d2:	82 81       	ldd	r24, Z+2	; 0x02
     7d4:	93 81       	ldd	r25, Z+3	; 0x03
     7d6:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	9e af       	std	Y+62, r25	; 0x3e
     7e0:	8d af       	std	Y+61, r24	; 0x3d
     7e2:	8d ad       	ldd	r24, Y+61	; 0x3d
     7e4:	9e ad       	ldd	r25, Y+62	; 0x3e
     7e6:	9a af       	std	Y+58, r25	; 0x3a
     7e8:	89 af       	std	Y+57, r24	; 0x39
     7ea:	89 ad       	ldd	r24, Y+57	; 0x39
     7ec:	9a ad       	ldd	r25, Y+58	; 0x3a
     7ee:	01 97       	sbiw	r24, 0x01	; 1
     7f0:	f1 f7       	brne	.-4      	; 0x7ee <test+0x2b4>
     7f2:	9a af       	std	Y+58, r25	; 0x3a
     7f4:	89 af       	std	Y+57, r24	; 0x39
    _delay_ms(500);
    pwm_ramp1A(0,10);
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	90 e0       	ldi	r25, 0x00	; 0
     7fa:	6a e0       	ldi	r22, 0x0A	; 10
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	0e 94 4f 0e 	call	0x1c9e	; 0x1c9e <pwm_ramp1A>
    out('D', 4, 0);
     802:	84 e4       	ldi	r24, 0x44	; 68
     804:	64 e0       	ldi	r22, 0x04	; 4
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	40 e0       	ldi	r20, 0x00	; 0
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
    oh_crap();
     810:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <oh_crap>
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	aa e7       	ldi	r26, 0x7A	; 122
     81a:	b4 e4       	ldi	r27, 0x44	; 68
     81c:	8d ab       	std	Y+53, r24	; 0x35
     81e:	9e ab       	std	Y+54, r25	; 0x36
     820:	af ab       	std	Y+55, r26	; 0x37
     822:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     824:	6d a9       	ldd	r22, Y+53	; 0x35
     826:	7e a9       	ldd	r23, Y+54	; 0x36
     828:	8f a9       	ldd	r24, Y+55	; 0x37
     82a:	98 ad       	ldd	r25, Y+56	; 0x38
     82c:	20 e0       	ldi	r18, 0x00	; 0
     82e:	30 e0       	ldi	r19, 0x00	; 0
     830:	4a e7       	ldi	r20, 0x7A	; 122
     832:	55 e4       	ldi	r21, 0x45	; 69
     834:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     838:	dc 01       	movw	r26, r24
     83a:	cb 01       	movw	r24, r22
     83c:	89 ab       	std	Y+49, r24	; 0x31
     83e:	9a ab       	std	Y+50, r25	; 0x32
     840:	ab ab       	std	Y+51, r26	; 0x33
     842:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     844:	69 a9       	ldd	r22, Y+49	; 0x31
     846:	7a a9       	ldd	r23, Y+50	; 0x32
     848:	8b a9       	ldd	r24, Y+51	; 0x33
     84a:	9c a9       	ldd	r25, Y+52	; 0x34
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	40 e8       	ldi	r20, 0x80	; 128
     852:	5f e3       	ldi	r21, 0x3F	; 63
     854:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     858:	88 23       	and	r24, r24
     85a:	2c f4       	brge	.+10     	; 0x866 <test+0x32c>
		__ticks = 1;
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	98 ab       	std	Y+48, r25	; 0x30
     862:	8f a7       	std	Y+47, r24	; 0x2f
     864:	3f c0       	rjmp	.+126    	; 0x8e4 <test+0x3aa>
	else if (__tmp > 65535)
     866:	69 a9       	ldd	r22, Y+49	; 0x31
     868:	7a a9       	ldd	r23, Y+50	; 0x32
     86a:	8b a9       	ldd	r24, Y+51	; 0x33
     86c:	9c a9       	ldd	r25, Y+52	; 0x34
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	3f ef       	ldi	r19, 0xFF	; 255
     872:	4f e7       	ldi	r20, 0x7F	; 127
     874:	57 e4       	ldi	r21, 0x47	; 71
     876:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     87a:	18 16       	cp	r1, r24
     87c:	4c f5       	brge	.+82     	; 0x8d0 <test+0x396>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     87e:	6d a9       	ldd	r22, Y+53	; 0x35
     880:	7e a9       	ldd	r23, Y+54	; 0x36
     882:	8f a9       	ldd	r24, Y+55	; 0x37
     884:	98 ad       	ldd	r25, Y+56	; 0x38
     886:	20 e0       	ldi	r18, 0x00	; 0
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	40 e2       	ldi	r20, 0x20	; 32
     88c:	51 e4       	ldi	r21, 0x41	; 65
     88e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     892:	dc 01       	movw	r26, r24
     894:	cb 01       	movw	r24, r22
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     89e:	dc 01       	movw	r26, r24
     8a0:	cb 01       	movw	r24, r22
     8a2:	98 ab       	std	Y+48, r25	; 0x30
     8a4:	8f a7       	std	Y+47, r24	; 0x2f
     8a6:	0f c0       	rjmp	.+30     	; 0x8c6 <test+0x38c>
     8a8:	80 e9       	ldi	r24, 0x90	; 144
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	9e a7       	std	Y+46, r25	; 0x2e
     8ae:	8d a7       	std	Y+45, r24	; 0x2d
     8b0:	8d a5       	ldd	r24, Y+45	; 0x2d
     8b2:	9e a5       	ldd	r25, Y+46	; 0x2e
     8b4:	01 97       	sbiw	r24, 0x01	; 1
     8b6:	f1 f7       	brne	.-4      	; 0x8b4 <test+0x37a>
     8b8:	9e a7       	std	Y+46, r25	; 0x2e
     8ba:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8bc:	8f a5       	ldd	r24, Y+47	; 0x2f
     8be:	98 a9       	ldd	r25, Y+48	; 0x30
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	98 ab       	std	Y+48, r25	; 0x30
     8c4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8c6:	8f a5       	ldd	r24, Y+47	; 0x2f
     8c8:	98 a9       	ldd	r25, Y+48	; 0x30
     8ca:	00 97       	sbiw	r24, 0x00	; 0
     8cc:	69 f7       	brne	.-38     	; 0x8a8 <test+0x36e>
     8ce:	14 c0       	rjmp	.+40     	; 0x8f8 <test+0x3be>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8d0:	69 a9       	ldd	r22, Y+49	; 0x31
     8d2:	7a a9       	ldd	r23, Y+50	; 0x32
     8d4:	8b a9       	ldd	r24, Y+51	; 0x33
     8d6:	9c a9       	ldd	r25, Y+52	; 0x34
     8d8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     8dc:	dc 01       	movw	r26, r24
     8de:	cb 01       	movw	r24, r22
     8e0:	98 ab       	std	Y+48, r25	; 0x30
     8e2:	8f a7       	std	Y+47, r24	; 0x2f
     8e4:	8f a5       	ldd	r24, Y+47	; 0x2f
     8e6:	98 a9       	ldd	r25, Y+48	; 0x30
     8e8:	9c a7       	std	Y+44, r25	; 0x2c
     8ea:	8b a7       	std	Y+43, r24	; 0x2b
     8ec:	8b a5       	ldd	r24, Y+43	; 0x2b
     8ee:	9c a5       	ldd	r25, Y+44	; 0x2c
     8f0:	01 97       	sbiw	r24, 0x01	; 1
     8f2:	f1 f7       	brne	.-4      	; 0x8f0 <test+0x3b6>
     8f4:	9c a7       	std	Y+44, r25	; 0x2c
     8f6:	8b a7       	std	Y+43, r24	; 0x2b
    _delay_ms(1000);
    all_good();
     8f8:	0e 94 4c 01 	call	0x298	; 0x298 <all_good>
    pwm1B(255);
     8fc:	8f ef       	ldi	r24, 0xFF	; 255
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <pwm1B>
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	aa ef       	ldi	r26, 0xFA	; 250
     90a:	b3 e4       	ldi	r27, 0x43	; 67
     90c:	8f a3       	std	Y+39, r24	; 0x27
     90e:	98 a7       	std	Y+40, r25	; 0x28
     910:	a9 a7       	std	Y+41, r26	; 0x29
     912:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     914:	6f a1       	ldd	r22, Y+39	; 0x27
     916:	78 a5       	ldd	r23, Y+40	; 0x28
     918:	89 a5       	ldd	r24, Y+41	; 0x29
     91a:	9a a5       	ldd	r25, Y+42	; 0x2a
     91c:	20 e0       	ldi	r18, 0x00	; 0
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	4a e7       	ldi	r20, 0x7A	; 122
     922:	55 e4       	ldi	r21, 0x45	; 69
     924:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     928:	dc 01       	movw	r26, r24
     92a:	cb 01       	movw	r24, r22
     92c:	8b a3       	std	Y+35, r24	; 0x23
     92e:	9c a3       	std	Y+36, r25	; 0x24
     930:	ad a3       	std	Y+37, r26	; 0x25
     932:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     934:	6b a1       	ldd	r22, Y+35	; 0x23
     936:	7c a1       	ldd	r23, Y+36	; 0x24
     938:	8d a1       	ldd	r24, Y+37	; 0x25
     93a:	9e a1       	ldd	r25, Y+38	; 0x26
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e8       	ldi	r20, 0x80	; 128
     942:	5f e3       	ldi	r21, 0x3F	; 63
     944:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     948:	88 23       	and	r24, r24
     94a:	2c f4       	brge	.+10     	; 0x956 <__stack+0x57>
		__ticks = 1;
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	9a a3       	std	Y+34, r25	; 0x22
     952:	89 a3       	std	Y+33, r24	; 0x21
     954:	3f c0       	rjmp	.+126    	; 0x9d4 <__stack+0xd5>
	else if (__tmp > 65535)
     956:	6b a1       	ldd	r22, Y+35	; 0x23
     958:	7c a1       	ldd	r23, Y+36	; 0x24
     95a:	8d a1       	ldd	r24, Y+37	; 0x25
     95c:	9e a1       	ldd	r25, Y+38	; 0x26
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	3f ef       	ldi	r19, 0xFF	; 255
     962:	4f e7       	ldi	r20, 0x7F	; 127
     964:	57 e4       	ldi	r21, 0x47	; 71
     966:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     96a:	18 16       	cp	r1, r24
     96c:	4c f5       	brge	.+82     	; 0x9c0 <__stack+0xc1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     96e:	6f a1       	ldd	r22, Y+39	; 0x27
     970:	78 a5       	ldd	r23, Y+40	; 0x28
     972:	89 a5       	ldd	r24, Y+41	; 0x29
     974:	9a a5       	ldd	r25, Y+42	; 0x2a
     976:	20 e0       	ldi	r18, 0x00	; 0
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	40 e2       	ldi	r20, 0x20	; 32
     97c:	51 e4       	ldi	r21, 0x41	; 65
     97e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     982:	dc 01       	movw	r26, r24
     984:	cb 01       	movw	r24, r22
     986:	bc 01       	movw	r22, r24
     988:	cd 01       	movw	r24, r26
     98a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	9a a3       	std	Y+34, r25	; 0x22
     994:	89 a3       	std	Y+33, r24	; 0x21
     996:	0f c0       	rjmp	.+30     	; 0x9b6 <__stack+0xb7>
     998:	80 e9       	ldi	r24, 0x90	; 144
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	98 a3       	std	Y+32, r25	; 0x20
     99e:	8f 8f       	std	Y+31, r24	; 0x1f
     9a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9a2:	98 a1       	ldd	r25, Y+32	; 0x20
     9a4:	01 97       	sbiw	r24, 0x01	; 1
     9a6:	f1 f7       	brne	.-4      	; 0x9a4 <__stack+0xa5>
     9a8:	98 a3       	std	Y+32, r25	; 0x20
     9aa:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9ac:	89 a1       	ldd	r24, Y+33	; 0x21
     9ae:	9a a1       	ldd	r25, Y+34	; 0x22
     9b0:	01 97       	sbiw	r24, 0x01	; 1
     9b2:	9a a3       	std	Y+34, r25	; 0x22
     9b4:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9b6:	89 a1       	ldd	r24, Y+33	; 0x21
     9b8:	9a a1       	ldd	r25, Y+34	; 0x22
     9ba:	00 97       	sbiw	r24, 0x00	; 0
     9bc:	69 f7       	brne	.-38     	; 0x998 <__stack+0x99>
     9be:	14 c0       	rjmp	.+40     	; 0x9e8 <__stack+0xe9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9c0:	6b a1       	ldd	r22, Y+35	; 0x23
     9c2:	7c a1       	ldd	r23, Y+36	; 0x24
     9c4:	8d a1       	ldd	r24, Y+37	; 0x25
     9c6:	9e a1       	ldd	r25, Y+38	; 0x26
     9c8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     9cc:	dc 01       	movw	r26, r24
     9ce:	cb 01       	movw	r24, r22
     9d0:	9a a3       	std	Y+34, r25	; 0x22
     9d2:	89 a3       	std	Y+33, r24	; 0x21
     9d4:	89 a1       	ldd	r24, Y+33	; 0x21
     9d6:	9a a1       	ldd	r25, Y+34	; 0x22
     9d8:	9e 8f       	std	Y+30, r25	; 0x1e
     9da:	8d 8f       	std	Y+29, r24	; 0x1d
     9dc:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9de:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9e0:	01 97       	sbiw	r24, 0x01	; 1
     9e2:	f1 f7       	brne	.-4      	; 0x9e0 <__stack+0xe1>
     9e4:	9e 8f       	std	Y+30, r25	; 0x1e
     9e6:	8d 8f       	std	Y+29, r24	; 0x1d
    _delay_ms(500);
    pwm1B(0);
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <pwm1B>
    out('D', 5, 1);
     9f0:	84 e4       	ldi	r24, 0x44	; 68
     9f2:	65 e0       	ldi	r22, 0x05	; 5
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	41 e0       	ldi	r20, 0x01	; 1
     9f8:	50 e0       	ldi	r21, 0x00	; 0
     9fa:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	aa ef       	ldi	r26, 0xFA	; 250
     a04:	b3 e4       	ldi	r27, 0x43	; 67
     a06:	89 8f       	std	Y+25, r24	; 0x19
     a08:	9a 8f       	std	Y+26, r25	; 0x1a
     a0a:	ab 8f       	std	Y+27, r26	; 0x1b
     a0c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     a0e:	69 8d       	ldd	r22, Y+25	; 0x19
     a10:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a12:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a14:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	4a e7       	ldi	r20, 0x7A	; 122
     a1c:	55 e4       	ldi	r21, 0x45	; 69
     a1e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     a22:	dc 01       	movw	r26, r24
     a24:	cb 01       	movw	r24, r22
     a26:	8d 8b       	std	Y+21, r24	; 0x15
     a28:	9e 8b       	std	Y+22, r25	; 0x16
     a2a:	af 8b       	std	Y+23, r26	; 0x17
     a2c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     a2e:	6d 89       	ldd	r22, Y+21	; 0x15
     a30:	7e 89       	ldd	r23, Y+22	; 0x16
     a32:	8f 89       	ldd	r24, Y+23	; 0x17
     a34:	98 8d       	ldd	r25, Y+24	; 0x18
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	30 e0       	ldi	r19, 0x00	; 0
     a3a:	40 e8       	ldi	r20, 0x80	; 128
     a3c:	5f e3       	ldi	r21, 0x3F	; 63
     a3e:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     a42:	88 23       	and	r24, r24
     a44:	2c f4       	brge	.+10     	; 0xa50 <__stack+0x151>
		__ticks = 1;
     a46:	81 e0       	ldi	r24, 0x01	; 1
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	9c 8b       	std	Y+20, r25	; 0x14
     a4c:	8b 8b       	std	Y+19, r24	; 0x13
     a4e:	3f c0       	rjmp	.+126    	; 0xace <__stack+0x1cf>
	else if (__tmp > 65535)
     a50:	6d 89       	ldd	r22, Y+21	; 0x15
     a52:	7e 89       	ldd	r23, Y+22	; 0x16
     a54:	8f 89       	ldd	r24, Y+23	; 0x17
     a56:	98 8d       	ldd	r25, Y+24	; 0x18
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	3f ef       	ldi	r19, 0xFF	; 255
     a5c:	4f e7       	ldi	r20, 0x7F	; 127
     a5e:	57 e4       	ldi	r21, 0x47	; 71
     a60:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     a64:	18 16       	cp	r1, r24
     a66:	4c f5       	brge	.+82     	; 0xaba <__stack+0x1bb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a68:	69 8d       	ldd	r22, Y+25	; 0x19
     a6a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a6c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     a6e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     a70:	20 e0       	ldi	r18, 0x00	; 0
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	40 e2       	ldi	r20, 0x20	; 32
     a76:	51 e4       	ldi	r21, 0x41	; 65
     a78:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     a7c:	dc 01       	movw	r26, r24
     a7e:	cb 01       	movw	r24, r22
     a80:	bc 01       	movw	r22, r24
     a82:	cd 01       	movw	r24, r26
     a84:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     a88:	dc 01       	movw	r26, r24
     a8a:	cb 01       	movw	r24, r22
     a8c:	9c 8b       	std	Y+20, r25	; 0x14
     a8e:	8b 8b       	std	Y+19, r24	; 0x13
     a90:	0f c0       	rjmp	.+30     	; 0xab0 <__stack+0x1b1>
     a92:	80 e9       	ldi	r24, 0x90	; 144
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	9a 8b       	std	Y+18, r25	; 0x12
     a98:	89 8b       	std	Y+17, r24	; 0x11
     a9a:	89 89       	ldd	r24, Y+17	; 0x11
     a9c:	9a 89       	ldd	r25, Y+18	; 0x12
     a9e:	01 97       	sbiw	r24, 0x01	; 1
     aa0:	f1 f7       	brne	.-4      	; 0xa9e <__stack+0x19f>
     aa2:	9a 8b       	std	Y+18, r25	; 0x12
     aa4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     aa6:	8b 89       	ldd	r24, Y+19	; 0x13
     aa8:	9c 89       	ldd	r25, Y+20	; 0x14
     aaa:	01 97       	sbiw	r24, 0x01	; 1
     aac:	9c 8b       	std	Y+20, r25	; 0x14
     aae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ab0:	8b 89       	ldd	r24, Y+19	; 0x13
     ab2:	9c 89       	ldd	r25, Y+20	; 0x14
     ab4:	00 97       	sbiw	r24, 0x00	; 0
     ab6:	69 f7       	brne	.-38     	; 0xa92 <__stack+0x193>
     ab8:	14 c0       	rjmp	.+40     	; 0xae2 <__stack+0x1e3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     aba:	6d 89       	ldd	r22, Y+21	; 0x15
     abc:	7e 89       	ldd	r23, Y+22	; 0x16
     abe:	8f 89       	ldd	r24, Y+23	; 0x17
     ac0:	98 8d       	ldd	r25, Y+24	; 0x18
     ac2:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	9c 8b       	std	Y+20, r25	; 0x14
     acc:	8b 8b       	std	Y+19, r24	; 0x13
     ace:	8b 89       	ldd	r24, Y+19	; 0x13
     ad0:	9c 89       	ldd	r25, Y+20	; 0x14
     ad2:	98 8b       	std	Y+16, r25	; 0x10
     ad4:	8f 87       	std	Y+15, r24	; 0x0f
     ad6:	8f 85       	ldd	r24, Y+15	; 0x0f
     ad8:	98 89       	ldd	r25, Y+16	; 0x10
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	f1 f7       	brne	.-4      	; 0xada <__stack+0x1db>
     ade:	98 8b       	std	Y+16, r25	; 0x10
     ae0:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_ms(500);
    pwm1B(255);
     ae2:	8f ef       	ldi	r24, 0xFF	; 255
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <pwm1B>
     aea:	80 e0       	ldi	r24, 0x00	; 0
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	aa ef       	ldi	r26, 0xFA	; 250
     af0:	b3 e4       	ldi	r27, 0x43	; 67
     af2:	8b 87       	std	Y+11, r24	; 0x0b
     af4:	9c 87       	std	Y+12, r25	; 0x0c
     af6:	ad 87       	std	Y+13, r26	; 0x0d
     af8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     afa:	6b 85       	ldd	r22, Y+11	; 0x0b
     afc:	7c 85       	ldd	r23, Y+12	; 0x0c
     afe:	8d 85       	ldd	r24, Y+13	; 0x0d
     b00:	9e 85       	ldd	r25, Y+14	; 0x0e
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	4a e7       	ldi	r20, 0x7A	; 122
     b08:	55 e4       	ldi	r21, 0x45	; 69
     b0a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     b0e:	dc 01       	movw	r26, r24
     b10:	cb 01       	movw	r24, r22
     b12:	8f 83       	std	Y+7, r24	; 0x07
     b14:	98 87       	std	Y+8, r25	; 0x08
     b16:	a9 87       	std	Y+9, r26	; 0x09
     b18:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     b1a:	6f 81       	ldd	r22, Y+7	; 0x07
     b1c:	78 85       	ldd	r23, Y+8	; 0x08
     b1e:	89 85       	ldd	r24, Y+9	; 0x09
     b20:	9a 85       	ldd	r25, Y+10	; 0x0a
     b22:	20 e0       	ldi	r18, 0x00	; 0
     b24:	30 e0       	ldi	r19, 0x00	; 0
     b26:	40 e8       	ldi	r20, 0x80	; 128
     b28:	5f e3       	ldi	r21, 0x3F	; 63
     b2a:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
     b2e:	88 23       	and	r24, r24
     b30:	2c f4       	brge	.+10     	; 0xb3c <__stack+0x23d>
		__ticks = 1;
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	9e 83       	std	Y+6, r25	; 0x06
     b38:	8d 83       	std	Y+5, r24	; 0x05
     b3a:	3f c0       	rjmp	.+126    	; 0xbba <__stack+0x2bb>
	else if (__tmp > 65535)
     b3c:	6f 81       	ldd	r22, Y+7	; 0x07
     b3e:	78 85       	ldd	r23, Y+8	; 0x08
     b40:	89 85       	ldd	r24, Y+9	; 0x09
     b42:	9a 85       	ldd	r25, Y+10	; 0x0a
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	3f ef       	ldi	r19, 0xFF	; 255
     b48:	4f e7       	ldi	r20, 0x7F	; 127
     b4a:	57 e4       	ldi	r21, 0x47	; 71
     b4c:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
     b50:	18 16       	cp	r1, r24
     b52:	4c f5       	brge	.+82     	; 0xba6 <__stack+0x2a7>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b54:	6b 85       	ldd	r22, Y+11	; 0x0b
     b56:	7c 85       	ldd	r23, Y+12	; 0x0c
     b58:	8d 85       	ldd	r24, Y+13	; 0x0d
     b5a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b5c:	20 e0       	ldi	r18, 0x00	; 0
     b5e:	30 e0       	ldi	r19, 0x00	; 0
     b60:	40 e2       	ldi	r20, 0x20	; 32
     b62:	51 e4       	ldi	r21, 0x41	; 65
     b64:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
     b68:	dc 01       	movw	r26, r24
     b6a:	cb 01       	movw	r24, r22
     b6c:	bc 01       	movw	r22, r24
     b6e:	cd 01       	movw	r24, r26
     b70:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     b74:	dc 01       	movw	r26, r24
     b76:	cb 01       	movw	r24, r22
     b78:	9e 83       	std	Y+6, r25	; 0x06
     b7a:	8d 83       	std	Y+5, r24	; 0x05
     b7c:	0f c0       	rjmp	.+30     	; 0xb9c <__stack+0x29d>
     b7e:	80 e9       	ldi	r24, 0x90	; 144
     b80:	91 e0       	ldi	r25, 0x01	; 1
     b82:	9c 83       	std	Y+4, r25	; 0x04
     b84:	8b 83       	std	Y+3, r24	; 0x03
     b86:	8b 81       	ldd	r24, Y+3	; 0x03
     b88:	9c 81       	ldd	r25, Y+4	; 0x04
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	f1 f7       	brne	.-4      	; 0xb8a <__stack+0x28b>
     b8e:	9c 83       	std	Y+4, r25	; 0x04
     b90:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b92:	8d 81       	ldd	r24, Y+5	; 0x05
     b94:	9e 81       	ldd	r25, Y+6	; 0x06
     b96:	01 97       	sbiw	r24, 0x01	; 1
     b98:	9e 83       	std	Y+6, r25	; 0x06
     b9a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b9c:	8d 81       	ldd	r24, Y+5	; 0x05
     b9e:	9e 81       	ldd	r25, Y+6	; 0x06
     ba0:	00 97       	sbiw	r24, 0x00	; 0
     ba2:	69 f7       	brne	.-38     	; 0xb7e <__stack+0x27f>
     ba4:	14 c0       	rjmp	.+40     	; 0xbce <__stack+0x2cf>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ba6:	6f 81       	ldd	r22, Y+7	; 0x07
     ba8:	78 85       	ldd	r23, Y+8	; 0x08
     baa:	89 85       	ldd	r24, Y+9	; 0x09
     bac:	9a 85       	ldd	r25, Y+10	; 0x0a
     bae:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
     bb2:	dc 01       	movw	r26, r24
     bb4:	cb 01       	movw	r24, r22
     bb6:	9e 83       	std	Y+6, r25	; 0x06
     bb8:	8d 83       	std	Y+5, r24	; 0x05
     bba:	8d 81       	ldd	r24, Y+5	; 0x05
     bbc:	9e 81       	ldd	r25, Y+6	; 0x06
     bbe:	9a 83       	std	Y+2, r25	; 0x02
     bc0:	89 83       	std	Y+1, r24	; 0x01
     bc2:	89 81       	ldd	r24, Y+1	; 0x01
     bc4:	9a 81       	ldd	r25, Y+2	; 0x02
     bc6:	01 97       	sbiw	r24, 0x01	; 1
     bc8:	f1 f7       	brne	.-4      	; 0xbc6 <__stack+0x2c7>
     bca:	9a 83       	std	Y+2, r25	; 0x02
     bcc:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(500);
    pwm1B(0);
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <pwm1B>
    out('D', 5, 0);
     bd6:	84 e4       	ldi	r24, 0x44	; 68
     bd8:	65 e0       	ldi	r22, 0x05	; 5
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	40 e0       	ldi	r20, 0x00	; 0
     bde:	50 e0       	ldi	r21, 0x00	; 0
     be0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
}
     be4:	cc 5a       	subi	r28, 0xAC	; 172
     be6:	df 4f       	sbci	r29, 0xFF	; 255
     be8:	0f b6       	in	r0, 0x3f	; 63
     bea:	f8 94       	cli
     bec:	de bf       	out	0x3e, r29	; 62
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	cd bf       	out	0x3d, r28	; 61
     bf2:	cf 91       	pop	r28
     bf4:	df 91       	pop	r29
     bf6:	1f 91       	pop	r17
     bf8:	0f 91       	pop	r16
     bfa:	08 95       	ret

00000bfc <portB_out>:
2010 - Josh Ashby
joshuaashby@joshashby.com
http://joshashby.com
http://github.com/JoshAshby
freenode - JoshAshby
*/
     bfc:	df 93       	push	r29
     bfe:	cf 93       	push	r28
     c00:	00 d0       	rcall	.+0      	; 0xc02 <portB_out+0x6>
     c02:	00 d0       	rcall	.+0      	; 0xc04 <portB_out+0x8>
     c04:	cd b7       	in	r28, 0x3d	; 61
     c06:	de b7       	in	r29, 0x3e	; 62
     c08:	9a 83       	std	Y+2, r25	; 0x02
     c0a:	89 83       	std	Y+1, r24	; 0x01
     c0c:	7c 83       	std	Y+4, r23	; 0x04
     c0e:	6b 83       	std	Y+3, r22	; 0x03
//-------------------------------------------
     c10:	8b 81       	ldd	r24, Y+3	; 0x03
     c12:	9c 81       	ldd	r25, Y+4	; 0x04
     c14:	00 97       	sbiw	r24, 0x00	; 0
     c16:	91 f4       	brne	.+36     	; 0xc3c <portB_out+0x40>
//add a basica bios that will take, start the ADC, calibrate the sensors to what value they should try to stay at
//also go through and make sure everything is working from what it can tell if there is an error then it will blink the status led
     c18:	a5 e2       	ldi	r26, 0x25	; 37
     c1a:	b0 e0       	ldi	r27, 0x00	; 0
     c1c:	e5 e2       	ldi	r30, 0x25	; 37
     c1e:	f0 e0       	ldi	r31, 0x00	; 0
     c20:	80 81       	ld	r24, Z
     c22:	28 2f       	mov	r18, r24
     c24:	81 e0       	ldi	r24, 0x01	; 1
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	09 80       	ldd	r0, Y+1	; 0x01
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <portB_out+0x34>
     c2c:	88 0f       	add	r24, r24
     c2e:	99 1f       	adc	r25, r25
     c30:	0a 94       	dec	r0
     c32:	e2 f7       	brpl	.-8      	; 0xc2c <portB_out+0x30>
     c34:	80 95       	com	r24
     c36:	82 23       	and	r24, r18
     c38:	8c 93       	st	X, r24
     c3a:	10 c0       	rjmp	.+32     	; 0xc5c <portB_out+0x60>
void all_good(){//turn the status led on
    out('D', 3, 1);
}
void oh_crap(){//status led off
     c3c:	a5 e2       	ldi	r26, 0x25	; 37
     c3e:	b0 e0       	ldi	r27, 0x00	; 0
     c40:	e5 e2       	ldi	r30, 0x25	; 37
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	80 81       	ld	r24, Z
     c46:	28 2f       	mov	r18, r24
     c48:	81 e0       	ldi	r24, 0x01	; 1
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	09 80       	ldd	r0, Y+1	; 0x01
     c4e:	02 c0       	rjmp	.+4      	; 0xc54 <portB_out+0x58>
     c50:	88 0f       	add	r24, r24
     c52:	99 1f       	adc	r25, r25
     c54:	0a 94       	dec	r0
     c56:	e2 f7       	brpl	.-8      	; 0xc50 <portB_out+0x54>
     c58:	82 2b       	or	r24, r18
     c5a:	8c 93       	st	X, r24
    out('D', 3, 0);
}
     c5c:	0f 90       	pop	r0
     c5e:	0f 90       	pop	r0
     c60:	0f 90       	pop	r0
     c62:	0f 90       	pop	r0
     c64:	cf 91       	pop	r28
     c66:	df 91       	pop	r29
     c68:	08 95       	ret

00000c6a <portD_out>:
void error(){//blink the status led if there is an error
    out('D', 3, 1);
     c6a:	df 93       	push	r29
     c6c:	cf 93       	push	r28
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <portD_out+0x6>
     c70:	00 d0       	rcall	.+0      	; 0xc72 <portD_out+0x8>
     c72:	cd b7       	in	r28, 0x3d	; 61
     c74:	de b7       	in	r29, 0x3e	; 62
     c76:	9a 83       	std	Y+2, r25	; 0x02
     c78:	89 83       	std	Y+1, r24	; 0x01
     c7a:	7c 83       	std	Y+4, r23	; 0x04
     c7c:	6b 83       	std	Y+3, r22	; 0x03
    _delay_ms(500);
     c7e:	8b 81       	ldd	r24, Y+3	; 0x03
     c80:	9c 81       	ldd	r25, Y+4	; 0x04
     c82:	00 97       	sbiw	r24, 0x00	; 0
     c84:	91 f4       	brne	.+36     	; 0xcaa <portD_out+0x40>
    out('D', 3, 0);
    _delay_ms(500);
     c86:	ab e2       	ldi	r26, 0x2B	; 43
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	eb e2       	ldi	r30, 0x2B	; 43
     c8c:	f0 e0       	ldi	r31, 0x00	; 0
     c8e:	80 81       	ld	r24, Z
     c90:	28 2f       	mov	r18, r24
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	09 80       	ldd	r0, Y+1	; 0x01
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <portD_out+0x34>
     c9a:	88 0f       	add	r24, r24
     c9c:	99 1f       	adc	r25, r25
     c9e:	0a 94       	dec	r0
     ca0:	e2 f7       	brpl	.-8      	; 0xc9a <portD_out+0x30>
     ca2:	80 95       	com	r24
     ca4:	82 23       	and	r24, r18
     ca6:	8c 93       	st	X, r24
     ca8:	10 c0       	rjmp	.+32     	; 0xcca <portD_out+0x60>
}
void setup(){
    DDRD |= (1<<2);//LED power
    DDRD |= (1<<3);//LED Status
     caa:	ab e2       	ldi	r26, 0x2B	; 43
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	eb e2       	ldi	r30, 0x2B	; 43
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	80 81       	ld	r24, Z
     cb4:	28 2f       	mov	r18, r24
     cb6:	81 e0       	ldi	r24, 0x01	; 1
     cb8:	90 e0       	ldi	r25, 0x00	; 0
     cba:	09 80       	ldd	r0, Y+1	; 0x01
     cbc:	02 c0       	rjmp	.+4      	; 0xcc2 <portD_out+0x58>
     cbe:	88 0f       	add	r24, r24
     cc0:	99 1f       	adc	r25, r25
     cc2:	0a 94       	dec	r0
     cc4:	e2 f7       	brpl	.-8      	; 0xcbe <portD_out+0x54>
     cc6:	82 2b       	or	r24, r18
     cc8:	8c 93       	st	X, r24
    DDRD |= (1<<4);//relay back
    DDRD |= (1<<5);//relay front
     cca:	0f 90       	pop	r0
     ccc:	0f 90       	pop	r0
     cce:	0f 90       	pop	r0
     cd0:	0f 90       	pop	r0
     cd2:	cf 91       	pop	r28
     cd4:	df 91       	pop	r29
     cd6:	08 95       	ret

00000cd8 <out>:
    out('D', 2, 1);
     cd8:	df 93       	push	r29
     cda:	cf 93       	push	r28
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	27 97       	sbiw	r28, 0x07	; 7
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	89 83       	std	Y+1, r24	; 0x01
     cee:	7b 83       	std	Y+3, r23	; 0x03
     cf0:	6a 83       	std	Y+2, r22	; 0x02
     cf2:	5d 83       	std	Y+5, r21	; 0x05
     cf4:	4c 83       	std	Y+4, r20	; 0x04
    pwm_setup1();
     cf6:	89 81       	ldd	r24, Y+1	; 0x01
     cf8:	28 2f       	mov	r18, r24
     cfa:	33 27       	eor	r19, r19
     cfc:	27 fd       	sbrc	r18, 7
     cfe:	30 95       	com	r19
     d00:	3f 83       	std	Y+7, r19	; 0x07
     d02:	2e 83       	std	Y+6, r18	; 0x06
     d04:	8e 81       	ldd	r24, Y+6	; 0x06
     d06:	9f 81       	ldd	r25, Y+7	; 0x07
     d08:	82 34       	cpi	r24, 0x42	; 66
     d0a:	91 05       	cpc	r25, r1
     d0c:	71 f1       	breq	.+92     	; 0xd6a <out+0x92>
     d0e:	2e 81       	ldd	r18, Y+6	; 0x06
     d10:	3f 81       	ldd	r19, Y+7	; 0x07
     d12:	24 34       	cpi	r18, 0x44	; 68
     d14:	31 05       	cpc	r19, r1
     d16:	09 f0       	breq	.+2      	; 0xd1a <out+0x42>
     d18:	4f c0       	rjmp	.+158    	; 0xdb8 <out+0xe0>
    adc_start();//because we're using interrupts ADCH will auto update'
    all_good();
     d1a:	8c 81       	ldd	r24, Y+4	; 0x04
     d1c:	9d 81       	ldd	r25, Y+5	; 0x05
     d1e:	81 30       	cpi	r24, 0x01	; 1
     d20:	91 05       	cpc	r25, r1
     d22:	89 f4       	brne	.+34     	; 0xd46 <out+0x6e>
}
     d24:	ab e2       	ldi	r26, 0x2B	; 43
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	eb e2       	ldi	r30, 0x2B	; 43
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	28 2f       	mov	r18, r24
     d30:	81 e0       	ldi	r24, 0x01	; 1
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	0a 80       	ldd	r0, Y+2	; 0x02
     d36:	02 c0       	rjmp	.+4      	; 0xd3c <out+0x64>
     d38:	88 0f       	add	r24, r24
     d3a:	99 1f       	adc	r25, r25
     d3c:	0a 94       	dec	r0
     d3e:	e2 f7       	brpl	.-8      	; 0xd38 <out+0x60>
     d40:	82 2b       	or	r24, r18
     d42:	8c 93       	st	X, r24
     d44:	39 c0       	rjmp	.+114    	; 0xdb8 <out+0xe0>
void test(){
    pwm_ramp1A(255, 10);
    _delay_ms(500);
     d46:	ab e2       	ldi	r26, 0x2B	; 43
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	eb e2       	ldi	r30, 0x2B	; 43
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	28 2f       	mov	r18, r24
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0a 80       	ldd	r0, Y+2	; 0x02
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <out+0x86>
     d5a:	88 0f       	add	r24, r24
     d5c:	99 1f       	adc	r25, r25
     d5e:	0a 94       	dec	r0
     d60:	e2 f7       	brpl	.-8      	; 0xd5a <out+0x82>
     d62:	80 95       	com	r24
     d64:	82 23       	and	r24, r18
     d66:	8c 93       	st	X, r24
     d68:	27 c0       	rjmp	.+78     	; 0xdb8 <out+0xe0>
    pwm_ramp1A(0, 10);
    out('D', 4, 1);
    pwm_ramp1A(255, 10);
    _delay_ms(500);
     d6a:	8c 81       	ldd	r24, Y+4	; 0x04
     d6c:	9d 81       	ldd	r25, Y+5	; 0x05
     d6e:	81 30       	cpi	r24, 0x01	; 1
     d70:	91 05       	cpc	r25, r1
     d72:	89 f4       	brne	.+34     	; 0xd96 <out+0xbe>
    pwm_ramp1A(0,10);
     d74:	a5 e2       	ldi	r26, 0x25	; 37
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	e5 e2       	ldi	r30, 0x25	; 37
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	28 2f       	mov	r18, r24
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	0a 80       	ldd	r0, Y+2	; 0x02
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <out+0xb4>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	0a 94       	dec	r0
     d8e:	e2 f7       	brpl	.-8      	; 0xd88 <out+0xb0>
     d90:	82 2b       	or	r24, r18
     d92:	8c 93       	st	X, r24
     d94:	11 c0       	rjmp	.+34     	; 0xdb8 <out+0xe0>
    out('D', 4, 0);
    oh_crap();
    _delay_ms(1000);
     d96:	a5 e2       	ldi	r26, 0x25	; 37
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	e5 e2       	ldi	r30, 0x25	; 37
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	28 2f       	mov	r18, r24
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0a 80       	ldd	r0, Y+2	; 0x02
     da8:	02 c0       	rjmp	.+4      	; 0xdae <out+0xd6>
     daa:	88 0f       	add	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	0a 94       	dec	r0
     db0:	e2 f7       	brpl	.-8      	; 0xdaa <out+0xd2>
     db2:	80 95       	com	r24
     db4:	82 23       	and	r24, r18
     db6:	8c 93       	st	X, r24
    all_good();
    pwm1B(255);
    _delay_ms(500);
    pwm1B(0);
     db8:	27 96       	adiw	r28, 0x07	; 7
     dba:	0f b6       	in	r0, 0x3f	; 63
     dbc:	f8 94       	cli
     dbe:	de bf       	out	0x3e, r29	; 62
     dc0:	0f be       	out	0x3f, r0	; 63
     dc2:	cd bf       	out	0x3d, r28	; 61
     dc4:	cf 91       	pop	r28
     dc6:	df 91       	pop	r29
     dc8:	08 95       	ret

00000dca <main>:
*/
//-------------------------------------------
//add a basica bios that will take, start the ADC, calibrate the sensors to what value they should try to stay at
//also go through and make sure everything is working from what it can tell if there is an error then it will blink the status led
void all_good(){//turn the status led on
    out('D', 3, 1);
     dca:	df 93       	push	r29
     dcc:	cf 93       	push	r28
     dce:	cd b7       	in	r28, 0x3d	; 61
     dd0:	de b7       	in	r29, 0x3e	; 62
}
     dd2:	0e 94 6d 02 	call	0x4da	; 0x4da <setup>
void oh_crap(){//status led off
     dd6:	0e 94 11 14 	call	0x2822	; 0x2822 <pwm_setup2>
    out('D', 3, 0);
     dda:	0e 94 43 1a 	call	0x3486	; 0x3486 <calibrate>
}
     dde:	84 e0       	ldi	r24, 0x04	; 4
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	0e 94 a9 00 	call	0x152	; 0x152 <adc_change>
void error(){//blink the status led if there is an error
    out('D', 3, 1);
     de6:	0e 94 2c 1b 	call	0x3658	; 0x3658 <ultrasound_filter>
     dea:	90 93 59 02 	sts	0x0259, r25
     dee:	80 93 58 02 	sts	0x0258, r24
    _delay_ms(500);
     df2:	80 91 58 02 	lds	r24, 0x0258
     df6:	90 91 59 02 	lds	r25, 0x0259
     dfa:	0e 94 63 14 	call	0x28c6	; 0x28c6 <pwm2B>
    out('D', 3, 0);
     dfe:	20 91 58 02 	lds	r18, 0x0258
     e02:	30 91 59 02 	lds	r19, 0x0259
     e06:	80 91 56 02 	lds	r24, 0x0256
     e0a:	90 91 57 02 	lds	r25, 0x0257
     e0e:	28 17       	cp	r18, r24
     e10:	39 07       	cpc	r19, r25
     e12:	84 f0       	brlt	.+32     	; 0xe34 <main+0x6a>
    _delay_ms(500);
}
     e14:	84 e4       	ldi	r24, 0x44	; 68
     e16:	62 e0       	ldi	r22, 0x02	; 2
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
void setup(){
     e22:	85 e0       	ldi	r24, 0x05	; 5
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 a9 00 	call	0x152	; 0x152 <adc_change>
    DDRD |= (1<<2);//LED power
     e2a:	0e 94 2c 1b 	call	0x3658	; 0x3658 <ultrasound_filter>
     e2e:	0e 94 63 14 	call	0x28c6	; 0x28c6 <pwm2B>
     e32:	d9 cf       	rjmp	.-78     	; 0xde6 <main+0x1c>
    DDRD |= (1<<3);//LED Status
    DDRD |= (1<<4);//relay back
    DDRD |= (1<<5);//relay front
     e34:	84 e4       	ldi	r24, 0x44	; 68
     e36:	62 e0       	ldi	r22, 0x02	; 2
     e38:	70 e0       	ldi	r23, 0x00	; 0
     e3a:	41 e0       	ldi	r20, 0x01	; 1
     e3c:	50 e0       	ldi	r21, 0x00	; 0
     e3e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <out>
     e42:	d1 cf       	rjmp	.-94     	; 0xde6 <main+0x1c>

00000e44 <pwm_setup_all>:
/*
Boot.c
2010 - Josh Ashby
joshuaashby@joshashby.com
http://joshashby.com
http://github.com/JoshAshby
     e44:	df 93       	push	r29
     e46:	cf 93       	push	r28
     e48:	cd b7       	in	r28, 0x3d	; 61
     e4a:	de b7       	in	r29, 0x3e	; 62
freenode - JoshAshby
     e4c:	a5 e4       	ldi	r26, 0x45	; 69
     e4e:	b0 e0       	ldi	r27, 0x00	; 0
     e50:	e5 e4       	ldi	r30, 0x45	; 69
     e52:	f0 e0       	ldi	r31, 0x00	; 0
     e54:	80 81       	ld	r24, Z
     e56:	83 60       	ori	r24, 0x03	; 3
     e58:	8c 93       	st	X, r24
*/
//-------------------------------------------
     e5a:	a4 e4       	ldi	r26, 0x44	; 68
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e4 e4       	ldi	r30, 0x44	; 68
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	81 60       	ori	r24, 0x01	; 1
     e66:	8c 93       	st	X, r24
//add a basica bios that will take, start the ADC, calibrate the sensors to what value they should try to stay at
//also go through and make sure everything is working from what it can tell if there is an error then it will blink the status led
     e68:	aa e2       	ldi	r26, 0x2A	; 42
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	ea e2       	ldi	r30, 0x2A	; 42
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	80 81       	ld	r24, Z
     e72:	80 62       	ori	r24, 0x20	; 32
     e74:	8c 93       	st	X, r24
void all_good(){//turn the status led on
     e76:	aa e2       	ldi	r26, 0x2A	; 42
     e78:	b0 e0       	ldi	r27, 0x00	; 0
     e7a:	ea e2       	ldi	r30, 0x2A	; 42
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	80 81       	ld	r24, Z
     e80:	80 64       	ori	r24, 0x40	; 64
     e82:	8c 93       	st	X, r24
    out('D', 3, 1);
}
     e84:	10 92 53 02 	sts	0x0253, r1
     e88:	10 92 52 02 	sts	0x0252, r1
void oh_crap(){//status led off
     e8c:	10 92 51 02 	sts	0x0251, r1
     e90:	10 92 50 02 	sts	0x0250, r1
    out('D', 3, 0);
     e94:	10 92 3d 02 	sts	0x023D, r1
     e98:	10 92 3c 02 	sts	0x023C, r1
}
void error(){//blink the status led if there is an error
     e9c:	10 92 39 02 	sts	0x0239, r1
     ea0:	10 92 38 02 	sts	0x0238, r1
    out('D', 3, 1);
     ea4:	10 92 45 02 	sts	0x0245, r1
     ea8:	10 92 44 02 	sts	0x0244, r1
    _delay_ms(500);
     eac:	10 92 35 02 	sts	0x0235, r1
     eb0:	10 92 34 02 	sts	0x0234, r1
    out('D', 3, 0);
    _delay_ms(500);
     eb4:	a1 e8       	ldi	r26, 0x81	; 129
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e1 e8       	ldi	r30, 0x81	; 129
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	80 81       	ld	r24, Z
     ebe:	83 60       	ori	r24, 0x03	; 3
     ec0:	8c 93       	st	X, r24
}
void setup(){
     ec2:	a0 e8       	ldi	r26, 0x80	; 128
     ec4:	b0 e0       	ldi	r27, 0x00	; 0
     ec6:	e0 e8       	ldi	r30, 0x80	; 128
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	80 81       	ld	r24, Z
     ecc:	81 60       	ori	r24, 0x01	; 1
     ece:	8c 93       	st	X, r24
    DDRD |= (1<<2);//LED power
    DDRD |= (1<<3);//LED Status
     ed0:	a4 e2       	ldi	r26, 0x24	; 36
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	e4 e2       	ldi	r30, 0x24	; 36
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	82 60       	ori	r24, 0x02	; 2
     edc:	8c 93       	st	X, r24
    DDRD |= (1<<4);//relay back
     ede:	a4 e2       	ldi	r26, 0x24	; 36
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	e4 e2       	ldi	r30, 0x24	; 36
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	80 81       	ld	r24, Z
     ee8:	84 60       	ori	r24, 0x04	; 4
     eea:	8c 93       	st	X, r24
    DDRD |= (1<<5);//relay front
    out('D', 2, 1);
     eec:	10 92 33 02 	sts	0x0233, r1
     ef0:	10 92 32 02 	sts	0x0232, r1
    pwm_setup1();
     ef4:	10 92 37 02 	sts	0x0237, r1
     ef8:	10 92 36 02 	sts	0x0236, r1
    adc_start();//because we're using interrupts ADCH will auto update'
     efc:	10 92 4f 02 	sts	0x024F, r1
     f00:	10 92 4e 02 	sts	0x024E, r1
    all_good();
}
     f04:	10 92 43 02 	sts	0x0243, r1
     f08:	10 92 42 02 	sts	0x0242, r1
void test(){
     f0c:	10 92 4b 02 	sts	0x024B, r1
     f10:	10 92 4a 02 	sts	0x024A, r1
    pwm_ramp1A(255, 10);
     f14:	10 92 3f 02 	sts	0x023F, r1
     f18:	10 92 3e 02 	sts	0x023E, r1
    _delay_ms(500);
    pwm_ramp1A(0, 10);
     f1c:	a1 eb       	ldi	r26, 0xB1	; 177
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	e1 eb       	ldi	r30, 0xB1	; 177
     f22:	f0 e0       	ldi	r31, 0x00	; 0
     f24:	80 81       	ld	r24, Z
     f26:	84 60       	ori	r24, 0x04	; 4
     f28:	8c 93       	st	X, r24
    out('D', 4, 1);
     f2a:	a0 eb       	ldi	r26, 0xB0	; 176
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	e0 eb       	ldi	r30, 0xB0	; 176
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	81 60       	ori	r24, 0x01	; 1
     f36:	8c 93       	st	X, r24
    pwm_ramp1A(255, 10);
    _delay_ms(500);
     f38:	aa e2       	ldi	r26, 0x2A	; 42
     f3a:	b0 e0       	ldi	r27, 0x00	; 0
     f3c:	ea e2       	ldi	r30, 0x2A	; 42
     f3e:	f0 e0       	ldi	r31, 0x00	; 0
     f40:	80 81       	ld	r24, Z
     f42:	88 60       	ori	r24, 0x08	; 8
     f44:	8c 93       	st	X, r24
    pwm_ramp1A(0,10);
     f46:	a4 e2       	ldi	r26, 0x24	; 36
     f48:	b0 e0       	ldi	r27, 0x00	; 0
     f4a:	e4 e2       	ldi	r30, 0x24	; 36
     f4c:	f0 e0       	ldi	r31, 0x00	; 0
     f4e:	80 81       	ld	r24, Z
     f50:	88 60       	ori	r24, 0x08	; 8
     f52:	8c 93       	st	X, r24
    out('D', 4, 0);
    oh_crap();
     f54:	10 92 3b 02 	sts	0x023B, r1
     f58:	10 92 3a 02 	sts	0x023A, r1
    _delay_ms(1000);
     f5c:	10 92 47 02 	sts	0x0247, r1
     f60:	10 92 46 02 	sts	0x0246, r1
    all_good();
     f64:	10 92 4d 02 	sts	0x024D, r1
     f68:	10 92 4c 02 	sts	0x024C, r1
    pwm1B(255);
    _delay_ms(500);
     f6c:	10 92 41 02 	sts	0x0241, r1
     f70:	10 92 40 02 	sts	0x0240, r1
    pwm1B(0);
     f74:	10 92 49 02 	sts	0x0249, r1
     f78:	10 92 48 02 	sts	0x0248, r1
    out('D', 5, 1);
     f7c:	10 92 55 02 	sts	0x0255, r1
     f80:	10 92 54 02 	sts	0x0254, r1
    _delay_ms(500);
     f84:	cf 91       	pop	r28
     f86:	df 91       	pop	r29
     f88:	08 95       	ret

00000f8a <pwm_setup0>:
    pwm1B(255);
    _delay_ms(500);
     f8a:	df 93       	push	r29
     f8c:	cf 93       	push	r28
     f8e:	cd b7       	in	r28, 0x3d	; 61
     f90:	de b7       	in	r29, 0x3e	; 62
    pwm1B(0);
     f92:	a5 e4       	ldi	r26, 0x45	; 69
     f94:	b0 e0       	ldi	r27, 0x00	; 0
     f96:	e5 e4       	ldi	r30, 0x45	; 69
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	80 81       	ld	r24, Z
     f9c:	83 60       	ori	r24, 0x03	; 3
     f9e:	8c 93       	st	X, r24
    out('D', 5, 0);
}
     fa0:	a4 e4       	ldi	r26, 0x44	; 68
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e4 e4       	ldi	r30, 0x44	; 68
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	81 60       	ori	r24, 0x01	; 1
     fac:	8c 93       	st	X, r24
     fae:	aa e2       	ldi	r26, 0x2A	; 42
     fb0:	b0 e0       	ldi	r27, 0x00	; 0
     fb2:	ea e2       	ldi	r30, 0x2A	; 42
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	80 81       	ld	r24, Z
     fb8:	80 62       	ori	r24, 0x20	; 32
     fba:	8c 93       	st	X, r24
     fbc:	aa e2       	ldi	r26, 0x2A	; 42
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	ea e2       	ldi	r30, 0x2A	; 42
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	80 81       	ld	r24, Z
     fc6:	80 64       	ori	r24, 0x40	; 64
     fc8:	8c 93       	st	X, r24
     fca:	10 92 53 02 	sts	0x0253, r1
     fce:	10 92 52 02 	sts	0x0252, r1
     fd2:	10 92 51 02 	sts	0x0251, r1
     fd6:	10 92 50 02 	sts	0x0250, r1
     fda:	10 92 3d 02 	sts	0x023D, r1
     fde:	10 92 3c 02 	sts	0x023C, r1
     fe2:	10 92 39 02 	sts	0x0239, r1
     fe6:	10 92 38 02 	sts	0x0238, r1
     fea:	10 92 45 02 	sts	0x0245, r1
     fee:	10 92 44 02 	sts	0x0244, r1
     ff2:	10 92 35 02 	sts	0x0235, r1
     ff6:	10 92 34 02 	sts	0x0234, r1
     ffa:	cf 91       	pop	r28
     ffc:	df 91       	pop	r29
     ffe:	08 95       	ret

00001000 <pwm0A>:
    1000:	df 93       	push	r29
    1002:	cf 93       	push	r28
    1004:	00 d0       	rcall	.+0      	; 0x1006 <pwm0A+0x6>
    1006:	cd b7       	in	r28, 0x3d	; 61
    1008:	de b7       	in	r29, 0x3e	; 62
    100a:	9a 83       	std	Y+2, r25	; 0x02
    100c:	89 83       	std	Y+1, r24	; 0x01
    100e:	a4 e4       	ldi	r26, 0x44	; 68
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	e4 e4       	ldi	r30, 0x44	; 68
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	80 68       	ori	r24, 0x80	; 128
    101a:	8c 93       	st	X, r24
    101c:	e7 e4       	ldi	r30, 0x47	; 71
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	89 81       	ldd	r24, Y+1	; 0x01
    1022:	80 83       	st	Z, r24
    1024:	0f 90       	pop	r0
    1026:	0f 90       	pop	r0
    1028:	cf 91       	pop	r28
    102a:	df 91       	pop	r29
    102c:	08 95       	ret

0000102e <pwm0B>:
    102e:	df 93       	push	r29
    1030:	cf 93       	push	r28
    1032:	00 d0       	rcall	.+0      	; 0x1034 <pwm0B+0x6>
    1034:	cd b7       	in	r28, 0x3d	; 61
    1036:	de b7       	in	r29, 0x3e	; 62
    1038:	9a 83       	std	Y+2, r25	; 0x02
    103a:	89 83       	std	Y+1, r24	; 0x01
    103c:	a4 e4       	ldi	r26, 0x44	; 68
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	e4 e4       	ldi	r30, 0x44	; 68
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	80 81       	ld	r24, Z
    1046:	80 62       	ori	r24, 0x20	; 32
    1048:	8c 93       	st	X, r24
    104a:	e8 e4       	ldi	r30, 0x48	; 72
    104c:	f0 e0       	ldi	r31, 0x00	; 0
    104e:	89 81       	ldd	r24, Y+1	; 0x01
    1050:	80 83       	st	Z, r24
    1052:	0f 90       	pop	r0
    1054:	0f 90       	pop	r0
    1056:	cf 91       	pop	r28
    1058:	df 91       	pop	r29
    105a:	08 95       	ret

0000105c <pwm_ramp0A>:
    105c:	df 93       	push	r29
    105e:	cf 93       	push	r28
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	a4 97       	sbiw	r28, 0x24	; 36
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	de bf       	out	0x3e, r29	; 62
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	cd bf       	out	0x3d, r28	; 61
    1070:	9a a3       	std	Y+34, r25	; 0x22
    1072:	89 a3       	std	Y+33, r24	; 0x21
    1074:	7c a3       	std	Y+36, r23	; 0x24
    1076:	6b a3       	std	Y+35, r22	; 0x23
    1078:	89 a1       	ldd	r24, Y+33	; 0x21
    107a:	9a a1       	ldd	r25, Y+34	; 0x22
    107c:	00 97       	sbiw	r24, 0x00	; 0
    107e:	29 f4       	brne	.+10     	; 0x108a <pwm_ramp0A+0x2e>
    1080:	80 e0       	ldi	r24, 0x00	; 0
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	0e 94 00 08 	call	0x1000	; 0x1000 <pwm0A>
    1088:	47 c1       	rjmp	.+654    	; 0x1318 <pwm_ramp0A+0x2bc>
    108a:	20 91 4e 02 	lds	r18, 0x024E
    108e:	30 91 4f 02 	lds	r19, 0x024F
    1092:	89 a1       	ldd	r24, Y+33	; 0x21
    1094:	9a a1       	ldd	r25, Y+34	; 0x22
    1096:	28 17       	cp	r18, r24
    1098:	39 07       	cpc	r19, r25
    109a:	08 f0       	brcs	.+2      	; 0x109e <pwm_ramp0A+0x42>
    109c:	9f c0       	rjmp	.+318    	; 0x11dc <pwm_ramp0A+0x180>
    109e:	a4 e4       	ldi	r26, 0x44	; 68
    10a0:	b0 e0       	ldi	r27, 0x00	; 0
    10a2:	e4 e4       	ldi	r30, 0x44	; 68
    10a4:	f0 e0       	ldi	r31, 0x00	; 0
    10a6:	80 81       	ld	r24, Z
    10a8:	80 68       	ori	r24, 0x80	; 128
    10aa:	8c 93       	st	X, r24
    10ac:	80 91 3c 02 	lds	r24, 0x023C
    10b0:	90 91 3d 02 	lds	r25, 0x023D
    10b4:	98 a3       	std	Y+32, r25	; 0x20
    10b6:	8f 8f       	std	Y+31, r24	; 0x1f
    10b8:	82 c0       	rjmp	.+260    	; 0x11be <pwm_ramp0A+0x162>
    10ba:	e7 e4       	ldi	r30, 0x47	; 71
    10bc:	f0 e0       	ldi	r31, 0x00	; 0
    10be:	8f 8d       	ldd	r24, Y+31	; 0x1f
    10c0:	80 83       	st	Z, r24
    10c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    10c4:	98 a1       	ldd	r25, Y+32	; 0x20
    10c6:	01 96       	adiw	r24, 0x01	; 1
    10c8:	98 a3       	std	Y+32, r25	; 0x20
    10ca:	8f 8f       	std	Y+31, r24	; 0x1f
    10cc:	8b a1       	ldd	r24, Y+35	; 0x23
    10ce:	9c a1       	ldd	r25, Y+36	; 0x24
    10d0:	cc 01       	movw	r24, r24
    10d2:	a0 e0       	ldi	r26, 0x00	; 0
    10d4:	b0 e0       	ldi	r27, 0x00	; 0
    10d6:	bc 01       	movw	r22, r24
    10d8:	cd 01       	movw	r24, r26
    10da:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    10de:	dc 01       	movw	r26, r24
    10e0:	cb 01       	movw	r24, r22
    10e2:	89 8f       	std	Y+25, r24	; 0x19
    10e4:	9a 8f       	std	Y+26, r25	; 0x1a
    10e6:	ab 8f       	std	Y+27, r26	; 0x1b
    10e8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10ea:	69 8d       	ldd	r22, Y+25	; 0x19
    10ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    10ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    10f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	4a e7       	ldi	r20, 0x7A	; 122
    10f8:	55 e4       	ldi	r21, 0x45	; 69
    10fa:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    10fe:	dc 01       	movw	r26, r24
    1100:	cb 01       	movw	r24, r22
    1102:	8d 8b       	std	Y+21, r24	; 0x15
    1104:	9e 8b       	std	Y+22, r25	; 0x16
    1106:	af 8b       	std	Y+23, r26	; 0x17
    1108:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    110a:	6d 89       	ldd	r22, Y+21	; 0x15
    110c:	7e 89       	ldd	r23, Y+22	; 0x16
    110e:	8f 89       	ldd	r24, Y+23	; 0x17
    1110:	98 8d       	ldd	r25, Y+24	; 0x18
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	40 e8       	ldi	r20, 0x80	; 128
    1118:	5f e3       	ldi	r21, 0x3F	; 63
    111a:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    111e:	88 23       	and	r24, r24
    1120:	2c f4       	brge	.+10     	; 0x112c <pwm_ramp0A+0xd0>
		__ticks = 1;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	9c 8b       	std	Y+20, r25	; 0x14
    1128:	8b 8b       	std	Y+19, r24	; 0x13
    112a:	3f c0       	rjmp	.+126    	; 0x11aa <pwm_ramp0A+0x14e>
	else if (__tmp > 65535)
    112c:	6d 89       	ldd	r22, Y+21	; 0x15
    112e:	7e 89       	ldd	r23, Y+22	; 0x16
    1130:	8f 89       	ldd	r24, Y+23	; 0x17
    1132:	98 8d       	ldd	r25, Y+24	; 0x18
    1134:	20 e0       	ldi	r18, 0x00	; 0
    1136:	3f ef       	ldi	r19, 0xFF	; 255
    1138:	4f e7       	ldi	r20, 0x7F	; 127
    113a:	57 e4       	ldi	r21, 0x47	; 71
    113c:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1140:	18 16       	cp	r1, r24
    1142:	4c f5       	brge	.+82     	; 0x1196 <pwm_ramp0A+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1144:	69 8d       	ldd	r22, Y+25	; 0x19
    1146:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1148:	8b 8d       	ldd	r24, Y+27	; 0x1b
    114a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	40 e2       	ldi	r20, 0x20	; 32
    1152:	51 e4       	ldi	r21, 0x41	; 65
    1154:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1158:	dc 01       	movw	r26, r24
    115a:	cb 01       	movw	r24, r22
    115c:	bc 01       	movw	r22, r24
    115e:	cd 01       	movw	r24, r26
    1160:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1164:	dc 01       	movw	r26, r24
    1166:	cb 01       	movw	r24, r22
    1168:	9c 8b       	std	Y+20, r25	; 0x14
    116a:	8b 8b       	std	Y+19, r24	; 0x13
    116c:	0f c0       	rjmp	.+30     	; 0x118c <pwm_ramp0A+0x130>
    116e:	80 e9       	ldi	r24, 0x90	; 144
    1170:	91 e0       	ldi	r25, 0x01	; 1
    1172:	9a 8b       	std	Y+18, r25	; 0x12
    1174:	89 8b       	std	Y+17, r24	; 0x11
    1176:	89 89       	ldd	r24, Y+17	; 0x11
    1178:	9a 89       	ldd	r25, Y+18	; 0x12
    117a:	01 97       	sbiw	r24, 0x01	; 1
    117c:	f1 f7       	brne	.-4      	; 0x117a <pwm_ramp0A+0x11e>
    117e:	9a 8b       	std	Y+18, r25	; 0x12
    1180:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1182:	8b 89       	ldd	r24, Y+19	; 0x13
    1184:	9c 89       	ldd	r25, Y+20	; 0x14
    1186:	01 97       	sbiw	r24, 0x01	; 1
    1188:	9c 8b       	std	Y+20, r25	; 0x14
    118a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    118c:	8b 89       	ldd	r24, Y+19	; 0x13
    118e:	9c 89       	ldd	r25, Y+20	; 0x14
    1190:	00 97       	sbiw	r24, 0x00	; 0
    1192:	69 f7       	brne	.-38     	; 0x116e <pwm_ramp0A+0x112>
    1194:	14 c0       	rjmp	.+40     	; 0x11be <pwm_ramp0A+0x162>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1196:	6d 89       	ldd	r22, Y+21	; 0x15
    1198:	7e 89       	ldd	r23, Y+22	; 0x16
    119a:	8f 89       	ldd	r24, Y+23	; 0x17
    119c:	98 8d       	ldd	r25, Y+24	; 0x18
    119e:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	9c 8b       	std	Y+20, r25	; 0x14
    11a8:	8b 8b       	std	Y+19, r24	; 0x13
    11aa:	8b 89       	ldd	r24, Y+19	; 0x13
    11ac:	9c 89       	ldd	r25, Y+20	; 0x14
    11ae:	98 8b       	std	Y+16, r25	; 0x10
    11b0:	8f 87       	std	Y+15, r24	; 0x0f
    11b2:	8f 85       	ldd	r24, Y+15	; 0x0f
    11b4:	98 89       	ldd	r25, Y+16	; 0x10
    11b6:	01 97       	sbiw	r24, 0x01	; 1
    11b8:	f1 f7       	brne	.-4      	; 0x11b6 <pwm_ramp0A+0x15a>
    11ba:	98 8b       	std	Y+16, r25	; 0x10
    11bc:	8f 87       	std	Y+15, r24	; 0x0f
    11be:	2f 8d       	ldd	r18, Y+31	; 0x1f
    11c0:	38 a1       	ldd	r19, Y+32	; 0x20
    11c2:	89 a1       	ldd	r24, Y+33	; 0x21
    11c4:	9a a1       	ldd	r25, Y+34	; 0x22
    11c6:	82 17       	cp	r24, r18
    11c8:	93 07       	cpc	r25, r19
    11ca:	08 f0       	brcs	.+2      	; 0x11ce <pwm_ramp0A+0x172>
    11cc:	76 cf       	rjmp	.-276    	; 0x10ba <pwm_ramp0A+0x5e>
    11ce:	89 a1       	ldd	r24, Y+33	; 0x21
    11d0:	9a a1       	ldd	r25, Y+34	; 0x22
    11d2:	90 93 3d 02 	sts	0x023D, r25
    11d6:	80 93 3c 02 	sts	0x023C, r24
    11da:	98 c0       	rjmp	.+304    	; 0x130c <pwm_ramp0A+0x2b0>
    11dc:	a4 e4       	ldi	r26, 0x44	; 68
    11de:	b0 e0       	ldi	r27, 0x00	; 0
    11e0:	e4 e4       	ldi	r30, 0x44	; 68
    11e2:	f0 e0       	ldi	r31, 0x00	; 0
    11e4:	80 81       	ld	r24, Z
    11e6:	80 68       	ori	r24, 0x80	; 128
    11e8:	8c 93       	st	X, r24
    11ea:	80 91 3c 02 	lds	r24, 0x023C
    11ee:	90 91 3d 02 	lds	r25, 0x023D
    11f2:	9e 8f       	std	Y+30, r25	; 0x1e
    11f4:	8d 8f       	std	Y+29, r24	; 0x1d
    11f6:	82 c0       	rjmp	.+260    	; 0x12fc <pwm_ramp0A+0x2a0>
    11f8:	e7 e4       	ldi	r30, 0x47	; 71
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    11fe:	80 83       	st	Z, r24
    1200:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1202:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	9e 8f       	std	Y+30, r25	; 0x1e
    1208:	8d 8f       	std	Y+29, r24	; 0x1d
    120a:	8b a1       	ldd	r24, Y+35	; 0x23
    120c:	9c a1       	ldd	r25, Y+36	; 0x24
    120e:	cc 01       	movw	r24, r24
    1210:	a0 e0       	ldi	r26, 0x00	; 0
    1212:	b0 e0       	ldi	r27, 0x00	; 0
    1214:	bc 01       	movw	r22, r24
    1216:	cd 01       	movw	r24, r26
    1218:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    121c:	dc 01       	movw	r26, r24
    121e:	cb 01       	movw	r24, r22
    1220:	8b 87       	std	Y+11, r24	; 0x0b
    1222:	9c 87       	std	Y+12, r25	; 0x0c
    1224:	ad 87       	std	Y+13, r26	; 0x0d
    1226:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1228:	6b 85       	ldd	r22, Y+11	; 0x0b
    122a:	7c 85       	ldd	r23, Y+12	; 0x0c
    122c:	8d 85       	ldd	r24, Y+13	; 0x0d
    122e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1230:	20 e0       	ldi	r18, 0x00	; 0
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	4a e7       	ldi	r20, 0x7A	; 122
    1236:	55 e4       	ldi	r21, 0x45	; 69
    1238:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	8f 83       	std	Y+7, r24	; 0x07
    1242:	98 87       	std	Y+8, r25	; 0x08
    1244:	a9 87       	std	Y+9, r26	; 0x09
    1246:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1248:	6f 81       	ldd	r22, Y+7	; 0x07
    124a:	78 85       	ldd	r23, Y+8	; 0x08
    124c:	89 85       	ldd	r24, Y+9	; 0x09
    124e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	40 e8       	ldi	r20, 0x80	; 128
    1256:	5f e3       	ldi	r21, 0x3F	; 63
    1258:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    125c:	88 23       	and	r24, r24
    125e:	2c f4       	brge	.+10     	; 0x126a <pwm_ramp0A+0x20e>
		__ticks = 1;
    1260:	81 e0       	ldi	r24, 0x01	; 1
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	9e 83       	std	Y+6, r25	; 0x06
    1266:	8d 83       	std	Y+5, r24	; 0x05
    1268:	3f c0       	rjmp	.+126    	; 0x12e8 <pwm_ramp0A+0x28c>
	else if (__tmp > 65535)
    126a:	6f 81       	ldd	r22, Y+7	; 0x07
    126c:	78 85       	ldd	r23, Y+8	; 0x08
    126e:	89 85       	ldd	r24, Y+9	; 0x09
    1270:	9a 85       	ldd	r25, Y+10	; 0x0a
    1272:	20 e0       	ldi	r18, 0x00	; 0
    1274:	3f ef       	ldi	r19, 0xFF	; 255
    1276:	4f e7       	ldi	r20, 0x7F	; 127
    1278:	57 e4       	ldi	r21, 0x47	; 71
    127a:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    127e:	18 16       	cp	r1, r24
    1280:	4c f5       	brge	.+82     	; 0x12d4 <pwm_ramp0A+0x278>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1282:	6b 85       	ldd	r22, Y+11	; 0x0b
    1284:	7c 85       	ldd	r23, Y+12	; 0x0c
    1286:	8d 85       	ldd	r24, Y+13	; 0x0d
    1288:	9e 85       	ldd	r25, Y+14	; 0x0e
    128a:	20 e0       	ldi	r18, 0x00	; 0
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	40 e2       	ldi	r20, 0x20	; 32
    1290:	51 e4       	ldi	r21, 0x41	; 65
    1292:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1296:	dc 01       	movw	r26, r24
    1298:	cb 01       	movw	r24, r22
    129a:	bc 01       	movw	r22, r24
    129c:	cd 01       	movw	r24, r26
    129e:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    12a2:	dc 01       	movw	r26, r24
    12a4:	cb 01       	movw	r24, r22
    12a6:	9e 83       	std	Y+6, r25	; 0x06
    12a8:	8d 83       	std	Y+5, r24	; 0x05
    12aa:	0f c0       	rjmp	.+30     	; 0x12ca <pwm_ramp0A+0x26e>
    12ac:	80 e9       	ldi	r24, 0x90	; 144
    12ae:	91 e0       	ldi	r25, 0x01	; 1
    12b0:	9c 83       	std	Y+4, r25	; 0x04
    12b2:	8b 83       	std	Y+3, r24	; 0x03
    12b4:	8b 81       	ldd	r24, Y+3	; 0x03
    12b6:	9c 81       	ldd	r25, Y+4	; 0x04
    12b8:	01 97       	sbiw	r24, 0x01	; 1
    12ba:	f1 f7       	brne	.-4      	; 0x12b8 <pwm_ramp0A+0x25c>
    12bc:	9c 83       	std	Y+4, r25	; 0x04
    12be:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12c0:	8d 81       	ldd	r24, Y+5	; 0x05
    12c2:	9e 81       	ldd	r25, Y+6	; 0x06
    12c4:	01 97       	sbiw	r24, 0x01	; 1
    12c6:	9e 83       	std	Y+6, r25	; 0x06
    12c8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12ca:	8d 81       	ldd	r24, Y+5	; 0x05
    12cc:	9e 81       	ldd	r25, Y+6	; 0x06
    12ce:	00 97       	sbiw	r24, 0x00	; 0
    12d0:	69 f7       	brne	.-38     	; 0x12ac <pwm_ramp0A+0x250>
    12d2:	14 c0       	rjmp	.+40     	; 0x12fc <pwm_ramp0A+0x2a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12d4:	6f 81       	ldd	r22, Y+7	; 0x07
    12d6:	78 85       	ldd	r23, Y+8	; 0x08
    12d8:	89 85       	ldd	r24, Y+9	; 0x09
    12da:	9a 85       	ldd	r25, Y+10	; 0x0a
    12dc:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    12e0:	dc 01       	movw	r26, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	9e 83       	std	Y+6, r25	; 0x06
    12e6:	8d 83       	std	Y+5, r24	; 0x05
    12e8:	8d 81       	ldd	r24, Y+5	; 0x05
    12ea:	9e 81       	ldd	r25, Y+6	; 0x06
    12ec:	9a 83       	std	Y+2, r25	; 0x02
    12ee:	89 83       	std	Y+1, r24	; 0x01
    12f0:	89 81       	ldd	r24, Y+1	; 0x01
    12f2:	9a 81       	ldd	r25, Y+2	; 0x02
    12f4:	01 97       	sbiw	r24, 0x01	; 1
    12f6:	f1 f7       	brne	.-4      	; 0x12f4 <pwm_ramp0A+0x298>
    12f8:	9a 83       	std	Y+2, r25	; 0x02
    12fa:	89 83       	std	Y+1, r24	; 0x01
    12fc:	2d 8d       	ldd	r18, Y+29	; 0x1d
    12fe:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1300:	89 a1       	ldd	r24, Y+33	; 0x21
    1302:	9a a1       	ldd	r25, Y+34	; 0x22
    1304:	28 17       	cp	r18, r24
    1306:	39 07       	cpc	r19, r25
    1308:	08 f0       	brcs	.+2      	; 0x130c <pwm_ramp0A+0x2b0>
    130a:	76 cf       	rjmp	.-276    	; 0x11f8 <pwm_ramp0A+0x19c>
    130c:	89 a1       	ldd	r24, Y+33	; 0x21
    130e:	9a a1       	ldd	r25, Y+34	; 0x22
    1310:	90 93 3d 02 	sts	0x023D, r25
    1314:	80 93 3c 02 	sts	0x023C, r24
    1318:	a4 96       	adiw	r28, 0x24	; 36
    131a:	0f b6       	in	r0, 0x3f	; 63
    131c:	f8 94       	cli
    131e:	de bf       	out	0x3e, r29	; 62
    1320:	0f be       	out	0x3f, r0	; 63
    1322:	cd bf       	out	0x3d, r28	; 61
    1324:	cf 91       	pop	r28
    1326:	df 91       	pop	r29
    1328:	08 95       	ret

0000132a <pwm_rampUp0A>:
    132a:	df 93       	push	r29
    132c:	cf 93       	push	r28
    132e:	cd b7       	in	r28, 0x3d	; 61
    1330:	de b7       	in	r29, 0x3e	; 62
    1332:	64 97       	sbiw	r28, 0x14	; 20
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	9a 8b       	std	Y+18, r25	; 0x12
    1340:	89 8b       	std	Y+17, r24	; 0x11
    1342:	7c 8b       	std	Y+20, r23	; 0x14
    1344:	6b 8b       	std	Y+19, r22	; 0x13
    1346:	a4 e4       	ldi	r26, 0x44	; 68
    1348:	b0 e0       	ldi	r27, 0x00	; 0
    134a:	e4 e4       	ldi	r30, 0x44	; 68
    134c:	f0 e0       	ldi	r31, 0x00	; 0
    134e:	80 81       	ld	r24, Z
    1350:	80 68       	ori	r24, 0x80	; 128
    1352:	8c 93       	st	X, r24
    1354:	80 91 3c 02 	lds	r24, 0x023C
    1358:	90 91 3d 02 	lds	r25, 0x023D
    135c:	98 8b       	std	Y+16, r25	; 0x10
    135e:	8f 87       	std	Y+15, r24	; 0x0f
    1360:	82 c0       	rjmp	.+260    	; 0x1466 <pwm_rampUp0A+0x13c>
    1362:	e7 e4       	ldi	r30, 0x47	; 71
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	8f 85       	ldd	r24, Y+15	; 0x0f
    1368:	80 83       	st	Z, r24
    136a:	8f 85       	ldd	r24, Y+15	; 0x0f
    136c:	98 89       	ldd	r25, Y+16	; 0x10
    136e:	01 96       	adiw	r24, 0x01	; 1
    1370:	98 8b       	std	Y+16, r25	; 0x10
    1372:	8f 87       	std	Y+15, r24	; 0x0f
    1374:	8b 89       	ldd	r24, Y+19	; 0x13
    1376:	9c 89       	ldd	r25, Y+20	; 0x14
    1378:	cc 01       	movw	r24, r24
    137a:	a0 e0       	ldi	r26, 0x00	; 0
    137c:	b0 e0       	ldi	r27, 0x00	; 0
    137e:	bc 01       	movw	r22, r24
    1380:	cd 01       	movw	r24, r26
    1382:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1386:	dc 01       	movw	r26, r24
    1388:	cb 01       	movw	r24, r22
    138a:	8b 87       	std	Y+11, r24	; 0x0b
    138c:	9c 87       	std	Y+12, r25	; 0x0c
    138e:	ad 87       	std	Y+13, r26	; 0x0d
    1390:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1392:	6b 85       	ldd	r22, Y+11	; 0x0b
    1394:	7c 85       	ldd	r23, Y+12	; 0x0c
    1396:	8d 85       	ldd	r24, Y+13	; 0x0d
    1398:	9e 85       	ldd	r25, Y+14	; 0x0e
    139a:	20 e0       	ldi	r18, 0x00	; 0
    139c:	30 e0       	ldi	r19, 0x00	; 0
    139e:	4a e7       	ldi	r20, 0x7A	; 122
    13a0:	55 e4       	ldi	r21, 0x45	; 69
    13a2:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    13a6:	dc 01       	movw	r26, r24
    13a8:	cb 01       	movw	r24, r22
    13aa:	8f 83       	std	Y+7, r24	; 0x07
    13ac:	98 87       	std	Y+8, r25	; 0x08
    13ae:	a9 87       	std	Y+9, r26	; 0x09
    13b0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13b2:	6f 81       	ldd	r22, Y+7	; 0x07
    13b4:	78 85       	ldd	r23, Y+8	; 0x08
    13b6:	89 85       	ldd	r24, Y+9	; 0x09
    13b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	40 e8       	ldi	r20, 0x80	; 128
    13c0:	5f e3       	ldi	r21, 0x3F	; 63
    13c2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    13c6:	88 23       	and	r24, r24
    13c8:	2c f4       	brge	.+10     	; 0x13d4 <pwm_rampUp0A+0xaa>
		__ticks = 1;
    13ca:	81 e0       	ldi	r24, 0x01	; 1
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	9e 83       	std	Y+6, r25	; 0x06
    13d0:	8d 83       	std	Y+5, r24	; 0x05
    13d2:	3f c0       	rjmp	.+126    	; 0x1452 <pwm_rampUp0A+0x128>
	else if (__tmp > 65535)
    13d4:	6f 81       	ldd	r22, Y+7	; 0x07
    13d6:	78 85       	ldd	r23, Y+8	; 0x08
    13d8:	89 85       	ldd	r24, Y+9	; 0x09
    13da:	9a 85       	ldd	r25, Y+10	; 0x0a
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	3f ef       	ldi	r19, 0xFF	; 255
    13e0:	4f e7       	ldi	r20, 0x7F	; 127
    13e2:	57 e4       	ldi	r21, 0x47	; 71
    13e4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    13e8:	18 16       	cp	r1, r24
    13ea:	4c f5       	brge	.+82     	; 0x143e <pwm_rampUp0A+0x114>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    13ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    13f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    13f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f4:	20 e0       	ldi	r18, 0x00	; 0
    13f6:	30 e0       	ldi	r19, 0x00	; 0
    13f8:	40 e2       	ldi	r20, 0x20	; 32
    13fa:	51 e4       	ldi	r21, 0x41	; 65
    13fc:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1400:	dc 01       	movw	r26, r24
    1402:	cb 01       	movw	r24, r22
    1404:	bc 01       	movw	r22, r24
    1406:	cd 01       	movw	r24, r26
    1408:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	9e 83       	std	Y+6, r25	; 0x06
    1412:	8d 83       	std	Y+5, r24	; 0x05
    1414:	0f c0       	rjmp	.+30     	; 0x1434 <pwm_rampUp0A+0x10a>
    1416:	80 e9       	ldi	r24, 0x90	; 144
    1418:	91 e0       	ldi	r25, 0x01	; 1
    141a:	9c 83       	std	Y+4, r25	; 0x04
    141c:	8b 83       	std	Y+3, r24	; 0x03
    141e:	8b 81       	ldd	r24, Y+3	; 0x03
    1420:	9c 81       	ldd	r25, Y+4	; 0x04
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	f1 f7       	brne	.-4      	; 0x1422 <pwm_rampUp0A+0xf8>
    1426:	9c 83       	std	Y+4, r25	; 0x04
    1428:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    142a:	8d 81       	ldd	r24, Y+5	; 0x05
    142c:	9e 81       	ldd	r25, Y+6	; 0x06
    142e:	01 97       	sbiw	r24, 0x01	; 1
    1430:	9e 83       	std	Y+6, r25	; 0x06
    1432:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1434:	8d 81       	ldd	r24, Y+5	; 0x05
    1436:	9e 81       	ldd	r25, Y+6	; 0x06
    1438:	00 97       	sbiw	r24, 0x00	; 0
    143a:	69 f7       	brne	.-38     	; 0x1416 <pwm_rampUp0A+0xec>
    143c:	14 c0       	rjmp	.+40     	; 0x1466 <pwm_rampUp0A+0x13c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    143e:	6f 81       	ldd	r22, Y+7	; 0x07
    1440:	78 85       	ldd	r23, Y+8	; 0x08
    1442:	89 85       	ldd	r24, Y+9	; 0x09
    1444:	9a 85       	ldd	r25, Y+10	; 0x0a
    1446:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    144a:	dc 01       	movw	r26, r24
    144c:	cb 01       	movw	r24, r22
    144e:	9e 83       	std	Y+6, r25	; 0x06
    1450:	8d 83       	std	Y+5, r24	; 0x05
    1452:	8d 81       	ldd	r24, Y+5	; 0x05
    1454:	9e 81       	ldd	r25, Y+6	; 0x06
    1456:	9a 83       	std	Y+2, r25	; 0x02
    1458:	89 83       	std	Y+1, r24	; 0x01
    145a:	89 81       	ldd	r24, Y+1	; 0x01
    145c:	9a 81       	ldd	r25, Y+2	; 0x02
    145e:	01 97       	sbiw	r24, 0x01	; 1
    1460:	f1 f7       	brne	.-4      	; 0x145e <pwm_rampUp0A+0x134>
    1462:	9a 83       	std	Y+2, r25	; 0x02
    1464:	89 83       	std	Y+1, r24	; 0x01
    1466:	2f 85       	ldd	r18, Y+15	; 0x0f
    1468:	38 89       	ldd	r19, Y+16	; 0x10
    146a:	89 89       	ldd	r24, Y+17	; 0x11
    146c:	9a 89       	ldd	r25, Y+18	; 0x12
    146e:	82 17       	cp	r24, r18
    1470:	93 07       	cpc	r25, r19
    1472:	08 f0       	brcs	.+2      	; 0x1476 <pwm_rampUp0A+0x14c>
    1474:	76 cf       	rjmp	.-276    	; 0x1362 <pwm_rampUp0A+0x38>
    1476:	89 89       	ldd	r24, Y+17	; 0x11
    1478:	9a 89       	ldd	r25, Y+18	; 0x12
    147a:	90 93 3d 02 	sts	0x023D, r25
    147e:	80 93 3c 02 	sts	0x023C, r24
    1482:	64 96       	adiw	r28, 0x14	; 20
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	de bf       	out	0x3e, r29	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	cd bf       	out	0x3d, r28	; 61
    148e:	cf 91       	pop	r28
    1490:	df 91       	pop	r29
    1492:	08 95       	ret

00001494 <pwm_rampDown0A>:
    1494:	df 93       	push	r29
    1496:	cf 93       	push	r28
    1498:	cd b7       	in	r28, 0x3d	; 61
    149a:	de b7       	in	r29, 0x3e	; 62
    149c:	64 97       	sbiw	r28, 0x14	; 20
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	f8 94       	cli
    14a2:	de bf       	out	0x3e, r29	; 62
    14a4:	0f be       	out	0x3f, r0	; 63
    14a6:	cd bf       	out	0x3d, r28	; 61
    14a8:	9a 8b       	std	Y+18, r25	; 0x12
    14aa:	89 8b       	std	Y+17, r24	; 0x11
    14ac:	7c 8b       	std	Y+20, r23	; 0x14
    14ae:	6b 8b       	std	Y+19, r22	; 0x13
    14b0:	89 89       	ldd	r24, Y+17	; 0x11
    14b2:	9a 89       	ldd	r25, Y+18	; 0x12
    14b4:	00 97       	sbiw	r24, 0x00	; 0
    14b6:	29 f4       	brne	.+10     	; 0x14c2 <pwm_rampDown0A+0x2e>
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	0e 94 00 08 	call	0x1000	; 0x1000 <pwm0A>
    14c0:	98 c0       	rjmp	.+304    	; 0x15f2 <pwm_rampDown0A+0x15e>
    14c2:	a4 e4       	ldi	r26, 0x44	; 68
    14c4:	b0 e0       	ldi	r27, 0x00	; 0
    14c6:	e4 e4       	ldi	r30, 0x44	; 68
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	80 81       	ld	r24, Z
    14cc:	80 68       	ori	r24, 0x80	; 128
    14ce:	8c 93       	st	X, r24
    14d0:	80 91 3c 02 	lds	r24, 0x023C
    14d4:	90 91 3d 02 	lds	r25, 0x023D
    14d8:	98 8b       	std	Y+16, r25	; 0x10
    14da:	8f 87       	std	Y+15, r24	; 0x0f
    14dc:	82 c0       	rjmp	.+260    	; 0x15e2 <pwm_rampDown0A+0x14e>
    14de:	e7 e4       	ldi	r30, 0x47	; 71
    14e0:	f0 e0       	ldi	r31, 0x00	; 0
    14e2:	8f 85       	ldd	r24, Y+15	; 0x0f
    14e4:	80 83       	st	Z, r24
    14e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    14e8:	98 89       	ldd	r25, Y+16	; 0x10
    14ea:	01 97       	sbiw	r24, 0x01	; 1
    14ec:	98 8b       	std	Y+16, r25	; 0x10
    14ee:	8f 87       	std	Y+15, r24	; 0x0f
    14f0:	8b 89       	ldd	r24, Y+19	; 0x13
    14f2:	9c 89       	ldd	r25, Y+20	; 0x14
    14f4:	cc 01       	movw	r24, r24
    14f6:	a0 e0       	ldi	r26, 0x00	; 0
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	bc 01       	movw	r22, r24
    14fc:	cd 01       	movw	r24, r26
    14fe:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1502:	dc 01       	movw	r26, r24
    1504:	cb 01       	movw	r24, r22
    1506:	8b 87       	std	Y+11, r24	; 0x0b
    1508:	9c 87       	std	Y+12, r25	; 0x0c
    150a:	ad 87       	std	Y+13, r26	; 0x0d
    150c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    150e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1510:	7c 85       	ldd	r23, Y+12	; 0x0c
    1512:	8d 85       	ldd	r24, Y+13	; 0x0d
    1514:	9e 85       	ldd	r25, Y+14	; 0x0e
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	4a e7       	ldi	r20, 0x7A	; 122
    151c:	55 e4       	ldi	r21, 0x45	; 69
    151e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1522:	dc 01       	movw	r26, r24
    1524:	cb 01       	movw	r24, r22
    1526:	8f 83       	std	Y+7, r24	; 0x07
    1528:	98 87       	std	Y+8, r25	; 0x08
    152a:	a9 87       	std	Y+9, r26	; 0x09
    152c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    152e:	6f 81       	ldd	r22, Y+7	; 0x07
    1530:	78 85       	ldd	r23, Y+8	; 0x08
    1532:	89 85       	ldd	r24, Y+9	; 0x09
    1534:	9a 85       	ldd	r25, Y+10	; 0x0a
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	40 e8       	ldi	r20, 0x80	; 128
    153c:	5f e3       	ldi	r21, 0x3F	; 63
    153e:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    1542:	88 23       	and	r24, r24
    1544:	2c f4       	brge	.+10     	; 0x1550 <pwm_rampDown0A+0xbc>
		__ticks = 1;
    1546:	81 e0       	ldi	r24, 0x01	; 1
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	9e 83       	std	Y+6, r25	; 0x06
    154c:	8d 83       	std	Y+5, r24	; 0x05
    154e:	3f c0       	rjmp	.+126    	; 0x15ce <pwm_rampDown0A+0x13a>
	else if (__tmp > 65535)
    1550:	6f 81       	ldd	r22, Y+7	; 0x07
    1552:	78 85       	ldd	r23, Y+8	; 0x08
    1554:	89 85       	ldd	r24, Y+9	; 0x09
    1556:	9a 85       	ldd	r25, Y+10	; 0x0a
    1558:	20 e0       	ldi	r18, 0x00	; 0
    155a:	3f ef       	ldi	r19, 0xFF	; 255
    155c:	4f e7       	ldi	r20, 0x7F	; 127
    155e:	57 e4       	ldi	r21, 0x47	; 71
    1560:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1564:	18 16       	cp	r1, r24
    1566:	4c f5       	brge	.+82     	; 0x15ba <pwm_rampDown0A+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1568:	6b 85       	ldd	r22, Y+11	; 0x0b
    156a:	7c 85       	ldd	r23, Y+12	; 0x0c
    156c:	8d 85       	ldd	r24, Y+13	; 0x0d
    156e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	40 e2       	ldi	r20, 0x20	; 32
    1576:	51 e4       	ldi	r21, 0x41	; 65
    1578:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	bc 01       	movw	r22, r24
    1582:	cd 01       	movw	r24, r26
    1584:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1588:	dc 01       	movw	r26, r24
    158a:	cb 01       	movw	r24, r22
    158c:	9e 83       	std	Y+6, r25	; 0x06
    158e:	8d 83       	std	Y+5, r24	; 0x05
    1590:	0f c0       	rjmp	.+30     	; 0x15b0 <pwm_rampDown0A+0x11c>
    1592:	80 e9       	ldi	r24, 0x90	; 144
    1594:	91 e0       	ldi	r25, 0x01	; 1
    1596:	9c 83       	std	Y+4, r25	; 0x04
    1598:	8b 83       	std	Y+3, r24	; 0x03
    159a:	8b 81       	ldd	r24, Y+3	; 0x03
    159c:	9c 81       	ldd	r25, Y+4	; 0x04
    159e:	01 97       	sbiw	r24, 0x01	; 1
    15a0:	f1 f7       	brne	.-4      	; 0x159e <pwm_rampDown0A+0x10a>
    15a2:	9c 83       	std	Y+4, r25	; 0x04
    15a4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15a6:	8d 81       	ldd	r24, Y+5	; 0x05
    15a8:	9e 81       	ldd	r25, Y+6	; 0x06
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	9e 83       	std	Y+6, r25	; 0x06
    15ae:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b0:	8d 81       	ldd	r24, Y+5	; 0x05
    15b2:	9e 81       	ldd	r25, Y+6	; 0x06
    15b4:	00 97       	sbiw	r24, 0x00	; 0
    15b6:	69 f7       	brne	.-38     	; 0x1592 <pwm_rampDown0A+0xfe>
    15b8:	14 c0       	rjmp	.+40     	; 0x15e2 <pwm_rampDown0A+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15ba:	6f 81       	ldd	r22, Y+7	; 0x07
    15bc:	78 85       	ldd	r23, Y+8	; 0x08
    15be:	89 85       	ldd	r24, Y+9	; 0x09
    15c0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15c2:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    15c6:	dc 01       	movw	r26, r24
    15c8:	cb 01       	movw	r24, r22
    15ca:	9e 83       	std	Y+6, r25	; 0x06
    15cc:	8d 83       	std	Y+5, r24	; 0x05
    15ce:	8d 81       	ldd	r24, Y+5	; 0x05
    15d0:	9e 81       	ldd	r25, Y+6	; 0x06
    15d2:	9a 83       	std	Y+2, r25	; 0x02
    15d4:	89 83       	std	Y+1, r24	; 0x01
    15d6:	89 81       	ldd	r24, Y+1	; 0x01
    15d8:	9a 81       	ldd	r25, Y+2	; 0x02
    15da:	01 97       	sbiw	r24, 0x01	; 1
    15dc:	f1 f7       	brne	.-4      	; 0x15da <pwm_rampDown0A+0x146>
    15de:	9a 83       	std	Y+2, r25	; 0x02
    15e0:	89 83       	std	Y+1, r24	; 0x01
    15e2:	2f 85       	ldd	r18, Y+15	; 0x0f
    15e4:	38 89       	ldd	r19, Y+16	; 0x10
    15e6:	89 89       	ldd	r24, Y+17	; 0x11
    15e8:	9a 89       	ldd	r25, Y+18	; 0x12
    15ea:	28 17       	cp	r18, r24
    15ec:	39 07       	cpc	r19, r25
    15ee:	08 f0       	brcs	.+2      	; 0x15f2 <pwm_rampDown0A+0x15e>
    15f0:	76 cf       	rjmp	.-276    	; 0x14de <pwm_rampDown0A+0x4a>
    15f2:	89 89       	ldd	r24, Y+17	; 0x11
    15f4:	9a 89       	ldd	r25, Y+18	; 0x12
    15f6:	90 93 3d 02 	sts	0x023D, r25
    15fa:	80 93 3c 02 	sts	0x023C, r24
    15fe:	64 96       	adiw	r28, 0x14	; 20
    1600:	0f b6       	in	r0, 0x3f	; 63
    1602:	f8 94       	cli
    1604:	de bf       	out	0x3e, r29	; 62
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	cd bf       	out	0x3d, r28	; 61
    160a:	cf 91       	pop	r28
    160c:	df 91       	pop	r29
    160e:	08 95       	ret

00001610 <pwm_ramp0B>:
    1610:	df 93       	push	r29
    1612:	cf 93       	push	r28
    1614:	cd b7       	in	r28, 0x3d	; 61
    1616:	de b7       	in	r29, 0x3e	; 62
    1618:	a4 97       	sbiw	r28, 0x24	; 36
    161a:	0f b6       	in	r0, 0x3f	; 63
    161c:	f8 94       	cli
    161e:	de bf       	out	0x3e, r29	; 62
    1620:	0f be       	out	0x3f, r0	; 63
    1622:	cd bf       	out	0x3d, r28	; 61
    1624:	9a a3       	std	Y+34, r25	; 0x22
    1626:	89 a3       	std	Y+33, r24	; 0x21
    1628:	7c a3       	std	Y+36, r23	; 0x24
    162a:	6b a3       	std	Y+35, r22	; 0x23
    162c:	89 a1       	ldd	r24, Y+33	; 0x21
    162e:	9a a1       	ldd	r25, Y+34	; 0x22
    1630:	00 97       	sbiw	r24, 0x00	; 0
    1632:	21 f4       	brne	.+8      	; 0x163c <pwm_ramp0B+0x2c>
    1634:	81 e0       	ldi	r24, 0x01	; 1
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	9a a3       	std	Y+34, r25	; 0x22
    163a:	89 a3       	std	Y+33, r24	; 0x21
    163c:	20 91 34 02 	lds	r18, 0x0234
    1640:	30 91 35 02 	lds	r19, 0x0235
    1644:	89 a1       	ldd	r24, Y+33	; 0x21
    1646:	9a a1       	ldd	r25, Y+34	; 0x22
    1648:	28 17       	cp	r18, r24
    164a:	39 07       	cpc	r19, r25
    164c:	08 f0       	brcs	.+2      	; 0x1650 <pwm_ramp0B+0x40>
    164e:	9f c0       	rjmp	.+318    	; 0x178e <pwm_ramp0B+0x17e>
    1650:	a4 e4       	ldi	r26, 0x44	; 68
    1652:	b0 e0       	ldi	r27, 0x00	; 0
    1654:	e4 e4       	ldi	r30, 0x44	; 68
    1656:	f0 e0       	ldi	r31, 0x00	; 0
    1658:	80 81       	ld	r24, Z
    165a:	80 62       	ori	r24, 0x20	; 32
    165c:	8c 93       	st	X, r24
    165e:	80 91 34 02 	lds	r24, 0x0234
    1662:	90 91 35 02 	lds	r25, 0x0235
    1666:	98 a3       	std	Y+32, r25	; 0x20
    1668:	8f 8f       	std	Y+31, r24	; 0x1f
    166a:	82 c0       	rjmp	.+260    	; 0x1770 <pwm_ramp0B+0x160>
    166c:	e8 e4       	ldi	r30, 0x48	; 72
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1672:	80 83       	st	Z, r24
    1674:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1676:	98 a1       	ldd	r25, Y+32	; 0x20
    1678:	01 96       	adiw	r24, 0x01	; 1
    167a:	98 a3       	std	Y+32, r25	; 0x20
    167c:	8f 8f       	std	Y+31, r24	; 0x1f
    167e:	8b a1       	ldd	r24, Y+35	; 0x23
    1680:	9c a1       	ldd	r25, Y+36	; 0x24
    1682:	cc 01       	movw	r24, r24
    1684:	a0 e0       	ldi	r26, 0x00	; 0
    1686:	b0 e0       	ldi	r27, 0x00	; 0
    1688:	bc 01       	movw	r22, r24
    168a:	cd 01       	movw	r24, r26
    168c:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	89 8f       	std	Y+25, r24	; 0x19
    1696:	9a 8f       	std	Y+26, r25	; 0x1a
    1698:	ab 8f       	std	Y+27, r26	; 0x1b
    169a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    169c:	69 8d       	ldd	r22, Y+25	; 0x19
    169e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16a0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16a2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	4a e7       	ldi	r20, 0x7A	; 122
    16aa:	55 e4       	ldi	r21, 0x45	; 69
    16ac:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    16b0:	dc 01       	movw	r26, r24
    16b2:	cb 01       	movw	r24, r22
    16b4:	8d 8b       	std	Y+21, r24	; 0x15
    16b6:	9e 8b       	std	Y+22, r25	; 0x16
    16b8:	af 8b       	std	Y+23, r26	; 0x17
    16ba:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    16bc:	6d 89       	ldd	r22, Y+21	; 0x15
    16be:	7e 89       	ldd	r23, Y+22	; 0x16
    16c0:	8f 89       	ldd	r24, Y+23	; 0x17
    16c2:	98 8d       	ldd	r25, Y+24	; 0x18
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e8       	ldi	r20, 0x80	; 128
    16ca:	5f e3       	ldi	r21, 0x3F	; 63
    16cc:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    16d0:	88 23       	and	r24, r24
    16d2:	2c f4       	brge	.+10     	; 0x16de <pwm_ramp0B+0xce>
		__ticks = 1;
    16d4:	81 e0       	ldi	r24, 0x01	; 1
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	9c 8b       	std	Y+20, r25	; 0x14
    16da:	8b 8b       	std	Y+19, r24	; 0x13
    16dc:	3f c0       	rjmp	.+126    	; 0x175c <pwm_ramp0B+0x14c>
	else if (__tmp > 65535)
    16de:	6d 89       	ldd	r22, Y+21	; 0x15
    16e0:	7e 89       	ldd	r23, Y+22	; 0x16
    16e2:	8f 89       	ldd	r24, Y+23	; 0x17
    16e4:	98 8d       	ldd	r25, Y+24	; 0x18
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	3f ef       	ldi	r19, 0xFF	; 255
    16ea:	4f e7       	ldi	r20, 0x7F	; 127
    16ec:	57 e4       	ldi	r21, 0x47	; 71
    16ee:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    16f2:	18 16       	cp	r1, r24
    16f4:	4c f5       	brge	.+82     	; 0x1748 <pwm_ramp0B+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16f6:	69 8d       	ldd	r22, Y+25	; 0x19
    16f8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	40 e2       	ldi	r20, 0x20	; 32
    1704:	51 e4       	ldi	r21, 0x41	; 65
    1706:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    170a:	dc 01       	movw	r26, r24
    170c:	cb 01       	movw	r24, r22
    170e:	bc 01       	movw	r22, r24
    1710:	cd 01       	movw	r24, r26
    1712:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1716:	dc 01       	movw	r26, r24
    1718:	cb 01       	movw	r24, r22
    171a:	9c 8b       	std	Y+20, r25	; 0x14
    171c:	8b 8b       	std	Y+19, r24	; 0x13
    171e:	0f c0       	rjmp	.+30     	; 0x173e <pwm_ramp0B+0x12e>
    1720:	80 e9       	ldi	r24, 0x90	; 144
    1722:	91 e0       	ldi	r25, 0x01	; 1
    1724:	9a 8b       	std	Y+18, r25	; 0x12
    1726:	89 8b       	std	Y+17, r24	; 0x11
    1728:	89 89       	ldd	r24, Y+17	; 0x11
    172a:	9a 89       	ldd	r25, Y+18	; 0x12
    172c:	01 97       	sbiw	r24, 0x01	; 1
    172e:	f1 f7       	brne	.-4      	; 0x172c <pwm_ramp0B+0x11c>
    1730:	9a 8b       	std	Y+18, r25	; 0x12
    1732:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1734:	8b 89       	ldd	r24, Y+19	; 0x13
    1736:	9c 89       	ldd	r25, Y+20	; 0x14
    1738:	01 97       	sbiw	r24, 0x01	; 1
    173a:	9c 8b       	std	Y+20, r25	; 0x14
    173c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173e:	8b 89       	ldd	r24, Y+19	; 0x13
    1740:	9c 89       	ldd	r25, Y+20	; 0x14
    1742:	00 97       	sbiw	r24, 0x00	; 0
    1744:	69 f7       	brne	.-38     	; 0x1720 <pwm_ramp0B+0x110>
    1746:	14 c0       	rjmp	.+40     	; 0x1770 <pwm_ramp0B+0x160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1748:	6d 89       	ldd	r22, Y+21	; 0x15
    174a:	7e 89       	ldd	r23, Y+22	; 0x16
    174c:	8f 89       	ldd	r24, Y+23	; 0x17
    174e:	98 8d       	ldd	r25, Y+24	; 0x18
    1750:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1754:	dc 01       	movw	r26, r24
    1756:	cb 01       	movw	r24, r22
    1758:	9c 8b       	std	Y+20, r25	; 0x14
    175a:	8b 8b       	std	Y+19, r24	; 0x13
    175c:	8b 89       	ldd	r24, Y+19	; 0x13
    175e:	9c 89       	ldd	r25, Y+20	; 0x14
    1760:	98 8b       	std	Y+16, r25	; 0x10
    1762:	8f 87       	std	Y+15, r24	; 0x0f
    1764:	8f 85       	ldd	r24, Y+15	; 0x0f
    1766:	98 89       	ldd	r25, Y+16	; 0x10
    1768:	01 97       	sbiw	r24, 0x01	; 1
    176a:	f1 f7       	brne	.-4      	; 0x1768 <pwm_ramp0B+0x158>
    176c:	98 8b       	std	Y+16, r25	; 0x10
    176e:	8f 87       	std	Y+15, r24	; 0x0f
    1770:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1772:	38 a1       	ldd	r19, Y+32	; 0x20
    1774:	89 a1       	ldd	r24, Y+33	; 0x21
    1776:	9a a1       	ldd	r25, Y+34	; 0x22
    1778:	82 17       	cp	r24, r18
    177a:	93 07       	cpc	r25, r19
    177c:	08 f0       	brcs	.+2      	; 0x1780 <pwm_ramp0B+0x170>
    177e:	76 cf       	rjmp	.-276    	; 0x166c <pwm_ramp0B+0x5c>
    1780:	89 a1       	ldd	r24, Y+33	; 0x21
    1782:	9a a1       	ldd	r25, Y+34	; 0x22
    1784:	90 93 35 02 	sts	0x0235, r25
    1788:	80 93 34 02 	sts	0x0234, r24
    178c:	9e c0       	rjmp	.+316    	; 0x18ca <pwm_ramp0B+0x2ba>
    178e:	a4 e4       	ldi	r26, 0x44	; 68
    1790:	b0 e0       	ldi	r27, 0x00	; 0
    1792:	e4 e4       	ldi	r30, 0x44	; 68
    1794:	f0 e0       	ldi	r31, 0x00	; 0
    1796:	80 81       	ld	r24, Z
    1798:	80 62       	ori	r24, 0x20	; 32
    179a:	8c 93       	st	X, r24
    179c:	80 91 34 02 	lds	r24, 0x0234
    17a0:	90 91 35 02 	lds	r25, 0x0235
    17a4:	9e 8f       	std	Y+30, r25	; 0x1e
    17a6:	8d 8f       	std	Y+29, r24	; 0x1d
    17a8:	82 c0       	rjmp	.+260    	; 0x18ae <pwm_ramp0B+0x29e>
    17aa:	e8 e4       	ldi	r30, 0x48	; 72
    17ac:	f0 e0       	ldi	r31, 0x00	; 0
    17ae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17b0:	80 83       	st	Z, r24
    17b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    17b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    17b6:	01 97       	sbiw	r24, 0x01	; 1
    17b8:	9e 8f       	std	Y+30, r25	; 0x1e
    17ba:	8d 8f       	std	Y+29, r24	; 0x1d
    17bc:	8b a1       	ldd	r24, Y+35	; 0x23
    17be:	9c a1       	ldd	r25, Y+36	; 0x24
    17c0:	cc 01       	movw	r24, r24
    17c2:	a0 e0       	ldi	r26, 0x00	; 0
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	bc 01       	movw	r22, r24
    17c8:	cd 01       	movw	r24, r26
    17ca:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    17ce:	dc 01       	movw	r26, r24
    17d0:	cb 01       	movw	r24, r22
    17d2:	8b 87       	std	Y+11, r24	; 0x0b
    17d4:	9c 87       	std	Y+12, r25	; 0x0c
    17d6:	ad 87       	std	Y+13, r26	; 0x0d
    17d8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17da:	6b 85       	ldd	r22, Y+11	; 0x0b
    17dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    17de:	8d 85       	ldd	r24, Y+13	; 0x0d
    17e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	4a e7       	ldi	r20, 0x7A	; 122
    17e8:	55 e4       	ldi	r21, 0x45	; 69
    17ea:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	8f 83       	std	Y+7, r24	; 0x07
    17f4:	98 87       	std	Y+8, r25	; 0x08
    17f6:	a9 87       	std	Y+9, r26	; 0x09
    17f8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    17fa:	6f 81       	ldd	r22, Y+7	; 0x07
    17fc:	78 85       	ldd	r23, Y+8	; 0x08
    17fe:	89 85       	ldd	r24, Y+9	; 0x09
    1800:	9a 85       	ldd	r25, Y+10	; 0x0a
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	40 e8       	ldi	r20, 0x80	; 128
    1808:	5f e3       	ldi	r21, 0x3F	; 63
    180a:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    180e:	88 23       	and	r24, r24
    1810:	2c f4       	brge	.+10     	; 0x181c <pwm_ramp0B+0x20c>
		__ticks = 1;
    1812:	81 e0       	ldi	r24, 0x01	; 1
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	9e 83       	std	Y+6, r25	; 0x06
    1818:	8d 83       	std	Y+5, r24	; 0x05
    181a:	3f c0       	rjmp	.+126    	; 0x189a <pwm_ramp0B+0x28a>
	else if (__tmp > 65535)
    181c:	6f 81       	ldd	r22, Y+7	; 0x07
    181e:	78 85       	ldd	r23, Y+8	; 0x08
    1820:	89 85       	ldd	r24, Y+9	; 0x09
    1822:	9a 85       	ldd	r25, Y+10	; 0x0a
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	3f ef       	ldi	r19, 0xFF	; 255
    1828:	4f e7       	ldi	r20, 0x7F	; 127
    182a:	57 e4       	ldi	r21, 0x47	; 71
    182c:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1830:	18 16       	cp	r1, r24
    1832:	4c f5       	brge	.+82     	; 0x1886 <pwm_ramp0B+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1834:	6b 85       	ldd	r22, Y+11	; 0x0b
    1836:	7c 85       	ldd	r23, Y+12	; 0x0c
    1838:	8d 85       	ldd	r24, Y+13	; 0x0d
    183a:	9e 85       	ldd	r25, Y+14	; 0x0e
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	40 e2       	ldi	r20, 0x20	; 32
    1842:	51 e4       	ldi	r21, 0x41	; 65
    1844:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1848:	dc 01       	movw	r26, r24
    184a:	cb 01       	movw	r24, r22
    184c:	bc 01       	movw	r22, r24
    184e:	cd 01       	movw	r24, r26
    1850:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1854:	dc 01       	movw	r26, r24
    1856:	cb 01       	movw	r24, r22
    1858:	9e 83       	std	Y+6, r25	; 0x06
    185a:	8d 83       	std	Y+5, r24	; 0x05
    185c:	0f c0       	rjmp	.+30     	; 0x187c <pwm_ramp0B+0x26c>
    185e:	80 e9       	ldi	r24, 0x90	; 144
    1860:	91 e0       	ldi	r25, 0x01	; 1
    1862:	9c 83       	std	Y+4, r25	; 0x04
    1864:	8b 83       	std	Y+3, r24	; 0x03
    1866:	8b 81       	ldd	r24, Y+3	; 0x03
    1868:	9c 81       	ldd	r25, Y+4	; 0x04
    186a:	01 97       	sbiw	r24, 0x01	; 1
    186c:	f1 f7       	brne	.-4      	; 0x186a <pwm_ramp0B+0x25a>
    186e:	9c 83       	std	Y+4, r25	; 0x04
    1870:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1872:	8d 81       	ldd	r24, Y+5	; 0x05
    1874:	9e 81       	ldd	r25, Y+6	; 0x06
    1876:	01 97       	sbiw	r24, 0x01	; 1
    1878:	9e 83       	std	Y+6, r25	; 0x06
    187a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    187c:	8d 81       	ldd	r24, Y+5	; 0x05
    187e:	9e 81       	ldd	r25, Y+6	; 0x06
    1880:	00 97       	sbiw	r24, 0x00	; 0
    1882:	69 f7       	brne	.-38     	; 0x185e <pwm_ramp0B+0x24e>
    1884:	14 c0       	rjmp	.+40     	; 0x18ae <pwm_ramp0B+0x29e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1886:	6f 81       	ldd	r22, Y+7	; 0x07
    1888:	78 85       	ldd	r23, Y+8	; 0x08
    188a:	89 85       	ldd	r24, Y+9	; 0x09
    188c:	9a 85       	ldd	r25, Y+10	; 0x0a
    188e:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1892:	dc 01       	movw	r26, r24
    1894:	cb 01       	movw	r24, r22
    1896:	9e 83       	std	Y+6, r25	; 0x06
    1898:	8d 83       	std	Y+5, r24	; 0x05
    189a:	8d 81       	ldd	r24, Y+5	; 0x05
    189c:	9e 81       	ldd	r25, Y+6	; 0x06
    189e:	9a 83       	std	Y+2, r25	; 0x02
    18a0:	89 83       	std	Y+1, r24	; 0x01
    18a2:	89 81       	ldd	r24, Y+1	; 0x01
    18a4:	9a 81       	ldd	r25, Y+2	; 0x02
    18a6:	01 97       	sbiw	r24, 0x01	; 1
    18a8:	f1 f7       	brne	.-4      	; 0x18a6 <pwm_ramp0B+0x296>
    18aa:	9a 83       	std	Y+2, r25	; 0x02
    18ac:	89 83       	std	Y+1, r24	; 0x01
    18ae:	2d 8d       	ldd	r18, Y+29	; 0x1d
    18b0:	3e 8d       	ldd	r19, Y+30	; 0x1e
    18b2:	89 a1       	ldd	r24, Y+33	; 0x21
    18b4:	9a a1       	ldd	r25, Y+34	; 0x22
    18b6:	28 17       	cp	r18, r24
    18b8:	39 07       	cpc	r19, r25
    18ba:	08 f0       	brcs	.+2      	; 0x18be <pwm_ramp0B+0x2ae>
    18bc:	76 cf       	rjmp	.-276    	; 0x17aa <pwm_ramp0B+0x19a>
    18be:	89 a1       	ldd	r24, Y+33	; 0x21
    18c0:	9a a1       	ldd	r25, Y+34	; 0x22
    18c2:	90 93 35 02 	sts	0x0235, r25
    18c6:	80 93 34 02 	sts	0x0234, r24
    18ca:	a4 96       	adiw	r28, 0x24	; 36
    18cc:	0f b6       	in	r0, 0x3f	; 63
    18ce:	f8 94       	cli
    18d0:	de bf       	out	0x3e, r29	; 62
    18d2:	0f be       	out	0x3f, r0	; 63
    18d4:	cd bf       	out	0x3d, r28	; 61
    18d6:	cf 91       	pop	r28
    18d8:	df 91       	pop	r29
    18da:	08 95       	ret

000018dc <pwm_rampUp0B>:
    18dc:	df 93       	push	r29
    18de:	cf 93       	push	r28
    18e0:	cd b7       	in	r28, 0x3d	; 61
    18e2:	de b7       	in	r29, 0x3e	; 62
    18e4:	64 97       	sbiw	r28, 0x14	; 20
    18e6:	0f b6       	in	r0, 0x3f	; 63
    18e8:	f8 94       	cli
    18ea:	de bf       	out	0x3e, r29	; 62
    18ec:	0f be       	out	0x3f, r0	; 63
    18ee:	cd bf       	out	0x3d, r28	; 61
    18f0:	9a 8b       	std	Y+18, r25	; 0x12
    18f2:	89 8b       	std	Y+17, r24	; 0x11
    18f4:	7c 8b       	std	Y+20, r23	; 0x14
    18f6:	6b 8b       	std	Y+19, r22	; 0x13
    18f8:	a4 e4       	ldi	r26, 0x44	; 68
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e4 e4       	ldi	r30, 0x44	; 68
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	80 62       	ori	r24, 0x20	; 32
    1904:	8c 93       	st	X, r24
    1906:	80 91 34 02 	lds	r24, 0x0234
    190a:	90 91 35 02 	lds	r25, 0x0235
    190e:	98 8b       	std	Y+16, r25	; 0x10
    1910:	8f 87       	std	Y+15, r24	; 0x0f
    1912:	82 c0       	rjmp	.+260    	; 0x1a18 <pwm_rampUp0B+0x13c>
    1914:	e8 e4       	ldi	r30, 0x48	; 72
    1916:	f0 e0       	ldi	r31, 0x00	; 0
    1918:	8f 85       	ldd	r24, Y+15	; 0x0f
    191a:	80 83       	st	Z, r24
    191c:	8f 85       	ldd	r24, Y+15	; 0x0f
    191e:	98 89       	ldd	r25, Y+16	; 0x10
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	98 8b       	std	Y+16, r25	; 0x10
    1924:	8f 87       	std	Y+15, r24	; 0x0f
    1926:	8b 89       	ldd	r24, Y+19	; 0x13
    1928:	9c 89       	ldd	r25, Y+20	; 0x14
    192a:	cc 01       	movw	r24, r24
    192c:	a0 e0       	ldi	r26, 0x00	; 0
    192e:	b0 e0       	ldi	r27, 0x00	; 0
    1930:	bc 01       	movw	r22, r24
    1932:	cd 01       	movw	r24, r26
    1934:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1938:	dc 01       	movw	r26, r24
    193a:	cb 01       	movw	r24, r22
    193c:	8b 87       	std	Y+11, r24	; 0x0b
    193e:	9c 87       	std	Y+12, r25	; 0x0c
    1940:	ad 87       	std	Y+13, r26	; 0x0d
    1942:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1944:	6b 85       	ldd	r22, Y+11	; 0x0b
    1946:	7c 85       	ldd	r23, Y+12	; 0x0c
    1948:	8d 85       	ldd	r24, Y+13	; 0x0d
    194a:	9e 85       	ldd	r25, Y+14	; 0x0e
    194c:	20 e0       	ldi	r18, 0x00	; 0
    194e:	30 e0       	ldi	r19, 0x00	; 0
    1950:	4a e7       	ldi	r20, 0x7A	; 122
    1952:	55 e4       	ldi	r21, 0x45	; 69
    1954:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1958:	dc 01       	movw	r26, r24
    195a:	cb 01       	movw	r24, r22
    195c:	8f 83       	std	Y+7, r24	; 0x07
    195e:	98 87       	std	Y+8, r25	; 0x08
    1960:	a9 87       	std	Y+9, r26	; 0x09
    1962:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1964:	6f 81       	ldd	r22, Y+7	; 0x07
    1966:	78 85       	ldd	r23, Y+8	; 0x08
    1968:	89 85       	ldd	r24, Y+9	; 0x09
    196a:	9a 85       	ldd	r25, Y+10	; 0x0a
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	30 e0       	ldi	r19, 0x00	; 0
    1970:	40 e8       	ldi	r20, 0x80	; 128
    1972:	5f e3       	ldi	r21, 0x3F	; 63
    1974:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    1978:	88 23       	and	r24, r24
    197a:	2c f4       	brge	.+10     	; 0x1986 <pwm_rampUp0B+0xaa>
		__ticks = 1;
    197c:	81 e0       	ldi	r24, 0x01	; 1
    197e:	90 e0       	ldi	r25, 0x00	; 0
    1980:	9e 83       	std	Y+6, r25	; 0x06
    1982:	8d 83       	std	Y+5, r24	; 0x05
    1984:	3f c0       	rjmp	.+126    	; 0x1a04 <pwm_rampUp0B+0x128>
	else if (__tmp > 65535)
    1986:	6f 81       	ldd	r22, Y+7	; 0x07
    1988:	78 85       	ldd	r23, Y+8	; 0x08
    198a:	89 85       	ldd	r24, Y+9	; 0x09
    198c:	9a 85       	ldd	r25, Y+10	; 0x0a
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	3f ef       	ldi	r19, 0xFF	; 255
    1992:	4f e7       	ldi	r20, 0x7F	; 127
    1994:	57 e4       	ldi	r21, 0x47	; 71
    1996:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    199a:	18 16       	cp	r1, r24
    199c:	4c f5       	brge	.+82     	; 0x19f0 <pwm_rampUp0B+0x114>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    199e:	6b 85       	ldd	r22, Y+11	; 0x0b
    19a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    19a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    19a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    19a6:	20 e0       	ldi	r18, 0x00	; 0
    19a8:	30 e0       	ldi	r19, 0x00	; 0
    19aa:	40 e2       	ldi	r20, 0x20	; 32
    19ac:	51 e4       	ldi	r21, 0x41	; 65
    19ae:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	bc 01       	movw	r22, r24
    19b8:	cd 01       	movw	r24, r26
    19ba:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    19be:	dc 01       	movw	r26, r24
    19c0:	cb 01       	movw	r24, r22
    19c2:	9e 83       	std	Y+6, r25	; 0x06
    19c4:	8d 83       	std	Y+5, r24	; 0x05
    19c6:	0f c0       	rjmp	.+30     	; 0x19e6 <pwm_rampUp0B+0x10a>
    19c8:	80 e9       	ldi	r24, 0x90	; 144
    19ca:	91 e0       	ldi	r25, 0x01	; 1
    19cc:	9c 83       	std	Y+4, r25	; 0x04
    19ce:	8b 83       	std	Y+3, r24	; 0x03
    19d0:	8b 81       	ldd	r24, Y+3	; 0x03
    19d2:	9c 81       	ldd	r25, Y+4	; 0x04
    19d4:	01 97       	sbiw	r24, 0x01	; 1
    19d6:	f1 f7       	brne	.-4      	; 0x19d4 <pwm_rampUp0B+0xf8>
    19d8:	9c 83       	std	Y+4, r25	; 0x04
    19da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19dc:	8d 81       	ldd	r24, Y+5	; 0x05
    19de:	9e 81       	ldd	r25, Y+6	; 0x06
    19e0:	01 97       	sbiw	r24, 0x01	; 1
    19e2:	9e 83       	std	Y+6, r25	; 0x06
    19e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19e6:	8d 81       	ldd	r24, Y+5	; 0x05
    19e8:	9e 81       	ldd	r25, Y+6	; 0x06
    19ea:	00 97       	sbiw	r24, 0x00	; 0
    19ec:	69 f7       	brne	.-38     	; 0x19c8 <pwm_rampUp0B+0xec>
    19ee:	14 c0       	rjmp	.+40     	; 0x1a18 <pwm_rampUp0B+0x13c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19f0:	6f 81       	ldd	r22, Y+7	; 0x07
    19f2:	78 85       	ldd	r23, Y+8	; 0x08
    19f4:	89 85       	ldd	r24, Y+9	; 0x09
    19f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    19f8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    19fc:	dc 01       	movw	r26, r24
    19fe:	cb 01       	movw	r24, r22
    1a00:	9e 83       	std	Y+6, r25	; 0x06
    1a02:	8d 83       	std	Y+5, r24	; 0x05
    1a04:	8d 81       	ldd	r24, Y+5	; 0x05
    1a06:	9e 81       	ldd	r25, Y+6	; 0x06
    1a08:	9a 83       	std	Y+2, r25	; 0x02
    1a0a:	89 83       	std	Y+1, r24	; 0x01
    1a0c:	89 81       	ldd	r24, Y+1	; 0x01
    1a0e:	9a 81       	ldd	r25, Y+2	; 0x02
    1a10:	01 97       	sbiw	r24, 0x01	; 1
    1a12:	f1 f7       	brne	.-4      	; 0x1a10 <pwm_rampUp0B+0x134>
    1a14:	9a 83       	std	Y+2, r25	; 0x02
    1a16:	89 83       	std	Y+1, r24	; 0x01
    1a18:	2f 85       	ldd	r18, Y+15	; 0x0f
    1a1a:	38 89       	ldd	r19, Y+16	; 0x10
    1a1c:	89 89       	ldd	r24, Y+17	; 0x11
    1a1e:	9a 89       	ldd	r25, Y+18	; 0x12
    1a20:	82 17       	cp	r24, r18
    1a22:	93 07       	cpc	r25, r19
    1a24:	08 f0       	brcs	.+2      	; 0x1a28 <pwm_rampUp0B+0x14c>
    1a26:	76 cf       	rjmp	.-276    	; 0x1914 <pwm_rampUp0B+0x38>
    1a28:	89 89       	ldd	r24, Y+17	; 0x11
    1a2a:	9a 89       	ldd	r25, Y+18	; 0x12
    1a2c:	90 93 35 02 	sts	0x0235, r25
    1a30:	80 93 34 02 	sts	0x0234, r24
    1a34:	64 96       	adiw	r28, 0x14	; 20
    1a36:	0f b6       	in	r0, 0x3f	; 63
    1a38:	f8 94       	cli
    1a3a:	de bf       	out	0x3e, r29	; 62
    1a3c:	0f be       	out	0x3f, r0	; 63
    1a3e:	cd bf       	out	0x3d, r28	; 61
    1a40:	cf 91       	pop	r28
    1a42:	df 91       	pop	r29
    1a44:	08 95       	ret

00001a46 <pwm_rampDown0B>:
    1a46:	df 93       	push	r29
    1a48:	cf 93       	push	r28
    1a4a:	cd b7       	in	r28, 0x3d	; 61
    1a4c:	de b7       	in	r29, 0x3e	; 62
    1a4e:	64 97       	sbiw	r28, 0x14	; 20
    1a50:	0f b6       	in	r0, 0x3f	; 63
    1a52:	f8 94       	cli
    1a54:	de bf       	out	0x3e, r29	; 62
    1a56:	0f be       	out	0x3f, r0	; 63
    1a58:	cd bf       	out	0x3d, r28	; 61
    1a5a:	9a 8b       	std	Y+18, r25	; 0x12
    1a5c:	89 8b       	std	Y+17, r24	; 0x11
    1a5e:	7c 8b       	std	Y+20, r23	; 0x14
    1a60:	6b 8b       	std	Y+19, r22	; 0x13
    1a62:	89 89       	ldd	r24, Y+17	; 0x11
    1a64:	9a 89       	ldd	r25, Y+18	; 0x12
    1a66:	00 97       	sbiw	r24, 0x00	; 0
    1a68:	21 f4       	brne	.+8      	; 0x1a72 <pwm_rampDown0B+0x2c>
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	9a 8b       	std	Y+18, r25	; 0x12
    1a70:	89 8b       	std	Y+17, r24	; 0x11
    1a72:	a4 e4       	ldi	r26, 0x44	; 68
    1a74:	b0 e0       	ldi	r27, 0x00	; 0
    1a76:	e4 e4       	ldi	r30, 0x44	; 68
    1a78:	f0 e0       	ldi	r31, 0x00	; 0
    1a7a:	80 81       	ld	r24, Z
    1a7c:	80 62       	ori	r24, 0x20	; 32
    1a7e:	8c 93       	st	X, r24
    1a80:	80 91 34 02 	lds	r24, 0x0234
    1a84:	90 91 35 02 	lds	r25, 0x0235
    1a88:	98 8b       	std	Y+16, r25	; 0x10
    1a8a:	8f 87       	std	Y+15, r24	; 0x0f
    1a8c:	84 c0       	rjmp	.+264    	; 0x1b96 <pwm_rampDown0B+0x150>
    1a8e:	ea e8       	ldi	r30, 0x8A	; 138
    1a90:	f0 e0       	ldi	r31, 0x00	; 0
    1a92:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a94:	98 89       	ldd	r25, Y+16	; 0x10
    1a96:	91 83       	std	Z+1, r25	; 0x01
    1a98:	80 83       	st	Z, r24
    1a9a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a9c:	98 89       	ldd	r25, Y+16	; 0x10
    1a9e:	01 97       	sbiw	r24, 0x01	; 1
    1aa0:	98 8b       	std	Y+16, r25	; 0x10
    1aa2:	8f 87       	std	Y+15, r24	; 0x0f
    1aa4:	8b 89       	ldd	r24, Y+19	; 0x13
    1aa6:	9c 89       	ldd	r25, Y+20	; 0x14
    1aa8:	cc 01       	movw	r24, r24
    1aaa:	a0 e0       	ldi	r26, 0x00	; 0
    1aac:	b0 e0       	ldi	r27, 0x00	; 0
    1aae:	bc 01       	movw	r22, r24
    1ab0:	cd 01       	movw	r24, r26
    1ab2:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	8b 87       	std	Y+11, r24	; 0x0b
    1abc:	9c 87       	std	Y+12, r25	; 0x0c
    1abe:	ad 87       	std	Y+13, r26	; 0x0d
    1ac0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ac2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ac4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ac6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ac8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aca:	20 e0       	ldi	r18, 0x00	; 0
    1acc:	30 e0       	ldi	r19, 0x00	; 0
    1ace:	4a e7       	ldi	r20, 0x7A	; 122
    1ad0:	55 e4       	ldi	r21, 0x45	; 69
    1ad2:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1ad6:	dc 01       	movw	r26, r24
    1ad8:	cb 01       	movw	r24, r22
    1ada:	8f 83       	std	Y+7, r24	; 0x07
    1adc:	98 87       	std	Y+8, r25	; 0x08
    1ade:	a9 87       	std	Y+9, r26	; 0x09
    1ae0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ae2:	6f 81       	ldd	r22, Y+7	; 0x07
    1ae4:	78 85       	ldd	r23, Y+8	; 0x08
    1ae6:	89 85       	ldd	r24, Y+9	; 0x09
    1ae8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aea:	20 e0       	ldi	r18, 0x00	; 0
    1aec:	30 e0       	ldi	r19, 0x00	; 0
    1aee:	40 e8       	ldi	r20, 0x80	; 128
    1af0:	5f e3       	ldi	r21, 0x3F	; 63
    1af2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    1af6:	88 23       	and	r24, r24
    1af8:	2c f4       	brge	.+10     	; 0x1b04 <pwm_rampDown0B+0xbe>
		__ticks = 1;
    1afa:	81 e0       	ldi	r24, 0x01	; 1
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	9e 83       	std	Y+6, r25	; 0x06
    1b00:	8d 83       	std	Y+5, r24	; 0x05
    1b02:	3f c0       	rjmp	.+126    	; 0x1b82 <pwm_rampDown0B+0x13c>
	else if (__tmp > 65535)
    1b04:	6f 81       	ldd	r22, Y+7	; 0x07
    1b06:	78 85       	ldd	r23, Y+8	; 0x08
    1b08:	89 85       	ldd	r24, Y+9	; 0x09
    1b0a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b0c:	20 e0       	ldi	r18, 0x00	; 0
    1b0e:	3f ef       	ldi	r19, 0xFF	; 255
    1b10:	4f e7       	ldi	r20, 0x7F	; 127
    1b12:	57 e4       	ldi	r21, 0x47	; 71
    1b14:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1b18:	18 16       	cp	r1, r24
    1b1a:	4c f5       	brge	.+82     	; 0x1b6e <pwm_rampDown0B+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b1c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b1e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b20:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b22:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b24:	20 e0       	ldi	r18, 0x00	; 0
    1b26:	30 e0       	ldi	r19, 0x00	; 0
    1b28:	40 e2       	ldi	r20, 0x20	; 32
    1b2a:	51 e4       	ldi	r21, 0x41	; 65
    1b2c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1b30:	dc 01       	movw	r26, r24
    1b32:	cb 01       	movw	r24, r22
    1b34:	bc 01       	movw	r22, r24
    1b36:	cd 01       	movw	r24, r26
    1b38:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	9e 83       	std	Y+6, r25	; 0x06
    1b42:	8d 83       	std	Y+5, r24	; 0x05
    1b44:	0f c0       	rjmp	.+30     	; 0x1b64 <pwm_rampDown0B+0x11e>
    1b46:	80 e9       	ldi	r24, 0x90	; 144
    1b48:	91 e0       	ldi	r25, 0x01	; 1
    1b4a:	9c 83       	std	Y+4, r25	; 0x04
    1b4c:	8b 83       	std	Y+3, r24	; 0x03
    1b4e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b50:	9c 81       	ldd	r25, Y+4	; 0x04
    1b52:	01 97       	sbiw	r24, 0x01	; 1
    1b54:	f1 f7       	brne	.-4      	; 0x1b52 <pwm_rampDown0B+0x10c>
    1b56:	9c 83       	std	Y+4, r25	; 0x04
    1b58:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b5a:	8d 81       	ldd	r24, Y+5	; 0x05
    1b5c:	9e 81       	ldd	r25, Y+6	; 0x06
    1b5e:	01 97       	sbiw	r24, 0x01	; 1
    1b60:	9e 83       	std	Y+6, r25	; 0x06
    1b62:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b64:	8d 81       	ldd	r24, Y+5	; 0x05
    1b66:	9e 81       	ldd	r25, Y+6	; 0x06
    1b68:	00 97       	sbiw	r24, 0x00	; 0
    1b6a:	69 f7       	brne	.-38     	; 0x1b46 <pwm_rampDown0B+0x100>
    1b6c:	14 c0       	rjmp	.+40     	; 0x1b96 <pwm_rampDown0B+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b6e:	6f 81       	ldd	r22, Y+7	; 0x07
    1b70:	78 85       	ldd	r23, Y+8	; 0x08
    1b72:	89 85       	ldd	r24, Y+9	; 0x09
    1b74:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b76:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1b7a:	dc 01       	movw	r26, r24
    1b7c:	cb 01       	movw	r24, r22
    1b7e:	9e 83       	std	Y+6, r25	; 0x06
    1b80:	8d 83       	std	Y+5, r24	; 0x05
    1b82:	8d 81       	ldd	r24, Y+5	; 0x05
    1b84:	9e 81       	ldd	r25, Y+6	; 0x06
    1b86:	9a 83       	std	Y+2, r25	; 0x02
    1b88:	89 83       	std	Y+1, r24	; 0x01
    1b8a:	89 81       	ldd	r24, Y+1	; 0x01
    1b8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1b8e:	01 97       	sbiw	r24, 0x01	; 1
    1b90:	f1 f7       	brne	.-4      	; 0x1b8e <pwm_rampDown0B+0x148>
    1b92:	9a 83       	std	Y+2, r25	; 0x02
    1b94:	89 83       	std	Y+1, r24	; 0x01
    1b96:	2f 85       	ldd	r18, Y+15	; 0x0f
    1b98:	38 89       	ldd	r19, Y+16	; 0x10
    1b9a:	89 89       	ldd	r24, Y+17	; 0x11
    1b9c:	9a 89       	ldd	r25, Y+18	; 0x12
    1b9e:	28 17       	cp	r18, r24
    1ba0:	39 07       	cpc	r19, r25
    1ba2:	08 f0       	brcs	.+2      	; 0x1ba6 <pwm_rampDown0B+0x160>
    1ba4:	74 cf       	rjmp	.-280    	; 0x1a8e <pwm_rampDown0B+0x48>
    1ba6:	89 89       	ldd	r24, Y+17	; 0x11
    1ba8:	9a 89       	ldd	r25, Y+18	; 0x12
    1baa:	90 93 35 02 	sts	0x0235, r25
    1bae:	80 93 34 02 	sts	0x0234, r24
    1bb2:	64 96       	adiw	r28, 0x14	; 20
    1bb4:	0f b6       	in	r0, 0x3f	; 63
    1bb6:	f8 94       	cli
    1bb8:	de bf       	out	0x3e, r29	; 62
    1bba:	0f be       	out	0x3f, r0	; 63
    1bbc:	cd bf       	out	0x3d, r28	; 61
    1bbe:	cf 91       	pop	r28
    1bc0:	df 91       	pop	r29
    1bc2:	08 95       	ret

00001bc4 <pwm_setup1>:
    1bc4:	df 93       	push	r29
    1bc6:	cf 93       	push	r28
    1bc8:	cd b7       	in	r28, 0x3d	; 61
    1bca:	de b7       	in	r29, 0x3e	; 62
    1bcc:	a1 e8       	ldi	r26, 0x81	; 129
    1bce:	b0 e0       	ldi	r27, 0x00	; 0
    1bd0:	e1 e8       	ldi	r30, 0x81	; 129
    1bd2:	f0 e0       	ldi	r31, 0x00	; 0
    1bd4:	80 81       	ld	r24, Z
    1bd6:	83 60       	ori	r24, 0x03	; 3
    1bd8:	8c 93       	st	X, r24
    1bda:	a0 e8       	ldi	r26, 0x80	; 128
    1bdc:	b0 e0       	ldi	r27, 0x00	; 0
    1bde:	e0 e8       	ldi	r30, 0x80	; 128
    1be0:	f0 e0       	ldi	r31, 0x00	; 0
    1be2:	80 81       	ld	r24, Z
    1be4:	81 60       	ori	r24, 0x01	; 1
    1be6:	8c 93       	st	X, r24
    1be8:	a4 e2       	ldi	r26, 0x24	; 36
    1bea:	b0 e0       	ldi	r27, 0x00	; 0
    1bec:	e4 e2       	ldi	r30, 0x24	; 36
    1bee:	f0 e0       	ldi	r31, 0x00	; 0
    1bf0:	80 81       	ld	r24, Z
    1bf2:	82 60       	ori	r24, 0x02	; 2
    1bf4:	8c 93       	st	X, r24
    1bf6:	a4 e2       	ldi	r26, 0x24	; 36
    1bf8:	b0 e0       	ldi	r27, 0x00	; 0
    1bfa:	e4 e2       	ldi	r30, 0x24	; 36
    1bfc:	f0 e0       	ldi	r31, 0x00	; 0
    1bfe:	80 81       	ld	r24, Z
    1c00:	84 60       	ori	r24, 0x04	; 4
    1c02:	8c 93       	st	X, r24
    1c04:	10 92 33 02 	sts	0x0233, r1
    1c08:	10 92 32 02 	sts	0x0232, r1
    1c0c:	10 92 37 02 	sts	0x0237, r1
    1c10:	10 92 36 02 	sts	0x0236, r1
    1c14:	10 92 4f 02 	sts	0x024F, r1
    1c18:	10 92 4e 02 	sts	0x024E, r1
    1c1c:	10 92 43 02 	sts	0x0243, r1
    1c20:	10 92 42 02 	sts	0x0242, r1
    1c24:	10 92 4b 02 	sts	0x024B, r1
    1c28:	10 92 4a 02 	sts	0x024A, r1
    1c2c:	10 92 3f 02 	sts	0x023F, r1
    1c30:	10 92 3e 02 	sts	0x023E, r1
    1c34:	cf 91       	pop	r28
    1c36:	df 91       	pop	r29
    1c38:	08 95       	ret

00001c3a <pwm1A>:
    1c3a:	df 93       	push	r29
    1c3c:	cf 93       	push	r28
    1c3e:	00 d0       	rcall	.+0      	; 0x1c40 <pwm1A+0x6>
    1c40:	cd b7       	in	r28, 0x3d	; 61
    1c42:	de b7       	in	r29, 0x3e	; 62
    1c44:	9a 83       	std	Y+2, r25	; 0x02
    1c46:	89 83       	std	Y+1, r24	; 0x01
    1c48:	a0 e8       	ldi	r26, 0x80	; 128
    1c4a:	b0 e0       	ldi	r27, 0x00	; 0
    1c4c:	e0 e8       	ldi	r30, 0x80	; 128
    1c4e:	f0 e0       	ldi	r31, 0x00	; 0
    1c50:	80 81       	ld	r24, Z
    1c52:	80 68       	ori	r24, 0x80	; 128
    1c54:	8c 93       	st	X, r24
    1c56:	e8 e8       	ldi	r30, 0x88	; 136
    1c58:	f0 e0       	ldi	r31, 0x00	; 0
    1c5a:	89 81       	ldd	r24, Y+1	; 0x01
    1c5c:	9a 81       	ldd	r25, Y+2	; 0x02
    1c5e:	91 83       	std	Z+1, r25	; 0x01
    1c60:	80 83       	st	Z, r24
    1c62:	0f 90       	pop	r0
    1c64:	0f 90       	pop	r0
    1c66:	cf 91       	pop	r28
    1c68:	df 91       	pop	r29
    1c6a:	08 95       	ret

00001c6c <pwm1B>:
    1c6c:	df 93       	push	r29
    1c6e:	cf 93       	push	r28
    1c70:	00 d0       	rcall	.+0      	; 0x1c72 <pwm1B+0x6>
    1c72:	cd b7       	in	r28, 0x3d	; 61
    1c74:	de b7       	in	r29, 0x3e	; 62
    1c76:	9a 83       	std	Y+2, r25	; 0x02
    1c78:	89 83       	std	Y+1, r24	; 0x01
    1c7a:	a0 e8       	ldi	r26, 0x80	; 128
    1c7c:	b0 e0       	ldi	r27, 0x00	; 0
    1c7e:	e0 e8       	ldi	r30, 0x80	; 128
    1c80:	f0 e0       	ldi	r31, 0x00	; 0
    1c82:	80 81       	ld	r24, Z
    1c84:	80 62       	ori	r24, 0x20	; 32
    1c86:	8c 93       	st	X, r24
    1c88:	ea e8       	ldi	r30, 0x8A	; 138
    1c8a:	f0 e0       	ldi	r31, 0x00	; 0
    1c8c:	89 81       	ldd	r24, Y+1	; 0x01
    1c8e:	9a 81       	ldd	r25, Y+2	; 0x02
    1c90:	91 83       	std	Z+1, r25	; 0x01
    1c92:	80 83       	st	Z, r24
    1c94:	0f 90       	pop	r0
    1c96:	0f 90       	pop	r0
    1c98:	cf 91       	pop	r28
    1c9a:	df 91       	pop	r29
    1c9c:	08 95       	ret

00001c9e <pwm_ramp1A>:
    1c9e:	df 93       	push	r29
    1ca0:	cf 93       	push	r28
    1ca2:	cd b7       	in	r28, 0x3d	; 61
    1ca4:	de b7       	in	r29, 0x3e	; 62
    1ca6:	a4 97       	sbiw	r28, 0x24	; 36
    1ca8:	0f b6       	in	r0, 0x3f	; 63
    1caa:	f8 94       	cli
    1cac:	de bf       	out	0x3e, r29	; 62
    1cae:	0f be       	out	0x3f, r0	; 63
    1cb0:	cd bf       	out	0x3d, r28	; 61
    1cb2:	9a a3       	std	Y+34, r25	; 0x22
    1cb4:	89 a3       	std	Y+33, r24	; 0x21
    1cb6:	7c a3       	std	Y+36, r23	; 0x24
    1cb8:	6b a3       	std	Y+35, r22	; 0x23
    1cba:	89 a1       	ldd	r24, Y+33	; 0x21
    1cbc:	9a a1       	ldd	r25, Y+34	; 0x22
    1cbe:	00 97       	sbiw	r24, 0x00	; 0
    1cc0:	29 f4       	brne	.+10     	; 0x1ccc <pwm_ramp1A+0x2e>
    1cc2:	80 e0       	ldi	r24, 0x00	; 0
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <pwm1A>
    1cca:	4b c1       	rjmp	.+662    	; 0x1f62 <pwm_ramp1A+0x2c4>
    1ccc:	20 91 4e 02 	lds	r18, 0x024E
    1cd0:	30 91 4f 02 	lds	r19, 0x024F
    1cd4:	89 a1       	ldd	r24, Y+33	; 0x21
    1cd6:	9a a1       	ldd	r25, Y+34	; 0x22
    1cd8:	28 17       	cp	r18, r24
    1cda:	39 07       	cpc	r19, r25
    1cdc:	08 f0       	brcs	.+2      	; 0x1ce0 <pwm_ramp1A+0x42>
    1cde:	a1 c0       	rjmp	.+322    	; 0x1e22 <pwm_ramp1A+0x184>
    1ce0:	a0 e8       	ldi	r26, 0x80	; 128
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	e0 e8       	ldi	r30, 0x80	; 128
    1ce6:	f0 e0       	ldi	r31, 0x00	; 0
    1ce8:	80 81       	ld	r24, Z
    1cea:	80 68       	ori	r24, 0x80	; 128
    1cec:	8c 93       	st	X, r24
    1cee:	80 91 4e 02 	lds	r24, 0x024E
    1cf2:	90 91 4f 02 	lds	r25, 0x024F
    1cf6:	98 a3       	std	Y+32, r25	; 0x20
    1cf8:	8f 8f       	std	Y+31, r24	; 0x1f
    1cfa:	84 c0       	rjmp	.+264    	; 0x1e04 <pwm_ramp1A+0x166>
    1cfc:	e8 e8       	ldi	r30, 0x88	; 136
    1cfe:	f0 e0       	ldi	r31, 0x00	; 0
    1d00:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d02:	98 a1       	ldd	r25, Y+32	; 0x20
    1d04:	91 83       	std	Z+1, r25	; 0x01
    1d06:	80 83       	st	Z, r24
    1d08:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d0a:	98 a1       	ldd	r25, Y+32	; 0x20
    1d0c:	01 96       	adiw	r24, 0x01	; 1
    1d0e:	98 a3       	std	Y+32, r25	; 0x20
    1d10:	8f 8f       	std	Y+31, r24	; 0x1f
    1d12:	8b a1       	ldd	r24, Y+35	; 0x23
    1d14:	9c a1       	ldd	r25, Y+36	; 0x24
    1d16:	cc 01       	movw	r24, r24
    1d18:	a0 e0       	ldi	r26, 0x00	; 0
    1d1a:	b0 e0       	ldi	r27, 0x00	; 0
    1d1c:	bc 01       	movw	r22, r24
    1d1e:	cd 01       	movw	r24, r26
    1d20:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1d24:	dc 01       	movw	r26, r24
    1d26:	cb 01       	movw	r24, r22
    1d28:	89 8f       	std	Y+25, r24	; 0x19
    1d2a:	9a 8f       	std	Y+26, r25	; 0x1a
    1d2c:	ab 8f       	std	Y+27, r26	; 0x1b
    1d2e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d30:	69 8d       	ldd	r22, Y+25	; 0x19
    1d32:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d34:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d36:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	4a e7       	ldi	r20, 0x7A	; 122
    1d3e:	55 e4       	ldi	r21, 0x45	; 69
    1d40:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	8d 8b       	std	Y+21, r24	; 0x15
    1d4a:	9e 8b       	std	Y+22, r25	; 0x16
    1d4c:	af 8b       	std	Y+23, r26	; 0x17
    1d4e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1d50:	6d 89       	ldd	r22, Y+21	; 0x15
    1d52:	7e 89       	ldd	r23, Y+22	; 0x16
    1d54:	8f 89       	ldd	r24, Y+23	; 0x17
    1d56:	98 8d       	ldd	r25, Y+24	; 0x18
    1d58:	20 e0       	ldi	r18, 0x00	; 0
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	40 e8       	ldi	r20, 0x80	; 128
    1d5e:	5f e3       	ldi	r21, 0x3F	; 63
    1d60:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    1d64:	88 23       	and	r24, r24
    1d66:	2c f4       	brge	.+10     	; 0x1d72 <pwm_ramp1A+0xd4>
		__ticks = 1;
    1d68:	81 e0       	ldi	r24, 0x01	; 1
    1d6a:	90 e0       	ldi	r25, 0x00	; 0
    1d6c:	9c 8b       	std	Y+20, r25	; 0x14
    1d6e:	8b 8b       	std	Y+19, r24	; 0x13
    1d70:	3f c0       	rjmp	.+126    	; 0x1df0 <pwm_ramp1A+0x152>
	else if (__tmp > 65535)
    1d72:	6d 89       	ldd	r22, Y+21	; 0x15
    1d74:	7e 89       	ldd	r23, Y+22	; 0x16
    1d76:	8f 89       	ldd	r24, Y+23	; 0x17
    1d78:	98 8d       	ldd	r25, Y+24	; 0x18
    1d7a:	20 e0       	ldi	r18, 0x00	; 0
    1d7c:	3f ef       	ldi	r19, 0xFF	; 255
    1d7e:	4f e7       	ldi	r20, 0x7F	; 127
    1d80:	57 e4       	ldi	r21, 0x47	; 71
    1d82:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1d86:	18 16       	cp	r1, r24
    1d88:	4c f5       	brge	.+82     	; 0x1ddc <pwm_ramp1A+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d8a:	69 8d       	ldd	r22, Y+25	; 0x19
    1d8c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1d8e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1d90:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1d92:	20 e0       	ldi	r18, 0x00	; 0
    1d94:	30 e0       	ldi	r19, 0x00	; 0
    1d96:	40 e2       	ldi	r20, 0x20	; 32
    1d98:	51 e4       	ldi	r21, 0x41	; 65
    1d9a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1d9e:	dc 01       	movw	r26, r24
    1da0:	cb 01       	movw	r24, r22
    1da2:	bc 01       	movw	r22, r24
    1da4:	cd 01       	movw	r24, r26
    1da6:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1daa:	dc 01       	movw	r26, r24
    1dac:	cb 01       	movw	r24, r22
    1dae:	9c 8b       	std	Y+20, r25	; 0x14
    1db0:	8b 8b       	std	Y+19, r24	; 0x13
    1db2:	0f c0       	rjmp	.+30     	; 0x1dd2 <pwm_ramp1A+0x134>
    1db4:	80 e9       	ldi	r24, 0x90	; 144
    1db6:	91 e0       	ldi	r25, 0x01	; 1
    1db8:	9a 8b       	std	Y+18, r25	; 0x12
    1dba:	89 8b       	std	Y+17, r24	; 0x11
    1dbc:	89 89       	ldd	r24, Y+17	; 0x11
    1dbe:	9a 89       	ldd	r25, Y+18	; 0x12
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	f1 f7       	brne	.-4      	; 0x1dc0 <pwm_ramp1A+0x122>
    1dc4:	9a 8b       	std	Y+18, r25	; 0x12
    1dc6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dc8:	8b 89       	ldd	r24, Y+19	; 0x13
    1dca:	9c 89       	ldd	r25, Y+20	; 0x14
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	9c 8b       	std	Y+20, r25	; 0x14
    1dd0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dd2:	8b 89       	ldd	r24, Y+19	; 0x13
    1dd4:	9c 89       	ldd	r25, Y+20	; 0x14
    1dd6:	00 97       	sbiw	r24, 0x00	; 0
    1dd8:	69 f7       	brne	.-38     	; 0x1db4 <pwm_ramp1A+0x116>
    1dda:	14 c0       	rjmp	.+40     	; 0x1e04 <pwm_ramp1A+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ddc:	6d 89       	ldd	r22, Y+21	; 0x15
    1dde:	7e 89       	ldd	r23, Y+22	; 0x16
    1de0:	8f 89       	ldd	r24, Y+23	; 0x17
    1de2:	98 8d       	ldd	r25, Y+24	; 0x18
    1de4:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1de8:	dc 01       	movw	r26, r24
    1dea:	cb 01       	movw	r24, r22
    1dec:	9c 8b       	std	Y+20, r25	; 0x14
    1dee:	8b 8b       	std	Y+19, r24	; 0x13
    1df0:	8b 89       	ldd	r24, Y+19	; 0x13
    1df2:	9c 89       	ldd	r25, Y+20	; 0x14
    1df4:	98 8b       	std	Y+16, r25	; 0x10
    1df6:	8f 87       	std	Y+15, r24	; 0x0f
    1df8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1dfa:	98 89       	ldd	r25, Y+16	; 0x10
    1dfc:	01 97       	sbiw	r24, 0x01	; 1
    1dfe:	f1 f7       	brne	.-4      	; 0x1dfc <pwm_ramp1A+0x15e>
    1e00:	98 8b       	std	Y+16, r25	; 0x10
    1e02:	8f 87       	std	Y+15, r24	; 0x0f
    1e04:	2f 8d       	ldd	r18, Y+31	; 0x1f
    1e06:	38 a1       	ldd	r19, Y+32	; 0x20
    1e08:	89 a1       	ldd	r24, Y+33	; 0x21
    1e0a:	9a a1       	ldd	r25, Y+34	; 0x22
    1e0c:	82 17       	cp	r24, r18
    1e0e:	93 07       	cpc	r25, r19
    1e10:	08 f0       	brcs	.+2      	; 0x1e14 <pwm_ramp1A+0x176>
    1e12:	74 cf       	rjmp	.-280    	; 0x1cfc <pwm_ramp1A+0x5e>
    1e14:	89 a1       	ldd	r24, Y+33	; 0x21
    1e16:	9a a1       	ldd	r25, Y+34	; 0x22
    1e18:	90 93 4f 02 	sts	0x024F, r25
    1e1c:	80 93 4e 02 	sts	0x024E, r24
    1e20:	9a c0       	rjmp	.+308    	; 0x1f56 <pwm_ramp1A+0x2b8>
    1e22:	a0 e8       	ldi	r26, 0x80	; 128
    1e24:	b0 e0       	ldi	r27, 0x00	; 0
    1e26:	e0 e8       	ldi	r30, 0x80	; 128
    1e28:	f0 e0       	ldi	r31, 0x00	; 0
    1e2a:	80 81       	ld	r24, Z
    1e2c:	80 68       	ori	r24, 0x80	; 128
    1e2e:	8c 93       	st	X, r24
    1e30:	80 91 4e 02 	lds	r24, 0x024E
    1e34:	90 91 4f 02 	lds	r25, 0x024F
    1e38:	9e 8f       	std	Y+30, r25	; 0x1e
    1e3a:	8d 8f       	std	Y+29, r24	; 0x1d
    1e3c:	84 c0       	rjmp	.+264    	; 0x1f46 <pwm_ramp1A+0x2a8>
    1e3e:	e8 e8       	ldi	r30, 0x88	; 136
    1e40:	f0 e0       	ldi	r31, 0x00	; 0
    1e42:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e44:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	80 83       	st	Z, r24
    1e4a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e4c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e4e:	01 97       	sbiw	r24, 0x01	; 1
    1e50:	9e 8f       	std	Y+30, r25	; 0x1e
    1e52:	8d 8f       	std	Y+29, r24	; 0x1d
    1e54:	8b a1       	ldd	r24, Y+35	; 0x23
    1e56:	9c a1       	ldd	r25, Y+36	; 0x24
    1e58:	cc 01       	movw	r24, r24
    1e5a:	a0 e0       	ldi	r26, 0x00	; 0
    1e5c:	b0 e0       	ldi	r27, 0x00	; 0
    1e5e:	bc 01       	movw	r22, r24
    1e60:	cd 01       	movw	r24, r26
    1e62:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1e66:	dc 01       	movw	r26, r24
    1e68:	cb 01       	movw	r24, r22
    1e6a:	8b 87       	std	Y+11, r24	; 0x0b
    1e6c:	9c 87       	std	Y+12, r25	; 0x0c
    1e6e:	ad 87       	std	Y+13, r26	; 0x0d
    1e70:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e72:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e74:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e76:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e78:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e7a:	20 e0       	ldi	r18, 0x00	; 0
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	4a e7       	ldi	r20, 0x7A	; 122
    1e80:	55 e4       	ldi	r21, 0x45	; 69
    1e82:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1e86:	dc 01       	movw	r26, r24
    1e88:	cb 01       	movw	r24, r22
    1e8a:	8f 83       	std	Y+7, r24	; 0x07
    1e8c:	98 87       	std	Y+8, r25	; 0x08
    1e8e:	a9 87       	std	Y+9, r26	; 0x09
    1e90:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e92:	6f 81       	ldd	r22, Y+7	; 0x07
    1e94:	78 85       	ldd	r23, Y+8	; 0x08
    1e96:	89 85       	ldd	r24, Y+9	; 0x09
    1e98:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e9a:	20 e0       	ldi	r18, 0x00	; 0
    1e9c:	30 e0       	ldi	r19, 0x00	; 0
    1e9e:	40 e8       	ldi	r20, 0x80	; 128
    1ea0:	5f e3       	ldi	r21, 0x3F	; 63
    1ea2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    1ea6:	88 23       	and	r24, r24
    1ea8:	2c f4       	brge	.+10     	; 0x1eb4 <pwm_ramp1A+0x216>
		__ticks = 1;
    1eaa:	81 e0       	ldi	r24, 0x01	; 1
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	9e 83       	std	Y+6, r25	; 0x06
    1eb0:	8d 83       	std	Y+5, r24	; 0x05
    1eb2:	3f c0       	rjmp	.+126    	; 0x1f32 <pwm_ramp1A+0x294>
	else if (__tmp > 65535)
    1eb4:	6f 81       	ldd	r22, Y+7	; 0x07
    1eb6:	78 85       	ldd	r23, Y+8	; 0x08
    1eb8:	89 85       	ldd	r24, Y+9	; 0x09
    1eba:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ebc:	20 e0       	ldi	r18, 0x00	; 0
    1ebe:	3f ef       	ldi	r19, 0xFF	; 255
    1ec0:	4f e7       	ldi	r20, 0x7F	; 127
    1ec2:	57 e4       	ldi	r21, 0x47	; 71
    1ec4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    1ec8:	18 16       	cp	r1, r24
    1eca:	4c f5       	brge	.+82     	; 0x1f1e <pwm_ramp1A+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ecc:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ece:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ed0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ed2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	40 e2       	ldi	r20, 0x20	; 32
    1eda:	51 e4       	ldi	r21, 0x41	; 65
    1edc:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	bc 01       	movw	r22, r24
    1ee6:	cd 01       	movw	r24, r26
    1ee8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1eec:	dc 01       	movw	r26, r24
    1eee:	cb 01       	movw	r24, r22
    1ef0:	9e 83       	std	Y+6, r25	; 0x06
    1ef2:	8d 83       	std	Y+5, r24	; 0x05
    1ef4:	0f c0       	rjmp	.+30     	; 0x1f14 <pwm_ramp1A+0x276>
    1ef6:	80 e9       	ldi	r24, 0x90	; 144
    1ef8:	91 e0       	ldi	r25, 0x01	; 1
    1efa:	9c 83       	std	Y+4, r25	; 0x04
    1efc:	8b 83       	std	Y+3, r24	; 0x03
    1efe:	8b 81       	ldd	r24, Y+3	; 0x03
    1f00:	9c 81       	ldd	r25, Y+4	; 0x04
    1f02:	01 97       	sbiw	r24, 0x01	; 1
    1f04:	f1 f7       	brne	.-4      	; 0x1f02 <pwm_ramp1A+0x264>
    1f06:	9c 83       	std	Y+4, r25	; 0x04
    1f08:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f0a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f0c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f0e:	01 97       	sbiw	r24, 0x01	; 1
    1f10:	9e 83       	std	Y+6, r25	; 0x06
    1f12:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f14:	8d 81       	ldd	r24, Y+5	; 0x05
    1f16:	9e 81       	ldd	r25, Y+6	; 0x06
    1f18:	00 97       	sbiw	r24, 0x00	; 0
    1f1a:	69 f7       	brne	.-38     	; 0x1ef6 <pwm_ramp1A+0x258>
    1f1c:	14 c0       	rjmp	.+40     	; 0x1f46 <pwm_ramp1A+0x2a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f1e:	6f 81       	ldd	r22, Y+7	; 0x07
    1f20:	78 85       	ldd	r23, Y+8	; 0x08
    1f22:	89 85       	ldd	r24, Y+9	; 0x09
    1f24:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f26:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    1f2a:	dc 01       	movw	r26, r24
    1f2c:	cb 01       	movw	r24, r22
    1f2e:	9e 83       	std	Y+6, r25	; 0x06
    1f30:	8d 83       	std	Y+5, r24	; 0x05
    1f32:	8d 81       	ldd	r24, Y+5	; 0x05
    1f34:	9e 81       	ldd	r25, Y+6	; 0x06
    1f36:	9a 83       	std	Y+2, r25	; 0x02
    1f38:	89 83       	std	Y+1, r24	; 0x01
    1f3a:	89 81       	ldd	r24, Y+1	; 0x01
    1f3c:	9a 81       	ldd	r25, Y+2	; 0x02
    1f3e:	01 97       	sbiw	r24, 0x01	; 1
    1f40:	f1 f7       	brne	.-4      	; 0x1f3e <pwm_ramp1A+0x2a0>
    1f42:	9a 83       	std	Y+2, r25	; 0x02
    1f44:	89 83       	std	Y+1, r24	; 0x01
    1f46:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1f48:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1f4a:	89 a1       	ldd	r24, Y+33	; 0x21
    1f4c:	9a a1       	ldd	r25, Y+34	; 0x22
    1f4e:	28 17       	cp	r18, r24
    1f50:	39 07       	cpc	r19, r25
    1f52:	08 f0       	brcs	.+2      	; 0x1f56 <pwm_ramp1A+0x2b8>
    1f54:	74 cf       	rjmp	.-280    	; 0x1e3e <pwm_ramp1A+0x1a0>
    1f56:	89 a1       	ldd	r24, Y+33	; 0x21
    1f58:	9a a1       	ldd	r25, Y+34	; 0x22
    1f5a:	90 93 4f 02 	sts	0x024F, r25
    1f5e:	80 93 4e 02 	sts	0x024E, r24
    1f62:	a4 96       	adiw	r28, 0x24	; 36
    1f64:	0f b6       	in	r0, 0x3f	; 63
    1f66:	f8 94       	cli
    1f68:	de bf       	out	0x3e, r29	; 62
    1f6a:	0f be       	out	0x3f, r0	; 63
    1f6c:	cd bf       	out	0x3d, r28	; 61
    1f6e:	cf 91       	pop	r28
    1f70:	df 91       	pop	r29
    1f72:	08 95       	ret

00001f74 <pwm_rampUp1A>:
    1f74:	df 93       	push	r29
    1f76:	cf 93       	push	r28
    1f78:	cd b7       	in	r28, 0x3d	; 61
    1f7a:	de b7       	in	r29, 0x3e	; 62
    1f7c:	64 97       	sbiw	r28, 0x14	; 20
    1f7e:	0f b6       	in	r0, 0x3f	; 63
    1f80:	f8 94       	cli
    1f82:	de bf       	out	0x3e, r29	; 62
    1f84:	0f be       	out	0x3f, r0	; 63
    1f86:	cd bf       	out	0x3d, r28	; 61
    1f88:	9a 8b       	std	Y+18, r25	; 0x12
    1f8a:	89 8b       	std	Y+17, r24	; 0x11
    1f8c:	7c 8b       	std	Y+20, r23	; 0x14
    1f8e:	6b 8b       	std	Y+19, r22	; 0x13
    1f90:	a0 e8       	ldi	r26, 0x80	; 128
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	e0 e8       	ldi	r30, 0x80	; 128
    1f96:	f0 e0       	ldi	r31, 0x00	; 0
    1f98:	80 81       	ld	r24, Z
    1f9a:	80 68       	ori	r24, 0x80	; 128
    1f9c:	8c 93       	st	X, r24
    1f9e:	80 91 4e 02 	lds	r24, 0x024E
    1fa2:	90 91 4f 02 	lds	r25, 0x024F
    1fa6:	98 8b       	std	Y+16, r25	; 0x10
    1fa8:	8f 87       	std	Y+15, r24	; 0x0f
    1faa:	84 c0       	rjmp	.+264    	; 0x20b4 <pwm_rampUp1A+0x140>
    1fac:	e8 e8       	ldi	r30, 0x88	; 136
    1fae:	f0 e0       	ldi	r31, 0x00	; 0
    1fb0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fb2:	98 89       	ldd	r25, Y+16	; 0x10
    1fb4:	91 83       	std	Z+1, r25	; 0x01
    1fb6:	80 83       	st	Z, r24
    1fb8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fba:	98 89       	ldd	r25, Y+16	; 0x10
    1fbc:	01 96       	adiw	r24, 0x01	; 1
    1fbe:	98 8b       	std	Y+16, r25	; 0x10
    1fc0:	8f 87       	std	Y+15, r24	; 0x0f
    1fc2:	8b 89       	ldd	r24, Y+19	; 0x13
    1fc4:	9c 89       	ldd	r25, Y+20	; 0x14
    1fc6:	cc 01       	movw	r24, r24
    1fc8:	a0 e0       	ldi	r26, 0x00	; 0
    1fca:	b0 e0       	ldi	r27, 0x00	; 0
    1fcc:	bc 01       	movw	r22, r24
    1fce:	cd 01       	movw	r24, r26
    1fd0:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    1fd4:	dc 01       	movw	r26, r24
    1fd6:	cb 01       	movw	r24, r22
    1fd8:	8b 87       	std	Y+11, r24	; 0x0b
    1fda:	9c 87       	std	Y+12, r25	; 0x0c
    1fdc:	ad 87       	std	Y+13, r26	; 0x0d
    1fde:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fe0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fe2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fe4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fe6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fe8:	20 e0       	ldi	r18, 0x00	; 0
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	4a e7       	ldi	r20, 0x7A	; 122
    1fee:	55 e4       	ldi	r21, 0x45	; 69
    1ff0:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    1ff4:	dc 01       	movw	r26, r24
    1ff6:	cb 01       	movw	r24, r22
    1ff8:	8f 83       	std	Y+7, r24	; 0x07
    1ffa:	98 87       	std	Y+8, r25	; 0x08
    1ffc:	a9 87       	std	Y+9, r26	; 0x09
    1ffe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2000:	6f 81       	ldd	r22, Y+7	; 0x07
    2002:	78 85       	ldd	r23, Y+8	; 0x08
    2004:	89 85       	ldd	r24, Y+9	; 0x09
    2006:	9a 85       	ldd	r25, Y+10	; 0x0a
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	30 e0       	ldi	r19, 0x00	; 0
    200c:	40 e8       	ldi	r20, 0x80	; 128
    200e:	5f e3       	ldi	r21, 0x3F	; 63
    2010:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2014:	88 23       	and	r24, r24
    2016:	2c f4       	brge	.+10     	; 0x2022 <pwm_rampUp1A+0xae>
		__ticks = 1;
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	9e 83       	std	Y+6, r25	; 0x06
    201e:	8d 83       	std	Y+5, r24	; 0x05
    2020:	3f c0       	rjmp	.+126    	; 0x20a0 <pwm_rampUp1A+0x12c>
	else if (__tmp > 65535)
    2022:	6f 81       	ldd	r22, Y+7	; 0x07
    2024:	78 85       	ldd	r23, Y+8	; 0x08
    2026:	89 85       	ldd	r24, Y+9	; 0x09
    2028:	9a 85       	ldd	r25, Y+10	; 0x0a
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	3f ef       	ldi	r19, 0xFF	; 255
    202e:	4f e7       	ldi	r20, 0x7F	; 127
    2030:	57 e4       	ldi	r21, 0x47	; 71
    2032:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2036:	18 16       	cp	r1, r24
    2038:	4c f5       	brge	.+82     	; 0x208c <pwm_rampUp1A+0x118>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    203a:	6b 85       	ldd	r22, Y+11	; 0x0b
    203c:	7c 85       	ldd	r23, Y+12	; 0x0c
    203e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2040:	9e 85       	ldd	r25, Y+14	; 0x0e
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	30 e0       	ldi	r19, 0x00	; 0
    2046:	40 e2       	ldi	r20, 0x20	; 32
    2048:	51 e4       	ldi	r21, 0x41	; 65
    204a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    204e:	dc 01       	movw	r26, r24
    2050:	cb 01       	movw	r24, r22
    2052:	bc 01       	movw	r22, r24
    2054:	cd 01       	movw	r24, r26
    2056:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	9e 83       	std	Y+6, r25	; 0x06
    2060:	8d 83       	std	Y+5, r24	; 0x05
    2062:	0f c0       	rjmp	.+30     	; 0x2082 <pwm_rampUp1A+0x10e>
    2064:	80 e9       	ldi	r24, 0x90	; 144
    2066:	91 e0       	ldi	r25, 0x01	; 1
    2068:	9c 83       	std	Y+4, r25	; 0x04
    206a:	8b 83       	std	Y+3, r24	; 0x03
    206c:	8b 81       	ldd	r24, Y+3	; 0x03
    206e:	9c 81       	ldd	r25, Y+4	; 0x04
    2070:	01 97       	sbiw	r24, 0x01	; 1
    2072:	f1 f7       	brne	.-4      	; 0x2070 <pwm_rampUp1A+0xfc>
    2074:	9c 83       	std	Y+4, r25	; 0x04
    2076:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2078:	8d 81       	ldd	r24, Y+5	; 0x05
    207a:	9e 81       	ldd	r25, Y+6	; 0x06
    207c:	01 97       	sbiw	r24, 0x01	; 1
    207e:	9e 83       	std	Y+6, r25	; 0x06
    2080:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2082:	8d 81       	ldd	r24, Y+5	; 0x05
    2084:	9e 81       	ldd	r25, Y+6	; 0x06
    2086:	00 97       	sbiw	r24, 0x00	; 0
    2088:	69 f7       	brne	.-38     	; 0x2064 <pwm_rampUp1A+0xf0>
    208a:	14 c0       	rjmp	.+40     	; 0x20b4 <pwm_rampUp1A+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    208c:	6f 81       	ldd	r22, Y+7	; 0x07
    208e:	78 85       	ldd	r23, Y+8	; 0x08
    2090:	89 85       	ldd	r24, Y+9	; 0x09
    2092:	9a 85       	ldd	r25, Y+10	; 0x0a
    2094:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2098:	dc 01       	movw	r26, r24
    209a:	cb 01       	movw	r24, r22
    209c:	9e 83       	std	Y+6, r25	; 0x06
    209e:	8d 83       	std	Y+5, r24	; 0x05
    20a0:	8d 81       	ldd	r24, Y+5	; 0x05
    20a2:	9e 81       	ldd	r25, Y+6	; 0x06
    20a4:	9a 83       	std	Y+2, r25	; 0x02
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	89 81       	ldd	r24, Y+1	; 0x01
    20aa:	9a 81       	ldd	r25, Y+2	; 0x02
    20ac:	01 97       	sbiw	r24, 0x01	; 1
    20ae:	f1 f7       	brne	.-4      	; 0x20ac <pwm_rampUp1A+0x138>
    20b0:	9a 83       	std	Y+2, r25	; 0x02
    20b2:	89 83       	std	Y+1, r24	; 0x01
    20b4:	2f 85       	ldd	r18, Y+15	; 0x0f
    20b6:	38 89       	ldd	r19, Y+16	; 0x10
    20b8:	89 89       	ldd	r24, Y+17	; 0x11
    20ba:	9a 89       	ldd	r25, Y+18	; 0x12
    20bc:	82 17       	cp	r24, r18
    20be:	93 07       	cpc	r25, r19
    20c0:	08 f0       	brcs	.+2      	; 0x20c4 <pwm_rampUp1A+0x150>
    20c2:	74 cf       	rjmp	.-280    	; 0x1fac <pwm_rampUp1A+0x38>
    20c4:	89 89       	ldd	r24, Y+17	; 0x11
    20c6:	9a 89       	ldd	r25, Y+18	; 0x12
    20c8:	90 93 4f 02 	sts	0x024F, r25
    20cc:	80 93 4e 02 	sts	0x024E, r24
    20d0:	64 96       	adiw	r28, 0x14	; 20
    20d2:	0f b6       	in	r0, 0x3f	; 63
    20d4:	f8 94       	cli
    20d6:	de bf       	out	0x3e, r29	; 62
    20d8:	0f be       	out	0x3f, r0	; 63
    20da:	cd bf       	out	0x3d, r28	; 61
    20dc:	cf 91       	pop	r28
    20de:	df 91       	pop	r29
    20e0:	08 95       	ret

000020e2 <pwm_rampDown1A>:
    20e2:	df 93       	push	r29
    20e4:	cf 93       	push	r28
    20e6:	cd b7       	in	r28, 0x3d	; 61
    20e8:	de b7       	in	r29, 0x3e	; 62
    20ea:	64 97       	sbiw	r28, 0x14	; 20
    20ec:	0f b6       	in	r0, 0x3f	; 63
    20ee:	f8 94       	cli
    20f0:	de bf       	out	0x3e, r29	; 62
    20f2:	0f be       	out	0x3f, r0	; 63
    20f4:	cd bf       	out	0x3d, r28	; 61
    20f6:	9a 8b       	std	Y+18, r25	; 0x12
    20f8:	89 8b       	std	Y+17, r24	; 0x11
    20fa:	7c 8b       	std	Y+20, r23	; 0x14
    20fc:	6b 8b       	std	Y+19, r22	; 0x13
    20fe:	89 89       	ldd	r24, Y+17	; 0x11
    2100:	9a 89       	ldd	r25, Y+18	; 0x12
    2102:	00 97       	sbiw	r24, 0x00	; 0
    2104:	29 f4       	brne	.+10     	; 0x2110 <pwm_rampDown1A+0x2e>
    2106:	80 e0       	ldi	r24, 0x00	; 0
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <pwm1A>
    210e:	9a c0       	rjmp	.+308    	; 0x2244 <pwm_rampDown1A+0x162>
    2110:	a0 e8       	ldi	r26, 0x80	; 128
    2112:	b0 e0       	ldi	r27, 0x00	; 0
    2114:	e0 e8       	ldi	r30, 0x80	; 128
    2116:	f0 e0       	ldi	r31, 0x00	; 0
    2118:	80 81       	ld	r24, Z
    211a:	80 68       	ori	r24, 0x80	; 128
    211c:	8c 93       	st	X, r24
    211e:	80 91 4e 02 	lds	r24, 0x024E
    2122:	90 91 4f 02 	lds	r25, 0x024F
    2126:	98 8b       	std	Y+16, r25	; 0x10
    2128:	8f 87       	std	Y+15, r24	; 0x0f
    212a:	84 c0       	rjmp	.+264    	; 0x2234 <pwm_rampDown1A+0x152>
    212c:	e8 e8       	ldi	r30, 0x88	; 136
    212e:	f0 e0       	ldi	r31, 0x00	; 0
    2130:	8f 85       	ldd	r24, Y+15	; 0x0f
    2132:	98 89       	ldd	r25, Y+16	; 0x10
    2134:	91 83       	std	Z+1, r25	; 0x01
    2136:	80 83       	st	Z, r24
    2138:	8f 85       	ldd	r24, Y+15	; 0x0f
    213a:	98 89       	ldd	r25, Y+16	; 0x10
    213c:	01 97       	sbiw	r24, 0x01	; 1
    213e:	98 8b       	std	Y+16, r25	; 0x10
    2140:	8f 87       	std	Y+15, r24	; 0x0f
    2142:	8b 89       	ldd	r24, Y+19	; 0x13
    2144:	9c 89       	ldd	r25, Y+20	; 0x14
    2146:	cc 01       	movw	r24, r24
    2148:	a0 e0       	ldi	r26, 0x00	; 0
    214a:	b0 e0       	ldi	r27, 0x00	; 0
    214c:	bc 01       	movw	r22, r24
    214e:	cd 01       	movw	r24, r26
    2150:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2154:	dc 01       	movw	r26, r24
    2156:	cb 01       	movw	r24, r22
    2158:	8b 87       	std	Y+11, r24	; 0x0b
    215a:	9c 87       	std	Y+12, r25	; 0x0c
    215c:	ad 87       	std	Y+13, r26	; 0x0d
    215e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2160:	6b 85       	ldd	r22, Y+11	; 0x0b
    2162:	7c 85       	ldd	r23, Y+12	; 0x0c
    2164:	8d 85       	ldd	r24, Y+13	; 0x0d
    2166:	9e 85       	ldd	r25, Y+14	; 0x0e
    2168:	20 e0       	ldi	r18, 0x00	; 0
    216a:	30 e0       	ldi	r19, 0x00	; 0
    216c:	4a e7       	ldi	r20, 0x7A	; 122
    216e:	55 e4       	ldi	r21, 0x45	; 69
    2170:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2174:	dc 01       	movw	r26, r24
    2176:	cb 01       	movw	r24, r22
    2178:	8f 83       	std	Y+7, r24	; 0x07
    217a:	98 87       	std	Y+8, r25	; 0x08
    217c:	a9 87       	std	Y+9, r26	; 0x09
    217e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2180:	6f 81       	ldd	r22, Y+7	; 0x07
    2182:	78 85       	ldd	r23, Y+8	; 0x08
    2184:	89 85       	ldd	r24, Y+9	; 0x09
    2186:	9a 85       	ldd	r25, Y+10	; 0x0a
    2188:	20 e0       	ldi	r18, 0x00	; 0
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	40 e8       	ldi	r20, 0x80	; 128
    218e:	5f e3       	ldi	r21, 0x3F	; 63
    2190:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2194:	88 23       	and	r24, r24
    2196:	2c f4       	brge	.+10     	; 0x21a2 <pwm_rampDown1A+0xc0>
		__ticks = 1;
    2198:	81 e0       	ldi	r24, 0x01	; 1
    219a:	90 e0       	ldi	r25, 0x00	; 0
    219c:	9e 83       	std	Y+6, r25	; 0x06
    219e:	8d 83       	std	Y+5, r24	; 0x05
    21a0:	3f c0       	rjmp	.+126    	; 0x2220 <pwm_rampDown1A+0x13e>
	else if (__tmp > 65535)
    21a2:	6f 81       	ldd	r22, Y+7	; 0x07
    21a4:	78 85       	ldd	r23, Y+8	; 0x08
    21a6:	89 85       	ldd	r24, Y+9	; 0x09
    21a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    21aa:	20 e0       	ldi	r18, 0x00	; 0
    21ac:	3f ef       	ldi	r19, 0xFF	; 255
    21ae:	4f e7       	ldi	r20, 0x7F	; 127
    21b0:	57 e4       	ldi	r21, 0x47	; 71
    21b2:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    21b6:	18 16       	cp	r1, r24
    21b8:	4c f5       	brge	.+82     	; 0x220c <pwm_rampDown1A+0x12a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    21ba:	6b 85       	ldd	r22, Y+11	; 0x0b
    21bc:	7c 85       	ldd	r23, Y+12	; 0x0c
    21be:	8d 85       	ldd	r24, Y+13	; 0x0d
    21c0:	9e 85       	ldd	r25, Y+14	; 0x0e
    21c2:	20 e0       	ldi	r18, 0x00	; 0
    21c4:	30 e0       	ldi	r19, 0x00	; 0
    21c6:	40 e2       	ldi	r20, 0x20	; 32
    21c8:	51 e4       	ldi	r21, 0x41	; 65
    21ca:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    21ce:	dc 01       	movw	r26, r24
    21d0:	cb 01       	movw	r24, r22
    21d2:	bc 01       	movw	r22, r24
    21d4:	cd 01       	movw	r24, r26
    21d6:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    21da:	dc 01       	movw	r26, r24
    21dc:	cb 01       	movw	r24, r22
    21de:	9e 83       	std	Y+6, r25	; 0x06
    21e0:	8d 83       	std	Y+5, r24	; 0x05
    21e2:	0f c0       	rjmp	.+30     	; 0x2202 <pwm_rampDown1A+0x120>
    21e4:	80 e9       	ldi	r24, 0x90	; 144
    21e6:	91 e0       	ldi	r25, 0x01	; 1
    21e8:	9c 83       	std	Y+4, r25	; 0x04
    21ea:	8b 83       	std	Y+3, r24	; 0x03
    21ec:	8b 81       	ldd	r24, Y+3	; 0x03
    21ee:	9c 81       	ldd	r25, Y+4	; 0x04
    21f0:	01 97       	sbiw	r24, 0x01	; 1
    21f2:	f1 f7       	brne	.-4      	; 0x21f0 <pwm_rampDown1A+0x10e>
    21f4:	9c 83       	std	Y+4, r25	; 0x04
    21f6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21f8:	8d 81       	ldd	r24, Y+5	; 0x05
    21fa:	9e 81       	ldd	r25, Y+6	; 0x06
    21fc:	01 97       	sbiw	r24, 0x01	; 1
    21fe:	9e 83       	std	Y+6, r25	; 0x06
    2200:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2202:	8d 81       	ldd	r24, Y+5	; 0x05
    2204:	9e 81       	ldd	r25, Y+6	; 0x06
    2206:	00 97       	sbiw	r24, 0x00	; 0
    2208:	69 f7       	brne	.-38     	; 0x21e4 <pwm_rampDown1A+0x102>
    220a:	14 c0       	rjmp	.+40     	; 0x2234 <pwm_rampDown1A+0x152>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    220c:	6f 81       	ldd	r22, Y+7	; 0x07
    220e:	78 85       	ldd	r23, Y+8	; 0x08
    2210:	89 85       	ldd	r24, Y+9	; 0x09
    2212:	9a 85       	ldd	r25, Y+10	; 0x0a
    2214:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2218:	dc 01       	movw	r26, r24
    221a:	cb 01       	movw	r24, r22
    221c:	9e 83       	std	Y+6, r25	; 0x06
    221e:	8d 83       	std	Y+5, r24	; 0x05
    2220:	8d 81       	ldd	r24, Y+5	; 0x05
    2222:	9e 81       	ldd	r25, Y+6	; 0x06
    2224:	9a 83       	std	Y+2, r25	; 0x02
    2226:	89 83       	std	Y+1, r24	; 0x01
    2228:	89 81       	ldd	r24, Y+1	; 0x01
    222a:	9a 81       	ldd	r25, Y+2	; 0x02
    222c:	01 97       	sbiw	r24, 0x01	; 1
    222e:	f1 f7       	brne	.-4      	; 0x222c <pwm_rampDown1A+0x14a>
    2230:	9a 83       	std	Y+2, r25	; 0x02
    2232:	89 83       	std	Y+1, r24	; 0x01
    2234:	2f 85       	ldd	r18, Y+15	; 0x0f
    2236:	38 89       	ldd	r19, Y+16	; 0x10
    2238:	89 89       	ldd	r24, Y+17	; 0x11
    223a:	9a 89       	ldd	r25, Y+18	; 0x12
    223c:	28 17       	cp	r18, r24
    223e:	39 07       	cpc	r19, r25
    2240:	08 f0       	brcs	.+2      	; 0x2244 <pwm_rampDown1A+0x162>
    2242:	74 cf       	rjmp	.-280    	; 0x212c <pwm_rampDown1A+0x4a>
    2244:	89 89       	ldd	r24, Y+17	; 0x11
    2246:	9a 89       	ldd	r25, Y+18	; 0x12
    2248:	90 93 4f 02 	sts	0x024F, r25
    224c:	80 93 4e 02 	sts	0x024E, r24
    2250:	64 96       	adiw	r28, 0x14	; 20
    2252:	0f b6       	in	r0, 0x3f	; 63
    2254:	f8 94       	cli
    2256:	de bf       	out	0x3e, r29	; 62
    2258:	0f be       	out	0x3f, r0	; 63
    225a:	cd bf       	out	0x3d, r28	; 61
    225c:	cf 91       	pop	r28
    225e:	df 91       	pop	r29
    2260:	08 95       	ret

00002262 <pwm_ramp1B>:
    2262:	df 93       	push	r29
    2264:	cf 93       	push	r28
    2266:	cd b7       	in	r28, 0x3d	; 61
    2268:	de b7       	in	r29, 0x3e	; 62
    226a:	a4 97       	sbiw	r28, 0x24	; 36
    226c:	0f b6       	in	r0, 0x3f	; 63
    226e:	f8 94       	cli
    2270:	de bf       	out	0x3e, r29	; 62
    2272:	0f be       	out	0x3f, r0	; 63
    2274:	cd bf       	out	0x3d, r28	; 61
    2276:	9a a3       	std	Y+34, r25	; 0x22
    2278:	89 a3       	std	Y+33, r24	; 0x21
    227a:	7c a3       	std	Y+36, r23	; 0x24
    227c:	6b a3       	std	Y+35, r22	; 0x23
    227e:	89 a1       	ldd	r24, Y+33	; 0x21
    2280:	9a a1       	ldd	r25, Y+34	; 0x22
    2282:	00 97       	sbiw	r24, 0x00	; 0
    2284:	21 f4       	brne	.+8      	; 0x228e <pwm_ramp1B+0x2c>
    2286:	81 e0       	ldi	r24, 0x01	; 1
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	9a a3       	std	Y+34, r25	; 0x22
    228c:	89 a3       	std	Y+33, r24	; 0x21
    228e:	20 91 3e 02 	lds	r18, 0x023E
    2292:	30 91 3f 02 	lds	r19, 0x023F
    2296:	89 a1       	ldd	r24, Y+33	; 0x21
    2298:	9a a1       	ldd	r25, Y+34	; 0x22
    229a:	28 17       	cp	r18, r24
    229c:	39 07       	cpc	r19, r25
    229e:	08 f0       	brcs	.+2      	; 0x22a2 <pwm_ramp1B+0x40>
    22a0:	a1 c0       	rjmp	.+322    	; 0x23e4 <pwm_ramp1B+0x182>
    22a2:	a0 e8       	ldi	r26, 0x80	; 128
    22a4:	b0 e0       	ldi	r27, 0x00	; 0
    22a6:	e0 e8       	ldi	r30, 0x80	; 128
    22a8:	f0 e0       	ldi	r31, 0x00	; 0
    22aa:	80 81       	ld	r24, Z
    22ac:	80 62       	ori	r24, 0x20	; 32
    22ae:	8c 93       	st	X, r24
    22b0:	80 91 3e 02 	lds	r24, 0x023E
    22b4:	90 91 3f 02 	lds	r25, 0x023F
    22b8:	98 a3       	std	Y+32, r25	; 0x20
    22ba:	8f 8f       	std	Y+31, r24	; 0x1f
    22bc:	84 c0       	rjmp	.+264    	; 0x23c6 <pwm_ramp1B+0x164>
    22be:	ea e8       	ldi	r30, 0x8A	; 138
    22c0:	f0 e0       	ldi	r31, 0x00	; 0
    22c2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22c4:	98 a1       	ldd	r25, Y+32	; 0x20
    22c6:	91 83       	std	Z+1, r25	; 0x01
    22c8:	80 83       	st	Z, r24
    22ca:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22cc:	98 a1       	ldd	r25, Y+32	; 0x20
    22ce:	01 96       	adiw	r24, 0x01	; 1
    22d0:	98 a3       	std	Y+32, r25	; 0x20
    22d2:	8f 8f       	std	Y+31, r24	; 0x1f
    22d4:	8b a1       	ldd	r24, Y+35	; 0x23
    22d6:	9c a1       	ldd	r25, Y+36	; 0x24
    22d8:	cc 01       	movw	r24, r24
    22da:	a0 e0       	ldi	r26, 0x00	; 0
    22dc:	b0 e0       	ldi	r27, 0x00	; 0
    22de:	bc 01       	movw	r22, r24
    22e0:	cd 01       	movw	r24, r26
    22e2:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    22e6:	dc 01       	movw	r26, r24
    22e8:	cb 01       	movw	r24, r22
    22ea:	89 8f       	std	Y+25, r24	; 0x19
    22ec:	9a 8f       	std	Y+26, r25	; 0x1a
    22ee:	ab 8f       	std	Y+27, r26	; 0x1b
    22f0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    22f2:	69 8d       	ldd	r22, Y+25	; 0x19
    22f4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    22f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    22f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    22fa:	20 e0       	ldi	r18, 0x00	; 0
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	4a e7       	ldi	r20, 0x7A	; 122
    2300:	55 e4       	ldi	r21, 0x45	; 69
    2302:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2306:	dc 01       	movw	r26, r24
    2308:	cb 01       	movw	r24, r22
    230a:	8d 8b       	std	Y+21, r24	; 0x15
    230c:	9e 8b       	std	Y+22, r25	; 0x16
    230e:	af 8b       	std	Y+23, r26	; 0x17
    2310:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2312:	6d 89       	ldd	r22, Y+21	; 0x15
    2314:	7e 89       	ldd	r23, Y+22	; 0x16
    2316:	8f 89       	ldd	r24, Y+23	; 0x17
    2318:	98 8d       	ldd	r25, Y+24	; 0x18
    231a:	20 e0       	ldi	r18, 0x00	; 0
    231c:	30 e0       	ldi	r19, 0x00	; 0
    231e:	40 e8       	ldi	r20, 0x80	; 128
    2320:	5f e3       	ldi	r21, 0x3F	; 63
    2322:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2326:	88 23       	and	r24, r24
    2328:	2c f4       	brge	.+10     	; 0x2334 <pwm_ramp1B+0xd2>
		__ticks = 1;
    232a:	81 e0       	ldi	r24, 0x01	; 1
    232c:	90 e0       	ldi	r25, 0x00	; 0
    232e:	9c 8b       	std	Y+20, r25	; 0x14
    2330:	8b 8b       	std	Y+19, r24	; 0x13
    2332:	3f c0       	rjmp	.+126    	; 0x23b2 <pwm_ramp1B+0x150>
	else if (__tmp > 65535)
    2334:	6d 89       	ldd	r22, Y+21	; 0x15
    2336:	7e 89       	ldd	r23, Y+22	; 0x16
    2338:	8f 89       	ldd	r24, Y+23	; 0x17
    233a:	98 8d       	ldd	r25, Y+24	; 0x18
    233c:	20 e0       	ldi	r18, 0x00	; 0
    233e:	3f ef       	ldi	r19, 0xFF	; 255
    2340:	4f e7       	ldi	r20, 0x7F	; 127
    2342:	57 e4       	ldi	r21, 0x47	; 71
    2344:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2348:	18 16       	cp	r1, r24
    234a:	4c f5       	brge	.+82     	; 0x239e <pwm_ramp1B+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    234c:	69 8d       	ldd	r22, Y+25	; 0x19
    234e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2350:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2352:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2354:	20 e0       	ldi	r18, 0x00	; 0
    2356:	30 e0       	ldi	r19, 0x00	; 0
    2358:	40 e2       	ldi	r20, 0x20	; 32
    235a:	51 e4       	ldi	r21, 0x41	; 65
    235c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2360:	dc 01       	movw	r26, r24
    2362:	cb 01       	movw	r24, r22
    2364:	bc 01       	movw	r22, r24
    2366:	cd 01       	movw	r24, r26
    2368:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    236c:	dc 01       	movw	r26, r24
    236e:	cb 01       	movw	r24, r22
    2370:	9c 8b       	std	Y+20, r25	; 0x14
    2372:	8b 8b       	std	Y+19, r24	; 0x13
    2374:	0f c0       	rjmp	.+30     	; 0x2394 <pwm_ramp1B+0x132>
    2376:	80 e9       	ldi	r24, 0x90	; 144
    2378:	91 e0       	ldi	r25, 0x01	; 1
    237a:	9a 8b       	std	Y+18, r25	; 0x12
    237c:	89 8b       	std	Y+17, r24	; 0x11
    237e:	89 89       	ldd	r24, Y+17	; 0x11
    2380:	9a 89       	ldd	r25, Y+18	; 0x12
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	f1 f7       	brne	.-4      	; 0x2382 <pwm_ramp1B+0x120>
    2386:	9a 8b       	std	Y+18, r25	; 0x12
    2388:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    238a:	8b 89       	ldd	r24, Y+19	; 0x13
    238c:	9c 89       	ldd	r25, Y+20	; 0x14
    238e:	01 97       	sbiw	r24, 0x01	; 1
    2390:	9c 8b       	std	Y+20, r25	; 0x14
    2392:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2394:	8b 89       	ldd	r24, Y+19	; 0x13
    2396:	9c 89       	ldd	r25, Y+20	; 0x14
    2398:	00 97       	sbiw	r24, 0x00	; 0
    239a:	69 f7       	brne	.-38     	; 0x2376 <pwm_ramp1B+0x114>
    239c:	14 c0       	rjmp	.+40     	; 0x23c6 <pwm_ramp1B+0x164>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    239e:	6d 89       	ldd	r22, Y+21	; 0x15
    23a0:	7e 89       	ldd	r23, Y+22	; 0x16
    23a2:	8f 89       	ldd	r24, Y+23	; 0x17
    23a4:	98 8d       	ldd	r25, Y+24	; 0x18
    23a6:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    23aa:	dc 01       	movw	r26, r24
    23ac:	cb 01       	movw	r24, r22
    23ae:	9c 8b       	std	Y+20, r25	; 0x14
    23b0:	8b 8b       	std	Y+19, r24	; 0x13
    23b2:	8b 89       	ldd	r24, Y+19	; 0x13
    23b4:	9c 89       	ldd	r25, Y+20	; 0x14
    23b6:	98 8b       	std	Y+16, r25	; 0x10
    23b8:	8f 87       	std	Y+15, r24	; 0x0f
    23ba:	8f 85       	ldd	r24, Y+15	; 0x0f
    23bc:	98 89       	ldd	r25, Y+16	; 0x10
    23be:	01 97       	sbiw	r24, 0x01	; 1
    23c0:	f1 f7       	brne	.-4      	; 0x23be <pwm_ramp1B+0x15c>
    23c2:	98 8b       	std	Y+16, r25	; 0x10
    23c4:	8f 87       	std	Y+15, r24	; 0x0f
    23c6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    23c8:	38 a1       	ldd	r19, Y+32	; 0x20
    23ca:	89 a1       	ldd	r24, Y+33	; 0x21
    23cc:	9a a1       	ldd	r25, Y+34	; 0x22
    23ce:	82 17       	cp	r24, r18
    23d0:	93 07       	cpc	r25, r19
    23d2:	08 f0       	brcs	.+2      	; 0x23d6 <pwm_ramp1B+0x174>
    23d4:	74 cf       	rjmp	.-280    	; 0x22be <pwm_ramp1B+0x5c>
    23d6:	89 a1       	ldd	r24, Y+33	; 0x21
    23d8:	9a a1       	ldd	r25, Y+34	; 0x22
    23da:	90 93 3f 02 	sts	0x023F, r25
    23de:	80 93 3e 02 	sts	0x023E, r24
    23e2:	a0 c0       	rjmp	.+320    	; 0x2524 <pwm_ramp1B+0x2c2>
    23e4:	a0 e8       	ldi	r26, 0x80	; 128
    23e6:	b0 e0       	ldi	r27, 0x00	; 0
    23e8:	e0 e8       	ldi	r30, 0x80	; 128
    23ea:	f0 e0       	ldi	r31, 0x00	; 0
    23ec:	80 81       	ld	r24, Z
    23ee:	80 62       	ori	r24, 0x20	; 32
    23f0:	8c 93       	st	X, r24
    23f2:	80 91 3e 02 	lds	r24, 0x023E
    23f6:	90 91 3f 02 	lds	r25, 0x023F
    23fa:	9e 8f       	std	Y+30, r25	; 0x1e
    23fc:	8d 8f       	std	Y+29, r24	; 0x1d
    23fe:	84 c0       	rjmp	.+264    	; 0x2508 <pwm_ramp1B+0x2a6>
    2400:	ea e8       	ldi	r30, 0x8A	; 138
    2402:	f0 e0       	ldi	r31, 0x00	; 0
    2404:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2406:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2408:	91 83       	std	Z+1, r25	; 0x01
    240a:	80 83       	st	Z, r24
    240c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    240e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2410:	01 97       	sbiw	r24, 0x01	; 1
    2412:	9e 8f       	std	Y+30, r25	; 0x1e
    2414:	8d 8f       	std	Y+29, r24	; 0x1d
    2416:	8b a1       	ldd	r24, Y+35	; 0x23
    2418:	9c a1       	ldd	r25, Y+36	; 0x24
    241a:	cc 01       	movw	r24, r24
    241c:	a0 e0       	ldi	r26, 0x00	; 0
    241e:	b0 e0       	ldi	r27, 0x00	; 0
    2420:	bc 01       	movw	r22, r24
    2422:	cd 01       	movw	r24, r26
    2424:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	8b 87       	std	Y+11, r24	; 0x0b
    242e:	9c 87       	std	Y+12, r25	; 0x0c
    2430:	ad 87       	std	Y+13, r26	; 0x0d
    2432:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2434:	6b 85       	ldd	r22, Y+11	; 0x0b
    2436:	7c 85       	ldd	r23, Y+12	; 0x0c
    2438:	8d 85       	ldd	r24, Y+13	; 0x0d
    243a:	9e 85       	ldd	r25, Y+14	; 0x0e
    243c:	20 e0       	ldi	r18, 0x00	; 0
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	4a e7       	ldi	r20, 0x7A	; 122
    2442:	55 e4       	ldi	r21, 0x45	; 69
    2444:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2448:	dc 01       	movw	r26, r24
    244a:	cb 01       	movw	r24, r22
    244c:	8f 83       	std	Y+7, r24	; 0x07
    244e:	98 87       	std	Y+8, r25	; 0x08
    2450:	a9 87       	std	Y+9, r26	; 0x09
    2452:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2454:	6f 81       	ldd	r22, Y+7	; 0x07
    2456:	78 85       	ldd	r23, Y+8	; 0x08
    2458:	89 85       	ldd	r24, Y+9	; 0x09
    245a:	9a 85       	ldd	r25, Y+10	; 0x0a
    245c:	20 e0       	ldi	r18, 0x00	; 0
    245e:	30 e0       	ldi	r19, 0x00	; 0
    2460:	40 e8       	ldi	r20, 0x80	; 128
    2462:	5f e3       	ldi	r21, 0x3F	; 63
    2464:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2468:	88 23       	and	r24, r24
    246a:	2c f4       	brge	.+10     	; 0x2476 <pwm_ramp1B+0x214>
		__ticks = 1;
    246c:	81 e0       	ldi	r24, 0x01	; 1
    246e:	90 e0       	ldi	r25, 0x00	; 0
    2470:	9e 83       	std	Y+6, r25	; 0x06
    2472:	8d 83       	std	Y+5, r24	; 0x05
    2474:	3f c0       	rjmp	.+126    	; 0x24f4 <pwm_ramp1B+0x292>
	else if (__tmp > 65535)
    2476:	6f 81       	ldd	r22, Y+7	; 0x07
    2478:	78 85       	ldd	r23, Y+8	; 0x08
    247a:	89 85       	ldd	r24, Y+9	; 0x09
    247c:	9a 85       	ldd	r25, Y+10	; 0x0a
    247e:	20 e0       	ldi	r18, 0x00	; 0
    2480:	3f ef       	ldi	r19, 0xFF	; 255
    2482:	4f e7       	ldi	r20, 0x7F	; 127
    2484:	57 e4       	ldi	r21, 0x47	; 71
    2486:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    248a:	18 16       	cp	r1, r24
    248c:	4c f5       	brge	.+82     	; 0x24e0 <pwm_ramp1B+0x27e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    248e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2490:	7c 85       	ldd	r23, Y+12	; 0x0c
    2492:	8d 85       	ldd	r24, Y+13	; 0x0d
    2494:	9e 85       	ldd	r25, Y+14	; 0x0e
    2496:	20 e0       	ldi	r18, 0x00	; 0
    2498:	30 e0       	ldi	r19, 0x00	; 0
    249a:	40 e2       	ldi	r20, 0x20	; 32
    249c:	51 e4       	ldi	r21, 0x41	; 65
    249e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    24a2:	dc 01       	movw	r26, r24
    24a4:	cb 01       	movw	r24, r22
    24a6:	bc 01       	movw	r22, r24
    24a8:	cd 01       	movw	r24, r26
    24aa:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    24ae:	dc 01       	movw	r26, r24
    24b0:	cb 01       	movw	r24, r22
    24b2:	9e 83       	std	Y+6, r25	; 0x06
    24b4:	8d 83       	std	Y+5, r24	; 0x05
    24b6:	0f c0       	rjmp	.+30     	; 0x24d6 <pwm_ramp1B+0x274>
    24b8:	80 e9       	ldi	r24, 0x90	; 144
    24ba:	91 e0       	ldi	r25, 0x01	; 1
    24bc:	9c 83       	std	Y+4, r25	; 0x04
    24be:	8b 83       	std	Y+3, r24	; 0x03
    24c0:	8b 81       	ldd	r24, Y+3	; 0x03
    24c2:	9c 81       	ldd	r25, Y+4	; 0x04
    24c4:	01 97       	sbiw	r24, 0x01	; 1
    24c6:	f1 f7       	brne	.-4      	; 0x24c4 <pwm_ramp1B+0x262>
    24c8:	9c 83       	std	Y+4, r25	; 0x04
    24ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24cc:	8d 81       	ldd	r24, Y+5	; 0x05
    24ce:	9e 81       	ldd	r25, Y+6	; 0x06
    24d0:	01 97       	sbiw	r24, 0x01	; 1
    24d2:	9e 83       	std	Y+6, r25	; 0x06
    24d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24d6:	8d 81       	ldd	r24, Y+5	; 0x05
    24d8:	9e 81       	ldd	r25, Y+6	; 0x06
    24da:	00 97       	sbiw	r24, 0x00	; 0
    24dc:	69 f7       	brne	.-38     	; 0x24b8 <pwm_ramp1B+0x256>
    24de:	14 c0       	rjmp	.+40     	; 0x2508 <pwm_ramp1B+0x2a6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24e0:	6f 81       	ldd	r22, Y+7	; 0x07
    24e2:	78 85       	ldd	r23, Y+8	; 0x08
    24e4:	89 85       	ldd	r24, Y+9	; 0x09
    24e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    24e8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    24ec:	dc 01       	movw	r26, r24
    24ee:	cb 01       	movw	r24, r22
    24f0:	9e 83       	std	Y+6, r25	; 0x06
    24f2:	8d 83       	std	Y+5, r24	; 0x05
    24f4:	8d 81       	ldd	r24, Y+5	; 0x05
    24f6:	9e 81       	ldd	r25, Y+6	; 0x06
    24f8:	9a 83       	std	Y+2, r25	; 0x02
    24fa:	89 83       	std	Y+1, r24	; 0x01
    24fc:	89 81       	ldd	r24, Y+1	; 0x01
    24fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2500:	01 97       	sbiw	r24, 0x01	; 1
    2502:	f1 f7       	brne	.-4      	; 0x2500 <pwm_ramp1B+0x29e>
    2504:	9a 83       	std	Y+2, r25	; 0x02
    2506:	89 83       	std	Y+1, r24	; 0x01
    2508:	2d 8d       	ldd	r18, Y+29	; 0x1d
    250a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    250c:	89 a1       	ldd	r24, Y+33	; 0x21
    250e:	9a a1       	ldd	r25, Y+34	; 0x22
    2510:	28 17       	cp	r18, r24
    2512:	39 07       	cpc	r19, r25
    2514:	08 f0       	brcs	.+2      	; 0x2518 <pwm_ramp1B+0x2b6>
    2516:	74 cf       	rjmp	.-280    	; 0x2400 <pwm_ramp1B+0x19e>
    2518:	89 a1       	ldd	r24, Y+33	; 0x21
    251a:	9a a1       	ldd	r25, Y+34	; 0x22
    251c:	90 93 3f 02 	sts	0x023F, r25
    2520:	80 93 3e 02 	sts	0x023E, r24
    2524:	a4 96       	adiw	r28, 0x24	; 36
    2526:	0f b6       	in	r0, 0x3f	; 63
    2528:	f8 94       	cli
    252a:	de bf       	out	0x3e, r29	; 62
    252c:	0f be       	out	0x3f, r0	; 63
    252e:	cd bf       	out	0x3d, r28	; 61
    2530:	cf 91       	pop	r28
    2532:	df 91       	pop	r29
    2534:	08 95       	ret

00002536 <pwm_rampUp1B>:
    2536:	df 93       	push	r29
    2538:	cf 93       	push	r28
    253a:	cd b7       	in	r28, 0x3d	; 61
    253c:	de b7       	in	r29, 0x3e	; 62
    253e:	64 97       	sbiw	r28, 0x14	; 20
    2540:	0f b6       	in	r0, 0x3f	; 63
    2542:	f8 94       	cli
    2544:	de bf       	out	0x3e, r29	; 62
    2546:	0f be       	out	0x3f, r0	; 63
    2548:	cd bf       	out	0x3d, r28	; 61
    254a:	9a 8b       	std	Y+18, r25	; 0x12
    254c:	89 8b       	std	Y+17, r24	; 0x11
    254e:	7c 8b       	std	Y+20, r23	; 0x14
    2550:	6b 8b       	std	Y+19, r22	; 0x13
    2552:	a0 e8       	ldi	r26, 0x80	; 128
    2554:	b0 e0       	ldi	r27, 0x00	; 0
    2556:	e0 e8       	ldi	r30, 0x80	; 128
    2558:	f0 e0       	ldi	r31, 0x00	; 0
    255a:	80 81       	ld	r24, Z
    255c:	80 62       	ori	r24, 0x20	; 32
    255e:	8c 93       	st	X, r24
    2560:	80 91 3e 02 	lds	r24, 0x023E
    2564:	90 91 3f 02 	lds	r25, 0x023F
    2568:	98 8b       	std	Y+16, r25	; 0x10
    256a:	8f 87       	std	Y+15, r24	; 0x0f
    256c:	84 c0       	rjmp	.+264    	; 0x2676 <pwm_rampUp1B+0x140>
    256e:	ea e8       	ldi	r30, 0x8A	; 138
    2570:	f0 e0       	ldi	r31, 0x00	; 0
    2572:	8f 85       	ldd	r24, Y+15	; 0x0f
    2574:	98 89       	ldd	r25, Y+16	; 0x10
    2576:	91 83       	std	Z+1, r25	; 0x01
    2578:	80 83       	st	Z, r24
    257a:	8f 85       	ldd	r24, Y+15	; 0x0f
    257c:	98 89       	ldd	r25, Y+16	; 0x10
    257e:	01 96       	adiw	r24, 0x01	; 1
    2580:	98 8b       	std	Y+16, r25	; 0x10
    2582:	8f 87       	std	Y+15, r24	; 0x0f
    2584:	8b 89       	ldd	r24, Y+19	; 0x13
    2586:	9c 89       	ldd	r25, Y+20	; 0x14
    2588:	cc 01       	movw	r24, r24
    258a:	a0 e0       	ldi	r26, 0x00	; 0
    258c:	b0 e0       	ldi	r27, 0x00	; 0
    258e:	bc 01       	movw	r22, r24
    2590:	cd 01       	movw	r24, r26
    2592:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2596:	dc 01       	movw	r26, r24
    2598:	cb 01       	movw	r24, r22
    259a:	8b 87       	std	Y+11, r24	; 0x0b
    259c:	9c 87       	std	Y+12, r25	; 0x0c
    259e:	ad 87       	std	Y+13, r26	; 0x0d
    25a0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25a2:	6b 85       	ldd	r22, Y+11	; 0x0b
    25a4:	7c 85       	ldd	r23, Y+12	; 0x0c
    25a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    25a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    25aa:	20 e0       	ldi	r18, 0x00	; 0
    25ac:	30 e0       	ldi	r19, 0x00	; 0
    25ae:	4a e7       	ldi	r20, 0x7A	; 122
    25b0:	55 e4       	ldi	r21, 0x45	; 69
    25b2:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    25b6:	dc 01       	movw	r26, r24
    25b8:	cb 01       	movw	r24, r22
    25ba:	8f 83       	std	Y+7, r24	; 0x07
    25bc:	98 87       	std	Y+8, r25	; 0x08
    25be:	a9 87       	std	Y+9, r26	; 0x09
    25c0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    25c2:	6f 81       	ldd	r22, Y+7	; 0x07
    25c4:	78 85       	ldd	r23, Y+8	; 0x08
    25c6:	89 85       	ldd	r24, Y+9	; 0x09
    25c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    25ca:	20 e0       	ldi	r18, 0x00	; 0
    25cc:	30 e0       	ldi	r19, 0x00	; 0
    25ce:	40 e8       	ldi	r20, 0x80	; 128
    25d0:	5f e3       	ldi	r21, 0x3F	; 63
    25d2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    25d6:	88 23       	and	r24, r24
    25d8:	2c f4       	brge	.+10     	; 0x25e4 <pwm_rampUp1B+0xae>
		__ticks = 1;
    25da:	81 e0       	ldi	r24, 0x01	; 1
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	9e 83       	std	Y+6, r25	; 0x06
    25e0:	8d 83       	std	Y+5, r24	; 0x05
    25e2:	3f c0       	rjmp	.+126    	; 0x2662 <pwm_rampUp1B+0x12c>
	else if (__tmp > 65535)
    25e4:	6f 81       	ldd	r22, Y+7	; 0x07
    25e6:	78 85       	ldd	r23, Y+8	; 0x08
    25e8:	89 85       	ldd	r24, Y+9	; 0x09
    25ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    25ec:	20 e0       	ldi	r18, 0x00	; 0
    25ee:	3f ef       	ldi	r19, 0xFF	; 255
    25f0:	4f e7       	ldi	r20, 0x7F	; 127
    25f2:	57 e4       	ldi	r21, 0x47	; 71
    25f4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    25f8:	18 16       	cp	r1, r24
    25fa:	4c f5       	brge	.+82     	; 0x264e <pwm_rampUp1B+0x118>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    25fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    2600:	8d 85       	ldd	r24, Y+13	; 0x0d
    2602:	9e 85       	ldd	r25, Y+14	; 0x0e
    2604:	20 e0       	ldi	r18, 0x00	; 0
    2606:	30 e0       	ldi	r19, 0x00	; 0
    2608:	40 e2       	ldi	r20, 0x20	; 32
    260a:	51 e4       	ldi	r21, 0x41	; 65
    260c:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2610:	dc 01       	movw	r26, r24
    2612:	cb 01       	movw	r24, r22
    2614:	bc 01       	movw	r22, r24
    2616:	cd 01       	movw	r24, r26
    2618:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    261c:	dc 01       	movw	r26, r24
    261e:	cb 01       	movw	r24, r22
    2620:	9e 83       	std	Y+6, r25	; 0x06
    2622:	8d 83       	std	Y+5, r24	; 0x05
    2624:	0f c0       	rjmp	.+30     	; 0x2644 <pwm_rampUp1B+0x10e>
    2626:	80 e9       	ldi	r24, 0x90	; 144
    2628:	91 e0       	ldi	r25, 0x01	; 1
    262a:	9c 83       	std	Y+4, r25	; 0x04
    262c:	8b 83       	std	Y+3, r24	; 0x03
    262e:	8b 81       	ldd	r24, Y+3	; 0x03
    2630:	9c 81       	ldd	r25, Y+4	; 0x04
    2632:	01 97       	sbiw	r24, 0x01	; 1
    2634:	f1 f7       	brne	.-4      	; 0x2632 <pwm_rampUp1B+0xfc>
    2636:	9c 83       	std	Y+4, r25	; 0x04
    2638:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    263a:	8d 81       	ldd	r24, Y+5	; 0x05
    263c:	9e 81       	ldd	r25, Y+6	; 0x06
    263e:	01 97       	sbiw	r24, 0x01	; 1
    2640:	9e 83       	std	Y+6, r25	; 0x06
    2642:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2644:	8d 81       	ldd	r24, Y+5	; 0x05
    2646:	9e 81       	ldd	r25, Y+6	; 0x06
    2648:	00 97       	sbiw	r24, 0x00	; 0
    264a:	69 f7       	brne	.-38     	; 0x2626 <pwm_rampUp1B+0xf0>
    264c:	14 c0       	rjmp	.+40     	; 0x2676 <pwm_rampUp1B+0x140>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    264e:	6f 81       	ldd	r22, Y+7	; 0x07
    2650:	78 85       	ldd	r23, Y+8	; 0x08
    2652:	89 85       	ldd	r24, Y+9	; 0x09
    2654:	9a 85       	ldd	r25, Y+10	; 0x0a
    2656:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    265a:	dc 01       	movw	r26, r24
    265c:	cb 01       	movw	r24, r22
    265e:	9e 83       	std	Y+6, r25	; 0x06
    2660:	8d 83       	std	Y+5, r24	; 0x05
    2662:	8d 81       	ldd	r24, Y+5	; 0x05
    2664:	9e 81       	ldd	r25, Y+6	; 0x06
    2666:	9a 83       	std	Y+2, r25	; 0x02
    2668:	89 83       	std	Y+1, r24	; 0x01
    266a:	89 81       	ldd	r24, Y+1	; 0x01
    266c:	9a 81       	ldd	r25, Y+2	; 0x02
    266e:	01 97       	sbiw	r24, 0x01	; 1
    2670:	f1 f7       	brne	.-4      	; 0x266e <pwm_rampUp1B+0x138>
    2672:	9a 83       	std	Y+2, r25	; 0x02
    2674:	89 83       	std	Y+1, r24	; 0x01
    2676:	2f 85       	ldd	r18, Y+15	; 0x0f
    2678:	38 89       	ldd	r19, Y+16	; 0x10
    267a:	89 89       	ldd	r24, Y+17	; 0x11
    267c:	9a 89       	ldd	r25, Y+18	; 0x12
    267e:	82 17       	cp	r24, r18
    2680:	93 07       	cpc	r25, r19
    2682:	08 f0       	brcs	.+2      	; 0x2686 <pwm_rampUp1B+0x150>
    2684:	74 cf       	rjmp	.-280    	; 0x256e <pwm_rampUp1B+0x38>
    2686:	89 89       	ldd	r24, Y+17	; 0x11
    2688:	9a 89       	ldd	r25, Y+18	; 0x12
    268a:	90 93 3f 02 	sts	0x023F, r25
    268e:	80 93 3e 02 	sts	0x023E, r24
    2692:	64 96       	adiw	r28, 0x14	; 20
    2694:	0f b6       	in	r0, 0x3f	; 63
    2696:	f8 94       	cli
    2698:	de bf       	out	0x3e, r29	; 62
    269a:	0f be       	out	0x3f, r0	; 63
    269c:	cd bf       	out	0x3d, r28	; 61
    269e:	cf 91       	pop	r28
    26a0:	df 91       	pop	r29
    26a2:	08 95       	ret

000026a4 <pwm_rampDown1B>:
    26a4:	df 93       	push	r29
    26a6:	cf 93       	push	r28
    26a8:	cd b7       	in	r28, 0x3d	; 61
    26aa:	de b7       	in	r29, 0x3e	; 62
    26ac:	64 97       	sbiw	r28, 0x14	; 20
    26ae:	0f b6       	in	r0, 0x3f	; 63
    26b0:	f8 94       	cli
    26b2:	de bf       	out	0x3e, r29	; 62
    26b4:	0f be       	out	0x3f, r0	; 63
    26b6:	cd bf       	out	0x3d, r28	; 61
    26b8:	9a 8b       	std	Y+18, r25	; 0x12
    26ba:	89 8b       	std	Y+17, r24	; 0x11
    26bc:	7c 8b       	std	Y+20, r23	; 0x14
    26be:	6b 8b       	std	Y+19, r22	; 0x13
    26c0:	89 89       	ldd	r24, Y+17	; 0x11
    26c2:	9a 89       	ldd	r25, Y+18	; 0x12
    26c4:	00 97       	sbiw	r24, 0x00	; 0
    26c6:	21 f4       	brne	.+8      	; 0x26d0 <pwm_rampDown1B+0x2c>
    26c8:	81 e0       	ldi	r24, 0x01	; 1
    26ca:	90 e0       	ldi	r25, 0x00	; 0
    26cc:	9a 8b       	std	Y+18, r25	; 0x12
    26ce:	89 8b       	std	Y+17, r24	; 0x11
    26d0:	a0 e8       	ldi	r26, 0x80	; 128
    26d2:	b0 e0       	ldi	r27, 0x00	; 0
    26d4:	e0 e8       	ldi	r30, 0x80	; 128
    26d6:	f0 e0       	ldi	r31, 0x00	; 0
    26d8:	80 81       	ld	r24, Z
    26da:	80 62       	ori	r24, 0x20	; 32
    26dc:	8c 93       	st	X, r24
    26de:	80 91 3e 02 	lds	r24, 0x023E
    26e2:	90 91 3f 02 	lds	r25, 0x023F
    26e6:	98 8b       	std	Y+16, r25	; 0x10
    26e8:	8f 87       	std	Y+15, r24	; 0x0f
    26ea:	84 c0       	rjmp	.+264    	; 0x27f4 <pwm_rampDown1B+0x150>
    26ec:	ea e8       	ldi	r30, 0x8A	; 138
    26ee:	f0 e0       	ldi	r31, 0x00	; 0
    26f0:	8f 85       	ldd	r24, Y+15	; 0x0f
    26f2:	98 89       	ldd	r25, Y+16	; 0x10
    26f4:	91 83       	std	Z+1, r25	; 0x01
    26f6:	80 83       	st	Z, r24
    26f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    26fa:	98 89       	ldd	r25, Y+16	; 0x10
    26fc:	01 97       	sbiw	r24, 0x01	; 1
    26fe:	98 8b       	std	Y+16, r25	; 0x10
    2700:	8f 87       	std	Y+15, r24	; 0x0f
    2702:	8b 89       	ldd	r24, Y+19	; 0x13
    2704:	9c 89       	ldd	r25, Y+20	; 0x14
    2706:	cc 01       	movw	r24, r24
    2708:	a0 e0       	ldi	r26, 0x00	; 0
    270a:	b0 e0       	ldi	r27, 0x00	; 0
    270c:	bc 01       	movw	r22, r24
    270e:	cd 01       	movw	r24, r26
    2710:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2714:	dc 01       	movw	r26, r24
    2716:	cb 01       	movw	r24, r22
    2718:	8b 87       	std	Y+11, r24	; 0x0b
    271a:	9c 87       	std	Y+12, r25	; 0x0c
    271c:	ad 87       	std	Y+13, r26	; 0x0d
    271e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2720:	6b 85       	ldd	r22, Y+11	; 0x0b
    2722:	7c 85       	ldd	r23, Y+12	; 0x0c
    2724:	8d 85       	ldd	r24, Y+13	; 0x0d
    2726:	9e 85       	ldd	r25, Y+14	; 0x0e
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	4a e7       	ldi	r20, 0x7A	; 122
    272e:	55 e4       	ldi	r21, 0x45	; 69
    2730:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2734:	dc 01       	movw	r26, r24
    2736:	cb 01       	movw	r24, r22
    2738:	8f 83       	std	Y+7, r24	; 0x07
    273a:	98 87       	std	Y+8, r25	; 0x08
    273c:	a9 87       	std	Y+9, r26	; 0x09
    273e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2740:	6f 81       	ldd	r22, Y+7	; 0x07
    2742:	78 85       	ldd	r23, Y+8	; 0x08
    2744:	89 85       	ldd	r24, Y+9	; 0x09
    2746:	9a 85       	ldd	r25, Y+10	; 0x0a
    2748:	20 e0       	ldi	r18, 0x00	; 0
    274a:	30 e0       	ldi	r19, 0x00	; 0
    274c:	40 e8       	ldi	r20, 0x80	; 128
    274e:	5f e3       	ldi	r21, 0x3F	; 63
    2750:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2754:	88 23       	and	r24, r24
    2756:	2c f4       	brge	.+10     	; 0x2762 <pwm_rampDown1B+0xbe>
		__ticks = 1;
    2758:	81 e0       	ldi	r24, 0x01	; 1
    275a:	90 e0       	ldi	r25, 0x00	; 0
    275c:	9e 83       	std	Y+6, r25	; 0x06
    275e:	8d 83       	std	Y+5, r24	; 0x05
    2760:	3f c0       	rjmp	.+126    	; 0x27e0 <pwm_rampDown1B+0x13c>
	else if (__tmp > 65535)
    2762:	6f 81       	ldd	r22, Y+7	; 0x07
    2764:	78 85       	ldd	r23, Y+8	; 0x08
    2766:	89 85       	ldd	r24, Y+9	; 0x09
    2768:	9a 85       	ldd	r25, Y+10	; 0x0a
    276a:	20 e0       	ldi	r18, 0x00	; 0
    276c:	3f ef       	ldi	r19, 0xFF	; 255
    276e:	4f e7       	ldi	r20, 0x7F	; 127
    2770:	57 e4       	ldi	r21, 0x47	; 71
    2772:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2776:	18 16       	cp	r1, r24
    2778:	4c f5       	brge	.+82     	; 0x27cc <pwm_rampDown1B+0x128>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    277a:	6b 85       	ldd	r22, Y+11	; 0x0b
    277c:	7c 85       	ldd	r23, Y+12	; 0x0c
    277e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2780:	9e 85       	ldd	r25, Y+14	; 0x0e
    2782:	20 e0       	ldi	r18, 0x00	; 0
    2784:	30 e0       	ldi	r19, 0x00	; 0
    2786:	40 e2       	ldi	r20, 0x20	; 32
    2788:	51 e4       	ldi	r21, 0x41	; 65
    278a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    278e:	dc 01       	movw	r26, r24
    2790:	cb 01       	movw	r24, r22
    2792:	bc 01       	movw	r22, r24
    2794:	cd 01       	movw	r24, r26
    2796:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    279a:	dc 01       	movw	r26, r24
    279c:	cb 01       	movw	r24, r22
    279e:	9e 83       	std	Y+6, r25	; 0x06
    27a0:	8d 83       	std	Y+5, r24	; 0x05
    27a2:	0f c0       	rjmp	.+30     	; 0x27c2 <pwm_rampDown1B+0x11e>
    27a4:	80 e9       	ldi	r24, 0x90	; 144
    27a6:	91 e0       	ldi	r25, 0x01	; 1
    27a8:	9c 83       	std	Y+4, r25	; 0x04
    27aa:	8b 83       	std	Y+3, r24	; 0x03
    27ac:	8b 81       	ldd	r24, Y+3	; 0x03
    27ae:	9c 81       	ldd	r25, Y+4	; 0x04
    27b0:	01 97       	sbiw	r24, 0x01	; 1
    27b2:	f1 f7       	brne	.-4      	; 0x27b0 <pwm_rampDown1B+0x10c>
    27b4:	9c 83       	std	Y+4, r25	; 0x04
    27b6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27b8:	8d 81       	ldd	r24, Y+5	; 0x05
    27ba:	9e 81       	ldd	r25, Y+6	; 0x06
    27bc:	01 97       	sbiw	r24, 0x01	; 1
    27be:	9e 83       	std	Y+6, r25	; 0x06
    27c0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27c2:	8d 81       	ldd	r24, Y+5	; 0x05
    27c4:	9e 81       	ldd	r25, Y+6	; 0x06
    27c6:	00 97       	sbiw	r24, 0x00	; 0
    27c8:	69 f7       	brne	.-38     	; 0x27a4 <pwm_rampDown1B+0x100>
    27ca:	14 c0       	rjmp	.+40     	; 0x27f4 <pwm_rampDown1B+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27cc:	6f 81       	ldd	r22, Y+7	; 0x07
    27ce:	78 85       	ldd	r23, Y+8	; 0x08
    27d0:	89 85       	ldd	r24, Y+9	; 0x09
    27d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    27d4:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    27d8:	dc 01       	movw	r26, r24
    27da:	cb 01       	movw	r24, r22
    27dc:	9e 83       	std	Y+6, r25	; 0x06
    27de:	8d 83       	std	Y+5, r24	; 0x05
    27e0:	8d 81       	ldd	r24, Y+5	; 0x05
    27e2:	9e 81       	ldd	r25, Y+6	; 0x06
    27e4:	9a 83       	std	Y+2, r25	; 0x02
    27e6:	89 83       	std	Y+1, r24	; 0x01
    27e8:	89 81       	ldd	r24, Y+1	; 0x01
    27ea:	9a 81       	ldd	r25, Y+2	; 0x02
    27ec:	01 97       	sbiw	r24, 0x01	; 1
    27ee:	f1 f7       	brne	.-4      	; 0x27ec <pwm_rampDown1B+0x148>
    27f0:	9a 83       	std	Y+2, r25	; 0x02
    27f2:	89 83       	std	Y+1, r24	; 0x01
    27f4:	2f 85       	ldd	r18, Y+15	; 0x0f
    27f6:	38 89       	ldd	r19, Y+16	; 0x10
    27f8:	89 89       	ldd	r24, Y+17	; 0x11
    27fa:	9a 89       	ldd	r25, Y+18	; 0x12
    27fc:	28 17       	cp	r18, r24
    27fe:	39 07       	cpc	r19, r25
    2800:	08 f0       	brcs	.+2      	; 0x2804 <pwm_rampDown1B+0x160>
    2802:	74 cf       	rjmp	.-280    	; 0x26ec <pwm_rampDown1B+0x48>
    2804:	89 89       	ldd	r24, Y+17	; 0x11
    2806:	9a 89       	ldd	r25, Y+18	; 0x12
    2808:	90 93 3f 02 	sts	0x023F, r25
    280c:	80 93 3e 02 	sts	0x023E, r24
    2810:	64 96       	adiw	r28, 0x14	; 20
    2812:	0f b6       	in	r0, 0x3f	; 63
    2814:	f8 94       	cli
    2816:	de bf       	out	0x3e, r29	; 62
    2818:	0f be       	out	0x3f, r0	; 63
    281a:	cd bf       	out	0x3d, r28	; 61
    281c:	cf 91       	pop	r28
    281e:	df 91       	pop	r29
    2820:	08 95       	ret

00002822 <pwm_setup2>:
    2822:	df 93       	push	r29
    2824:	cf 93       	push	r28
    2826:	cd b7       	in	r28, 0x3d	; 61
    2828:	de b7       	in	r29, 0x3e	; 62
    282a:	a1 eb       	ldi	r26, 0xB1	; 177
    282c:	b0 e0       	ldi	r27, 0x00	; 0
    282e:	e1 eb       	ldi	r30, 0xB1	; 177
    2830:	f0 e0       	ldi	r31, 0x00	; 0
    2832:	80 81       	ld	r24, Z
    2834:	84 60       	ori	r24, 0x04	; 4
    2836:	8c 93       	st	X, r24
    2838:	a0 eb       	ldi	r26, 0xB0	; 176
    283a:	b0 e0       	ldi	r27, 0x00	; 0
    283c:	e0 eb       	ldi	r30, 0xB0	; 176
    283e:	f0 e0       	ldi	r31, 0x00	; 0
    2840:	80 81       	ld	r24, Z
    2842:	81 60       	ori	r24, 0x01	; 1
    2844:	8c 93       	st	X, r24
    2846:	aa e2       	ldi	r26, 0x2A	; 42
    2848:	b0 e0       	ldi	r27, 0x00	; 0
    284a:	ea e2       	ldi	r30, 0x2A	; 42
    284c:	f0 e0       	ldi	r31, 0x00	; 0
    284e:	80 81       	ld	r24, Z
    2850:	88 60       	ori	r24, 0x08	; 8
    2852:	8c 93       	st	X, r24
    2854:	a4 e2       	ldi	r26, 0x24	; 36
    2856:	b0 e0       	ldi	r27, 0x00	; 0
    2858:	e4 e2       	ldi	r30, 0x24	; 36
    285a:	f0 e0       	ldi	r31, 0x00	; 0
    285c:	80 81       	ld	r24, Z
    285e:	88 60       	ori	r24, 0x08	; 8
    2860:	8c 93       	st	X, r24
    2862:	10 92 3b 02 	sts	0x023B, r1
    2866:	10 92 3a 02 	sts	0x023A, r1
    286a:	10 92 47 02 	sts	0x0247, r1
    286e:	10 92 46 02 	sts	0x0246, r1
    2872:	10 92 4d 02 	sts	0x024D, r1
    2876:	10 92 4c 02 	sts	0x024C, r1
    287a:	10 92 41 02 	sts	0x0241, r1
    287e:	10 92 40 02 	sts	0x0240, r1
    2882:	10 92 49 02 	sts	0x0249, r1
    2886:	10 92 48 02 	sts	0x0248, r1
    288a:	10 92 55 02 	sts	0x0255, r1
    288e:	10 92 54 02 	sts	0x0254, r1
    2892:	cf 91       	pop	r28
    2894:	df 91       	pop	r29
    2896:	08 95       	ret

00002898 <pwm2A>:
    2898:	df 93       	push	r29
    289a:	cf 93       	push	r28
    289c:	00 d0       	rcall	.+0      	; 0x289e <pwm2A+0x6>
    289e:	cd b7       	in	r28, 0x3d	; 61
    28a0:	de b7       	in	r29, 0x3e	; 62
    28a2:	9a 83       	std	Y+2, r25	; 0x02
    28a4:	89 83       	std	Y+1, r24	; 0x01
    28a6:	a0 eb       	ldi	r26, 0xB0	; 176
    28a8:	b0 e0       	ldi	r27, 0x00	; 0
    28aa:	e0 eb       	ldi	r30, 0xB0	; 176
    28ac:	f0 e0       	ldi	r31, 0x00	; 0
    28ae:	80 81       	ld	r24, Z
    28b0:	80 68       	ori	r24, 0x80	; 128
    28b2:	8c 93       	st	X, r24
    28b4:	e3 eb       	ldi	r30, 0xB3	; 179
    28b6:	f0 e0       	ldi	r31, 0x00	; 0
    28b8:	89 81       	ldd	r24, Y+1	; 0x01
    28ba:	80 83       	st	Z, r24
    28bc:	0f 90       	pop	r0
    28be:	0f 90       	pop	r0
    28c0:	cf 91       	pop	r28
    28c2:	df 91       	pop	r29
    28c4:	08 95       	ret

000028c6 <pwm2B>:
    28c6:	df 93       	push	r29
    28c8:	cf 93       	push	r28
    28ca:	00 d0       	rcall	.+0      	; 0x28cc <pwm2B+0x6>
    28cc:	cd b7       	in	r28, 0x3d	; 61
    28ce:	de b7       	in	r29, 0x3e	; 62
    28d0:	9a 83       	std	Y+2, r25	; 0x02
    28d2:	89 83       	std	Y+1, r24	; 0x01
    28d4:	a0 eb       	ldi	r26, 0xB0	; 176
    28d6:	b0 e0       	ldi	r27, 0x00	; 0
    28d8:	e0 eb       	ldi	r30, 0xB0	; 176
    28da:	f0 e0       	ldi	r31, 0x00	; 0
    28dc:	80 81       	ld	r24, Z
    28de:	80 62       	ori	r24, 0x20	; 32
    28e0:	8c 93       	st	X, r24
    28e2:	e4 eb       	ldi	r30, 0xB4	; 180
    28e4:	f0 e0       	ldi	r31, 0x00	; 0
    28e6:	89 81       	ldd	r24, Y+1	; 0x01
    28e8:	80 83       	st	Z, r24
    28ea:	0f 90       	pop	r0
    28ec:	0f 90       	pop	r0
    28ee:	cf 91       	pop	r28
    28f0:	df 91       	pop	r29
    28f2:	08 95       	ret

000028f4 <pwm_ramp2A>:
    28f4:	df 93       	push	r29
    28f6:	cf 93       	push	r28
    28f8:	cd b7       	in	r28, 0x3d	; 61
    28fa:	de b7       	in	r29, 0x3e	; 62
    28fc:	a4 97       	sbiw	r28, 0x24	; 36
    28fe:	0f b6       	in	r0, 0x3f	; 63
    2900:	f8 94       	cli
    2902:	de bf       	out	0x3e, r29	; 62
    2904:	0f be       	out	0x3f, r0	; 63
    2906:	cd bf       	out	0x3d, r28	; 61
    2908:	9a a3       	std	Y+34, r25	; 0x22
    290a:	89 a3       	std	Y+33, r24	; 0x21
    290c:	7c a3       	std	Y+36, r23	; 0x24
    290e:	6b a3       	std	Y+35, r22	; 0x23
    2910:	89 a1       	ldd	r24, Y+33	; 0x21
    2912:	9a a1       	ldd	r25, Y+34	; 0x22
    2914:	00 97       	sbiw	r24, 0x00	; 0
    2916:	29 f4       	brne	.+10     	; 0x2922 <pwm_ramp2A+0x2e>
    2918:	80 e0       	ldi	r24, 0x00	; 0
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	0e 94 4c 14 	call	0x2898	; 0x2898 <pwm2A>
    2920:	47 c1       	rjmp	.+654    	; 0x2bb0 <pwm_ramp2A+0x2bc>
    2922:	20 91 4c 02 	lds	r18, 0x024C
    2926:	30 91 4d 02 	lds	r19, 0x024D
    292a:	89 a1       	ldd	r24, Y+33	; 0x21
    292c:	9a a1       	ldd	r25, Y+34	; 0x22
    292e:	28 17       	cp	r18, r24
    2930:	39 07       	cpc	r19, r25
    2932:	08 f0       	brcs	.+2      	; 0x2936 <pwm_ramp2A+0x42>
    2934:	9f c0       	rjmp	.+318    	; 0x2a74 <pwm_ramp2A+0x180>
    2936:	a0 eb       	ldi	r26, 0xB0	; 176
    2938:	b0 e0       	ldi	r27, 0x00	; 0
    293a:	e0 eb       	ldi	r30, 0xB0	; 176
    293c:	f0 e0       	ldi	r31, 0x00	; 0
    293e:	80 81       	ld	r24, Z
    2940:	80 68       	ori	r24, 0x80	; 128
    2942:	8c 93       	st	X, r24
    2944:	80 91 4c 02 	lds	r24, 0x024C
    2948:	90 91 4d 02 	lds	r25, 0x024D
    294c:	98 a3       	std	Y+32, r25	; 0x20
    294e:	8f 8f       	std	Y+31, r24	; 0x1f
    2950:	82 c0       	rjmp	.+260    	; 0x2a56 <pwm_ramp2A+0x162>
    2952:	e3 eb       	ldi	r30, 0xB3	; 179
    2954:	f0 e0       	ldi	r31, 0x00	; 0
    2956:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2958:	80 83       	st	Z, r24
    295a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    295c:	98 a1       	ldd	r25, Y+32	; 0x20
    295e:	01 96       	adiw	r24, 0x01	; 1
    2960:	98 a3       	std	Y+32, r25	; 0x20
    2962:	8f 8f       	std	Y+31, r24	; 0x1f
    2964:	8b a1       	ldd	r24, Y+35	; 0x23
    2966:	9c a1       	ldd	r25, Y+36	; 0x24
    2968:	cc 01       	movw	r24, r24
    296a:	a0 e0       	ldi	r26, 0x00	; 0
    296c:	b0 e0       	ldi	r27, 0x00	; 0
    296e:	bc 01       	movw	r22, r24
    2970:	cd 01       	movw	r24, r26
    2972:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2976:	dc 01       	movw	r26, r24
    2978:	cb 01       	movw	r24, r22
    297a:	89 8f       	std	Y+25, r24	; 0x19
    297c:	9a 8f       	std	Y+26, r25	; 0x1a
    297e:	ab 8f       	std	Y+27, r26	; 0x1b
    2980:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2982:	69 8d       	ldd	r22, Y+25	; 0x19
    2984:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2986:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2988:	9c 8d       	ldd	r25, Y+28	; 0x1c
    298a:	20 e0       	ldi	r18, 0x00	; 0
    298c:	30 e0       	ldi	r19, 0x00	; 0
    298e:	4a e7       	ldi	r20, 0x7A	; 122
    2990:	55 e4       	ldi	r21, 0x45	; 69
    2992:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2996:	dc 01       	movw	r26, r24
    2998:	cb 01       	movw	r24, r22
    299a:	8d 8b       	std	Y+21, r24	; 0x15
    299c:	9e 8b       	std	Y+22, r25	; 0x16
    299e:	af 8b       	std	Y+23, r26	; 0x17
    29a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    29a2:	6d 89       	ldd	r22, Y+21	; 0x15
    29a4:	7e 89       	ldd	r23, Y+22	; 0x16
    29a6:	8f 89       	ldd	r24, Y+23	; 0x17
    29a8:	98 8d       	ldd	r25, Y+24	; 0x18
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	40 e8       	ldi	r20, 0x80	; 128
    29b0:	5f e3       	ldi	r21, 0x3F	; 63
    29b2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    29b6:	88 23       	and	r24, r24
    29b8:	2c f4       	brge	.+10     	; 0x29c4 <pwm_ramp2A+0xd0>
		__ticks = 1;
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	9c 8b       	std	Y+20, r25	; 0x14
    29c0:	8b 8b       	std	Y+19, r24	; 0x13
    29c2:	3f c0       	rjmp	.+126    	; 0x2a42 <pwm_ramp2A+0x14e>
	else if (__tmp > 65535)
    29c4:	6d 89       	ldd	r22, Y+21	; 0x15
    29c6:	7e 89       	ldd	r23, Y+22	; 0x16
    29c8:	8f 89       	ldd	r24, Y+23	; 0x17
    29ca:	98 8d       	ldd	r25, Y+24	; 0x18
    29cc:	20 e0       	ldi	r18, 0x00	; 0
    29ce:	3f ef       	ldi	r19, 0xFF	; 255
    29d0:	4f e7       	ldi	r20, 0x7F	; 127
    29d2:	57 e4       	ldi	r21, 0x47	; 71
    29d4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    29d8:	18 16       	cp	r1, r24
    29da:	4c f5       	brge	.+82     	; 0x2a2e <pwm_ramp2A+0x13a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29dc:	69 8d       	ldd	r22, Y+25	; 0x19
    29de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    29e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    29e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    29e4:	20 e0       	ldi	r18, 0x00	; 0
    29e6:	30 e0       	ldi	r19, 0x00	; 0
    29e8:	40 e2       	ldi	r20, 0x20	; 32
    29ea:	51 e4       	ldi	r21, 0x41	; 65
    29ec:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    29f0:	dc 01       	movw	r26, r24
    29f2:	cb 01       	movw	r24, r22
    29f4:	bc 01       	movw	r22, r24
    29f6:	cd 01       	movw	r24, r26
    29f8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    29fc:	dc 01       	movw	r26, r24
    29fe:	cb 01       	movw	r24, r22
    2a00:	9c 8b       	std	Y+20, r25	; 0x14
    2a02:	8b 8b       	std	Y+19, r24	; 0x13
    2a04:	0f c0       	rjmp	.+30     	; 0x2a24 <pwm_ramp2A+0x130>
    2a06:	80 e9       	ldi	r24, 0x90	; 144
    2a08:	91 e0       	ldi	r25, 0x01	; 1
    2a0a:	9a 8b       	std	Y+18, r25	; 0x12
    2a0c:	89 8b       	std	Y+17, r24	; 0x11
    2a0e:	89 89       	ldd	r24, Y+17	; 0x11
    2a10:	9a 89       	ldd	r25, Y+18	; 0x12
    2a12:	01 97       	sbiw	r24, 0x01	; 1
    2a14:	f1 f7       	brne	.-4      	; 0x2a12 <pwm_ramp2A+0x11e>
    2a16:	9a 8b       	std	Y+18, r25	; 0x12
    2a18:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a1a:	8b 89       	ldd	r24, Y+19	; 0x13
    2a1c:	9c 89       	ldd	r25, Y+20	; 0x14
    2a1e:	01 97       	sbiw	r24, 0x01	; 1
    2a20:	9c 8b       	std	Y+20, r25	; 0x14
    2a22:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a24:	8b 89       	ldd	r24, Y+19	; 0x13
    2a26:	9c 89       	ldd	r25, Y+20	; 0x14
    2a28:	00 97       	sbiw	r24, 0x00	; 0
    2a2a:	69 f7       	brne	.-38     	; 0x2a06 <pwm_ramp2A+0x112>
    2a2c:	14 c0       	rjmp	.+40     	; 0x2a56 <pwm_ramp2A+0x162>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a2e:	6d 89       	ldd	r22, Y+21	; 0x15
    2a30:	7e 89       	ldd	r23, Y+22	; 0x16
    2a32:	8f 89       	ldd	r24, Y+23	; 0x17
    2a34:	98 8d       	ldd	r25, Y+24	; 0x18
    2a36:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2a3a:	dc 01       	movw	r26, r24
    2a3c:	cb 01       	movw	r24, r22
    2a3e:	9c 8b       	std	Y+20, r25	; 0x14
    2a40:	8b 8b       	std	Y+19, r24	; 0x13
    2a42:	8b 89       	ldd	r24, Y+19	; 0x13
    2a44:	9c 89       	ldd	r25, Y+20	; 0x14
    2a46:	98 8b       	std	Y+16, r25	; 0x10
    2a48:	8f 87       	std	Y+15, r24	; 0x0f
    2a4a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a4c:	98 89       	ldd	r25, Y+16	; 0x10
    2a4e:	01 97       	sbiw	r24, 0x01	; 1
    2a50:	f1 f7       	brne	.-4      	; 0x2a4e <pwm_ramp2A+0x15a>
    2a52:	98 8b       	std	Y+16, r25	; 0x10
    2a54:	8f 87       	std	Y+15, r24	; 0x0f
    2a56:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2a58:	38 a1       	ldd	r19, Y+32	; 0x20
    2a5a:	89 a1       	ldd	r24, Y+33	; 0x21
    2a5c:	9a a1       	ldd	r25, Y+34	; 0x22
    2a5e:	82 17       	cp	r24, r18
    2a60:	93 07       	cpc	r25, r19
    2a62:	08 f0       	brcs	.+2      	; 0x2a66 <pwm_ramp2A+0x172>
    2a64:	76 cf       	rjmp	.-276    	; 0x2952 <pwm_ramp2A+0x5e>
    2a66:	89 a1       	ldd	r24, Y+33	; 0x21
    2a68:	9a a1       	ldd	r25, Y+34	; 0x22
    2a6a:	90 93 4d 02 	sts	0x024D, r25
    2a6e:	80 93 4c 02 	sts	0x024C, r24
    2a72:	98 c0       	rjmp	.+304    	; 0x2ba4 <pwm_ramp2A+0x2b0>
    2a74:	a0 eb       	ldi	r26, 0xB0	; 176
    2a76:	b0 e0       	ldi	r27, 0x00	; 0
    2a78:	e0 eb       	ldi	r30, 0xB0	; 176
    2a7a:	f0 e0       	ldi	r31, 0x00	; 0
    2a7c:	80 81       	ld	r24, Z
    2a7e:	80 68       	ori	r24, 0x80	; 128
    2a80:	8c 93       	st	X, r24
    2a82:	80 91 4c 02 	lds	r24, 0x024C
    2a86:	90 91 4d 02 	lds	r25, 0x024D
    2a8a:	9e 8f       	std	Y+30, r25	; 0x1e
    2a8c:	8d 8f       	std	Y+29, r24	; 0x1d
    2a8e:	82 c0       	rjmp	.+260    	; 0x2b94 <pwm_ramp2A+0x2a0>
    2a90:	e3 eb       	ldi	r30, 0xB3	; 179
    2a92:	f0 e0       	ldi	r31, 0x00	; 0
    2a94:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a96:	80 83       	st	Z, r24
    2a98:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a9a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2a9c:	01 97       	sbiw	r24, 0x01	; 1
    2a9e:	9e 8f       	std	Y+30, r25	; 0x1e
    2aa0:	8d 8f       	std	Y+29, r24	; 0x1d
    2aa2:	8b a1       	ldd	r24, Y+35	; 0x23
    2aa4:	9c a1       	ldd	r25, Y+36	; 0x24
    2aa6:	cc 01       	movw	r24, r24
    2aa8:	a0 e0       	ldi	r26, 0x00	; 0
    2aaa:	b0 e0       	ldi	r27, 0x00	; 0
    2aac:	bc 01       	movw	r22, r24
    2aae:	cd 01       	movw	r24, r26
    2ab0:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2ab4:	dc 01       	movw	r26, r24
    2ab6:	cb 01       	movw	r24, r22
    2ab8:	8b 87       	std	Y+11, r24	; 0x0b
    2aba:	9c 87       	std	Y+12, r25	; 0x0c
    2abc:	ad 87       	std	Y+13, r26	; 0x0d
    2abe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ac0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ac2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ac4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ac6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ac8:	20 e0       	ldi	r18, 0x00	; 0
    2aca:	30 e0       	ldi	r19, 0x00	; 0
    2acc:	4a e7       	ldi	r20, 0x7A	; 122
    2ace:	55 e4       	ldi	r21, 0x45	; 69
    2ad0:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2ad4:	dc 01       	movw	r26, r24
    2ad6:	cb 01       	movw	r24, r22
    2ad8:	8f 83       	std	Y+7, r24	; 0x07
    2ada:	98 87       	std	Y+8, r25	; 0x08
    2adc:	a9 87       	std	Y+9, r26	; 0x09
    2ade:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ae0:	6f 81       	ldd	r22, Y+7	; 0x07
    2ae2:	78 85       	ldd	r23, Y+8	; 0x08
    2ae4:	89 85       	ldd	r24, Y+9	; 0x09
    2ae6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ae8:	20 e0       	ldi	r18, 0x00	; 0
    2aea:	30 e0       	ldi	r19, 0x00	; 0
    2aec:	40 e8       	ldi	r20, 0x80	; 128
    2aee:	5f e3       	ldi	r21, 0x3F	; 63
    2af0:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2af4:	88 23       	and	r24, r24
    2af6:	2c f4       	brge	.+10     	; 0x2b02 <pwm_ramp2A+0x20e>
		__ticks = 1;
    2af8:	81 e0       	ldi	r24, 0x01	; 1
    2afa:	90 e0       	ldi	r25, 0x00	; 0
    2afc:	9e 83       	std	Y+6, r25	; 0x06
    2afe:	8d 83       	std	Y+5, r24	; 0x05
    2b00:	3f c0       	rjmp	.+126    	; 0x2b80 <pwm_ramp2A+0x28c>
	else if (__tmp > 65535)
    2b02:	6f 81       	ldd	r22, Y+7	; 0x07
    2b04:	78 85       	ldd	r23, Y+8	; 0x08
    2b06:	89 85       	ldd	r24, Y+9	; 0x09
    2b08:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b0a:	20 e0       	ldi	r18, 0x00	; 0
    2b0c:	3f ef       	ldi	r19, 0xFF	; 255
    2b0e:	4f e7       	ldi	r20, 0x7F	; 127
    2b10:	57 e4       	ldi	r21, 0x47	; 71
    2b12:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2b16:	18 16       	cp	r1, r24
    2b18:	4c f5       	brge	.+82     	; 0x2b6c <pwm_ramp2A+0x278>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b20:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b22:	20 e0       	ldi	r18, 0x00	; 0
    2b24:	30 e0       	ldi	r19, 0x00	; 0
    2b26:	40 e2       	ldi	r20, 0x20	; 32
    2b28:	51 e4       	ldi	r21, 0x41	; 65
    2b2a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2b2e:	dc 01       	movw	r26, r24
    2b30:	cb 01       	movw	r24, r22
    2b32:	bc 01       	movw	r22, r24
    2b34:	cd 01       	movw	r24, r26
    2b36:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2b3a:	dc 01       	movw	r26, r24
    2b3c:	cb 01       	movw	r24, r22
    2b3e:	9e 83       	std	Y+6, r25	; 0x06
    2b40:	8d 83       	std	Y+5, r24	; 0x05
    2b42:	0f c0       	rjmp	.+30     	; 0x2b62 <pwm_ramp2A+0x26e>
    2b44:	80 e9       	ldi	r24, 0x90	; 144
    2b46:	91 e0       	ldi	r25, 0x01	; 1
    2b48:	9c 83       	std	Y+4, r25	; 0x04
    2b4a:	8b 83       	std	Y+3, r24	; 0x03
    2b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2b4e:	9c 81       	ldd	r25, Y+4	; 0x04
    2b50:	01 97       	sbiw	r24, 0x01	; 1
    2b52:	f1 f7       	brne	.-4      	; 0x2b50 <pwm_ramp2A+0x25c>
    2b54:	9c 83       	std	Y+4, r25	; 0x04
    2b56:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b58:	8d 81       	ldd	r24, Y+5	; 0x05
    2b5a:	9e 81       	ldd	r25, Y+6	; 0x06
    2b5c:	01 97       	sbiw	r24, 0x01	; 1
    2b5e:	9e 83       	std	Y+6, r25	; 0x06
    2b60:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b62:	8d 81       	ldd	r24, Y+5	; 0x05
    2b64:	9e 81       	ldd	r25, Y+6	; 0x06
    2b66:	00 97       	sbiw	r24, 0x00	; 0
    2b68:	69 f7       	brne	.-38     	; 0x2b44 <pwm_ramp2A+0x250>
    2b6a:	14 c0       	rjmp	.+40     	; 0x2b94 <pwm_ramp2A+0x2a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b6c:	6f 81       	ldd	r22, Y+7	; 0x07
    2b6e:	78 85       	ldd	r23, Y+8	; 0x08
    2b70:	89 85       	ldd	r24, Y+9	; 0x09
    2b72:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b74:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2b78:	dc 01       	movw	r26, r24
    2b7a:	cb 01       	movw	r24, r22
    2b7c:	9e 83       	std	Y+6, r25	; 0x06
    2b7e:	8d 83       	std	Y+5, r24	; 0x05
    2b80:	8d 81       	ldd	r24, Y+5	; 0x05
    2b82:	9e 81       	ldd	r25, Y+6	; 0x06
    2b84:	9a 83       	std	Y+2, r25	; 0x02
    2b86:	89 83       	std	Y+1, r24	; 0x01
    2b88:	89 81       	ldd	r24, Y+1	; 0x01
    2b8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2b8c:	01 97       	sbiw	r24, 0x01	; 1
    2b8e:	f1 f7       	brne	.-4      	; 0x2b8c <pwm_ramp2A+0x298>
    2b90:	9a 83       	std	Y+2, r25	; 0x02
    2b92:	89 83       	std	Y+1, r24	; 0x01
    2b94:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2b96:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2b98:	89 a1       	ldd	r24, Y+33	; 0x21
    2b9a:	9a a1       	ldd	r25, Y+34	; 0x22
    2b9c:	28 17       	cp	r18, r24
    2b9e:	39 07       	cpc	r19, r25
    2ba0:	08 f0       	brcs	.+2      	; 0x2ba4 <pwm_ramp2A+0x2b0>
    2ba2:	76 cf       	rjmp	.-276    	; 0x2a90 <pwm_ramp2A+0x19c>
    2ba4:	89 a1       	ldd	r24, Y+33	; 0x21
    2ba6:	9a a1       	ldd	r25, Y+34	; 0x22
    2ba8:	90 93 4d 02 	sts	0x024D, r25
    2bac:	80 93 4c 02 	sts	0x024C, r24
    2bb0:	a4 96       	adiw	r28, 0x24	; 36
    2bb2:	0f b6       	in	r0, 0x3f	; 63
    2bb4:	f8 94       	cli
    2bb6:	de bf       	out	0x3e, r29	; 62
    2bb8:	0f be       	out	0x3f, r0	; 63
    2bba:	cd bf       	out	0x3d, r28	; 61
    2bbc:	cf 91       	pop	r28
    2bbe:	df 91       	pop	r29
    2bc0:	08 95       	ret

00002bc2 <pwm_rampUp2A>:
    2bc2:	df 93       	push	r29
    2bc4:	cf 93       	push	r28
    2bc6:	cd b7       	in	r28, 0x3d	; 61
    2bc8:	de b7       	in	r29, 0x3e	; 62
    2bca:	64 97       	sbiw	r28, 0x14	; 20
    2bcc:	0f b6       	in	r0, 0x3f	; 63
    2bce:	f8 94       	cli
    2bd0:	de bf       	out	0x3e, r29	; 62
    2bd2:	0f be       	out	0x3f, r0	; 63
    2bd4:	cd bf       	out	0x3d, r28	; 61
    2bd6:	9a 8b       	std	Y+18, r25	; 0x12
    2bd8:	89 8b       	std	Y+17, r24	; 0x11
    2bda:	7c 8b       	std	Y+20, r23	; 0x14
    2bdc:	6b 8b       	std	Y+19, r22	; 0x13
    2bde:	a0 eb       	ldi	r26, 0xB0	; 176
    2be0:	b0 e0       	ldi	r27, 0x00	; 0
    2be2:	e0 eb       	ldi	r30, 0xB0	; 176
    2be4:	f0 e0       	ldi	r31, 0x00	; 0
    2be6:	80 81       	ld	r24, Z
    2be8:	80 68       	ori	r24, 0x80	; 128
    2bea:	8c 93       	st	X, r24
    2bec:	80 91 4c 02 	lds	r24, 0x024C
    2bf0:	90 91 4d 02 	lds	r25, 0x024D
    2bf4:	98 8b       	std	Y+16, r25	; 0x10
    2bf6:	8f 87       	std	Y+15, r24	; 0x0f
    2bf8:	82 c0       	rjmp	.+260    	; 0x2cfe <pwm_rampUp2A+0x13c>
    2bfa:	e3 eb       	ldi	r30, 0xB3	; 179
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c00:	80 83       	st	Z, r24
    2c02:	8f 85       	ldd	r24, Y+15	; 0x0f
    2c04:	98 89       	ldd	r25, Y+16	; 0x10
    2c06:	01 96       	adiw	r24, 0x01	; 1
    2c08:	98 8b       	std	Y+16, r25	; 0x10
    2c0a:	8f 87       	std	Y+15, r24	; 0x0f
    2c0c:	8b 89       	ldd	r24, Y+19	; 0x13
    2c0e:	9c 89       	ldd	r25, Y+20	; 0x14
    2c10:	cc 01       	movw	r24, r24
    2c12:	a0 e0       	ldi	r26, 0x00	; 0
    2c14:	b0 e0       	ldi	r27, 0x00	; 0
    2c16:	bc 01       	movw	r22, r24
    2c18:	cd 01       	movw	r24, r26
    2c1a:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	8b 87       	std	Y+11, r24	; 0x0b
    2c24:	9c 87       	std	Y+12, r25	; 0x0c
    2c26:	ad 87       	std	Y+13, r26	; 0x0d
    2c28:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c2a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c2c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c2e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c30:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c32:	20 e0       	ldi	r18, 0x00	; 0
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	4a e7       	ldi	r20, 0x7A	; 122
    2c38:	55 e4       	ldi	r21, 0x45	; 69
    2c3a:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2c3e:	dc 01       	movw	r26, r24
    2c40:	cb 01       	movw	r24, r22
    2c42:	8f 83       	std	Y+7, r24	; 0x07
    2c44:	98 87       	std	Y+8, r25	; 0x08
    2c46:	a9 87       	std	Y+9, r26	; 0x09
    2c48:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c4a:	6f 81       	ldd	r22, Y+7	; 0x07
    2c4c:	78 85       	ldd	r23, Y+8	; 0x08
    2c4e:	89 85       	ldd	r24, Y+9	; 0x09
    2c50:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c52:	20 e0       	ldi	r18, 0x00	; 0
    2c54:	30 e0       	ldi	r19, 0x00	; 0
    2c56:	40 e8       	ldi	r20, 0x80	; 128
    2c58:	5f e3       	ldi	r21, 0x3F	; 63
    2c5a:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2c5e:	88 23       	and	r24, r24
    2c60:	2c f4       	brge	.+10     	; 0x2c6c <pwm_rampUp2A+0xaa>
		__ticks = 1;
    2c62:	81 e0       	ldi	r24, 0x01	; 1
    2c64:	90 e0       	ldi	r25, 0x00	; 0
    2c66:	9e 83       	std	Y+6, r25	; 0x06
    2c68:	8d 83       	std	Y+5, r24	; 0x05
    2c6a:	3f c0       	rjmp	.+126    	; 0x2cea <pwm_rampUp2A+0x128>
	else if (__tmp > 65535)
    2c6c:	6f 81       	ldd	r22, Y+7	; 0x07
    2c6e:	78 85       	ldd	r23, Y+8	; 0x08
    2c70:	89 85       	ldd	r24, Y+9	; 0x09
    2c72:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c74:	20 e0       	ldi	r18, 0x00	; 0
    2c76:	3f ef       	ldi	r19, 0xFF	; 255
    2c78:	4f e7       	ldi	r20, 0x7F	; 127
    2c7a:	57 e4       	ldi	r21, 0x47	; 71
    2c7c:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2c80:	18 16       	cp	r1, r24
    2c82:	4c f5       	brge	.+82     	; 0x2cd6 <pwm_rampUp2A+0x114>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c84:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c86:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c88:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c8a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c8c:	20 e0       	ldi	r18, 0x00	; 0
    2c8e:	30 e0       	ldi	r19, 0x00	; 0
    2c90:	40 e2       	ldi	r20, 0x20	; 32
    2c92:	51 e4       	ldi	r21, 0x41	; 65
    2c94:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2c98:	dc 01       	movw	r26, r24
    2c9a:	cb 01       	movw	r24, r22
    2c9c:	bc 01       	movw	r22, r24
    2c9e:	cd 01       	movw	r24, r26
    2ca0:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	cb 01       	movw	r24, r22
    2ca8:	9e 83       	std	Y+6, r25	; 0x06
    2caa:	8d 83       	std	Y+5, r24	; 0x05
    2cac:	0f c0       	rjmp	.+30     	; 0x2ccc <pwm_rampUp2A+0x10a>
    2cae:	80 e9       	ldi	r24, 0x90	; 144
    2cb0:	91 e0       	ldi	r25, 0x01	; 1
    2cb2:	9c 83       	std	Y+4, r25	; 0x04
    2cb4:	8b 83       	std	Y+3, r24	; 0x03
    2cb6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cb8:	9c 81       	ldd	r25, Y+4	; 0x04
    2cba:	01 97       	sbiw	r24, 0x01	; 1
    2cbc:	f1 f7       	brne	.-4      	; 0x2cba <pwm_rampUp2A+0xf8>
    2cbe:	9c 83       	std	Y+4, r25	; 0x04
    2cc0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2cc2:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc4:	9e 81       	ldd	r25, Y+6	; 0x06
    2cc6:	01 97       	sbiw	r24, 0x01	; 1
    2cc8:	9e 83       	std	Y+6, r25	; 0x06
    2cca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ccc:	8d 81       	ldd	r24, Y+5	; 0x05
    2cce:	9e 81       	ldd	r25, Y+6	; 0x06
    2cd0:	00 97       	sbiw	r24, 0x00	; 0
    2cd2:	69 f7       	brne	.-38     	; 0x2cae <pwm_rampUp2A+0xec>
    2cd4:	14 c0       	rjmp	.+40     	; 0x2cfe <pwm_rampUp2A+0x13c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cd6:	6f 81       	ldd	r22, Y+7	; 0x07
    2cd8:	78 85       	ldd	r23, Y+8	; 0x08
    2cda:	89 85       	ldd	r24, Y+9	; 0x09
    2cdc:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cde:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2ce2:	dc 01       	movw	r26, r24
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	9e 83       	std	Y+6, r25	; 0x06
    2ce8:	8d 83       	std	Y+5, r24	; 0x05
    2cea:	8d 81       	ldd	r24, Y+5	; 0x05
    2cec:	9e 81       	ldd	r25, Y+6	; 0x06
    2cee:	9a 83       	std	Y+2, r25	; 0x02
    2cf0:	89 83       	std	Y+1, r24	; 0x01
    2cf2:	89 81       	ldd	r24, Y+1	; 0x01
    2cf4:	9a 81       	ldd	r25, Y+2	; 0x02
    2cf6:	01 97       	sbiw	r24, 0x01	; 1
    2cf8:	f1 f7       	brne	.-4      	; 0x2cf6 <pwm_rampUp2A+0x134>
    2cfa:	9a 83       	std	Y+2, r25	; 0x02
    2cfc:	89 83       	std	Y+1, r24	; 0x01
    2cfe:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d00:	38 89       	ldd	r19, Y+16	; 0x10
    2d02:	89 89       	ldd	r24, Y+17	; 0x11
    2d04:	9a 89       	ldd	r25, Y+18	; 0x12
    2d06:	82 17       	cp	r24, r18
    2d08:	93 07       	cpc	r25, r19
    2d0a:	08 f0       	brcs	.+2      	; 0x2d0e <pwm_rampUp2A+0x14c>
    2d0c:	76 cf       	rjmp	.-276    	; 0x2bfa <pwm_rampUp2A+0x38>
    2d0e:	89 89       	ldd	r24, Y+17	; 0x11
    2d10:	9a 89       	ldd	r25, Y+18	; 0x12
    2d12:	90 93 4d 02 	sts	0x024D, r25
    2d16:	80 93 4c 02 	sts	0x024C, r24
    2d1a:	64 96       	adiw	r28, 0x14	; 20
    2d1c:	0f b6       	in	r0, 0x3f	; 63
    2d1e:	f8 94       	cli
    2d20:	de bf       	out	0x3e, r29	; 62
    2d22:	0f be       	out	0x3f, r0	; 63
    2d24:	cd bf       	out	0x3d, r28	; 61
    2d26:	cf 91       	pop	r28
    2d28:	df 91       	pop	r29
    2d2a:	08 95       	ret

00002d2c <pwm_rampDown2A>:
    2d2c:	df 93       	push	r29
    2d2e:	cf 93       	push	r28
    2d30:	cd b7       	in	r28, 0x3d	; 61
    2d32:	de b7       	in	r29, 0x3e	; 62
    2d34:	64 97       	sbiw	r28, 0x14	; 20
    2d36:	0f b6       	in	r0, 0x3f	; 63
    2d38:	f8 94       	cli
    2d3a:	de bf       	out	0x3e, r29	; 62
    2d3c:	0f be       	out	0x3f, r0	; 63
    2d3e:	cd bf       	out	0x3d, r28	; 61
    2d40:	9a 8b       	std	Y+18, r25	; 0x12
    2d42:	89 8b       	std	Y+17, r24	; 0x11
    2d44:	7c 8b       	std	Y+20, r23	; 0x14
    2d46:	6b 8b       	std	Y+19, r22	; 0x13
    2d48:	89 89       	ldd	r24, Y+17	; 0x11
    2d4a:	9a 89       	ldd	r25, Y+18	; 0x12
    2d4c:	00 97       	sbiw	r24, 0x00	; 0
    2d4e:	29 f4       	brne	.+10     	; 0x2d5a <pwm_rampDown2A+0x2e>
    2d50:	80 e0       	ldi	r24, 0x00	; 0
    2d52:	90 e0       	ldi	r25, 0x00	; 0
    2d54:	0e 94 4c 14 	call	0x2898	; 0x2898 <pwm2A>
    2d58:	98 c0       	rjmp	.+304    	; 0x2e8a <pwm_rampDown2A+0x15e>
    2d5a:	a0 eb       	ldi	r26, 0xB0	; 176
    2d5c:	b0 e0       	ldi	r27, 0x00	; 0
    2d5e:	e0 eb       	ldi	r30, 0xB0	; 176
    2d60:	f0 e0       	ldi	r31, 0x00	; 0
    2d62:	80 81       	ld	r24, Z
    2d64:	80 68       	ori	r24, 0x80	; 128
    2d66:	8c 93       	st	X, r24
    2d68:	80 91 4c 02 	lds	r24, 0x024C
    2d6c:	90 91 4d 02 	lds	r25, 0x024D
    2d70:	98 8b       	std	Y+16, r25	; 0x10
    2d72:	8f 87       	std	Y+15, r24	; 0x0f
    2d74:	82 c0       	rjmp	.+260    	; 0x2e7a <pwm_rampDown2A+0x14e>
    2d76:	e3 eb       	ldi	r30, 0xB3	; 179
    2d78:	f0 e0       	ldi	r31, 0x00	; 0
    2d7a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d7c:	80 83       	st	Z, r24
    2d7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d80:	98 89       	ldd	r25, Y+16	; 0x10
    2d82:	01 97       	sbiw	r24, 0x01	; 1
    2d84:	98 8b       	std	Y+16, r25	; 0x10
    2d86:	8f 87       	std	Y+15, r24	; 0x0f
    2d88:	8b 89       	ldd	r24, Y+19	; 0x13
    2d8a:	9c 89       	ldd	r25, Y+20	; 0x14
    2d8c:	cc 01       	movw	r24, r24
    2d8e:	a0 e0       	ldi	r26, 0x00	; 0
    2d90:	b0 e0       	ldi	r27, 0x00	; 0
    2d92:	bc 01       	movw	r22, r24
    2d94:	cd 01       	movw	r24, r26
    2d96:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2d9a:	dc 01       	movw	r26, r24
    2d9c:	cb 01       	movw	r24, r22
    2d9e:	8b 87       	std	Y+11, r24	; 0x0b
    2da0:	9c 87       	std	Y+12, r25	; 0x0c
    2da2:	ad 87       	std	Y+13, r26	; 0x0d
    2da4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2da6:	6b 85       	ldd	r22, Y+11	; 0x0b
    2da8:	7c 85       	ldd	r23, Y+12	; 0x0c
    2daa:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dac:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dae:	20 e0       	ldi	r18, 0x00	; 0
    2db0:	30 e0       	ldi	r19, 0x00	; 0
    2db2:	4a e7       	ldi	r20, 0x7A	; 122
    2db4:	55 e4       	ldi	r21, 0x45	; 69
    2db6:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2dba:	dc 01       	movw	r26, r24
    2dbc:	cb 01       	movw	r24, r22
    2dbe:	8f 83       	std	Y+7, r24	; 0x07
    2dc0:	98 87       	std	Y+8, r25	; 0x08
    2dc2:	a9 87       	std	Y+9, r26	; 0x09
    2dc4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2dc6:	6f 81       	ldd	r22, Y+7	; 0x07
    2dc8:	78 85       	ldd	r23, Y+8	; 0x08
    2dca:	89 85       	ldd	r24, Y+9	; 0x09
    2dcc:	9a 85       	ldd	r25, Y+10	; 0x0a
    2dce:	20 e0       	ldi	r18, 0x00	; 0
    2dd0:	30 e0       	ldi	r19, 0x00	; 0
    2dd2:	40 e8       	ldi	r20, 0x80	; 128
    2dd4:	5f e3       	ldi	r21, 0x3F	; 63
    2dd6:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2dda:	88 23       	and	r24, r24
    2ddc:	2c f4       	brge	.+10     	; 0x2de8 <pwm_rampDown2A+0xbc>
		__ticks = 1;
    2dde:	81 e0       	ldi	r24, 0x01	; 1
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	9e 83       	std	Y+6, r25	; 0x06
    2de4:	8d 83       	std	Y+5, r24	; 0x05
    2de6:	3f c0       	rjmp	.+126    	; 0x2e66 <pwm_rampDown2A+0x13a>
	else if (__tmp > 65535)
    2de8:	6f 81       	ldd	r22, Y+7	; 0x07
    2dea:	78 85       	ldd	r23, Y+8	; 0x08
    2dec:	89 85       	ldd	r24, Y+9	; 0x09
    2dee:	9a 85       	ldd	r25, Y+10	; 0x0a
    2df0:	20 e0       	ldi	r18, 0x00	; 0
    2df2:	3f ef       	ldi	r19, 0xFF	; 255
    2df4:	4f e7       	ldi	r20, 0x7F	; 127
    2df6:	57 e4       	ldi	r21, 0x47	; 71
    2df8:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2dfc:	18 16       	cp	r1, r24
    2dfe:	4c f5       	brge	.+82     	; 0x2e52 <pwm_rampDown2A+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e00:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e02:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e04:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e06:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e08:	20 e0       	ldi	r18, 0x00	; 0
    2e0a:	30 e0       	ldi	r19, 0x00	; 0
    2e0c:	40 e2       	ldi	r20, 0x20	; 32
    2e0e:	51 e4       	ldi	r21, 0x41	; 65
    2e10:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2e14:	dc 01       	movw	r26, r24
    2e16:	cb 01       	movw	r24, r22
    2e18:	bc 01       	movw	r22, r24
    2e1a:	cd 01       	movw	r24, r26
    2e1c:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2e20:	dc 01       	movw	r26, r24
    2e22:	cb 01       	movw	r24, r22
    2e24:	9e 83       	std	Y+6, r25	; 0x06
    2e26:	8d 83       	std	Y+5, r24	; 0x05
    2e28:	0f c0       	rjmp	.+30     	; 0x2e48 <pwm_rampDown2A+0x11c>
    2e2a:	80 e9       	ldi	r24, 0x90	; 144
    2e2c:	91 e0       	ldi	r25, 0x01	; 1
    2e2e:	9c 83       	std	Y+4, r25	; 0x04
    2e30:	8b 83       	std	Y+3, r24	; 0x03
    2e32:	8b 81       	ldd	r24, Y+3	; 0x03
    2e34:	9c 81       	ldd	r25, Y+4	; 0x04
    2e36:	01 97       	sbiw	r24, 0x01	; 1
    2e38:	f1 f7       	brne	.-4      	; 0x2e36 <pwm_rampDown2A+0x10a>
    2e3a:	9c 83       	std	Y+4, r25	; 0x04
    2e3c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e3e:	8d 81       	ldd	r24, Y+5	; 0x05
    2e40:	9e 81       	ldd	r25, Y+6	; 0x06
    2e42:	01 97       	sbiw	r24, 0x01	; 1
    2e44:	9e 83       	std	Y+6, r25	; 0x06
    2e46:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e48:	8d 81       	ldd	r24, Y+5	; 0x05
    2e4a:	9e 81       	ldd	r25, Y+6	; 0x06
    2e4c:	00 97       	sbiw	r24, 0x00	; 0
    2e4e:	69 f7       	brne	.-38     	; 0x2e2a <pwm_rampDown2A+0xfe>
    2e50:	14 c0       	rjmp	.+40     	; 0x2e7a <pwm_rampDown2A+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e52:	6f 81       	ldd	r22, Y+7	; 0x07
    2e54:	78 85       	ldd	r23, Y+8	; 0x08
    2e56:	89 85       	ldd	r24, Y+9	; 0x09
    2e58:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e5a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2e5e:	dc 01       	movw	r26, r24
    2e60:	cb 01       	movw	r24, r22
    2e62:	9e 83       	std	Y+6, r25	; 0x06
    2e64:	8d 83       	std	Y+5, r24	; 0x05
    2e66:	8d 81       	ldd	r24, Y+5	; 0x05
    2e68:	9e 81       	ldd	r25, Y+6	; 0x06
    2e6a:	9a 83       	std	Y+2, r25	; 0x02
    2e6c:	89 83       	std	Y+1, r24	; 0x01
    2e6e:	89 81       	ldd	r24, Y+1	; 0x01
    2e70:	9a 81       	ldd	r25, Y+2	; 0x02
    2e72:	01 97       	sbiw	r24, 0x01	; 1
    2e74:	f1 f7       	brne	.-4      	; 0x2e72 <pwm_rampDown2A+0x146>
    2e76:	9a 83       	std	Y+2, r25	; 0x02
    2e78:	89 83       	std	Y+1, r24	; 0x01
    2e7a:	2f 85       	ldd	r18, Y+15	; 0x0f
    2e7c:	38 89       	ldd	r19, Y+16	; 0x10
    2e7e:	89 89       	ldd	r24, Y+17	; 0x11
    2e80:	9a 89       	ldd	r25, Y+18	; 0x12
    2e82:	28 17       	cp	r18, r24
    2e84:	39 07       	cpc	r19, r25
    2e86:	08 f0       	brcs	.+2      	; 0x2e8a <pwm_rampDown2A+0x15e>
    2e88:	76 cf       	rjmp	.-276    	; 0x2d76 <pwm_rampDown2A+0x4a>
    2e8a:	89 89       	ldd	r24, Y+17	; 0x11
    2e8c:	9a 89       	ldd	r25, Y+18	; 0x12
    2e8e:	90 93 4d 02 	sts	0x024D, r25
    2e92:	80 93 4c 02 	sts	0x024C, r24
    2e96:	64 96       	adiw	r28, 0x14	; 20
    2e98:	0f b6       	in	r0, 0x3f	; 63
    2e9a:	f8 94       	cli
    2e9c:	de bf       	out	0x3e, r29	; 62
    2e9e:	0f be       	out	0x3f, r0	; 63
    2ea0:	cd bf       	out	0x3d, r28	; 61
    2ea2:	cf 91       	pop	r28
    2ea4:	df 91       	pop	r29
    2ea6:	08 95       	ret

00002ea8 <pwm_ramp2B>:
    2ea8:	df 93       	push	r29
    2eaa:	cf 93       	push	r28
    2eac:	cd b7       	in	r28, 0x3d	; 61
    2eae:	de b7       	in	r29, 0x3e	; 62
    2eb0:	a4 97       	sbiw	r28, 0x24	; 36
    2eb2:	0f b6       	in	r0, 0x3f	; 63
    2eb4:	f8 94       	cli
    2eb6:	de bf       	out	0x3e, r29	; 62
    2eb8:	0f be       	out	0x3f, r0	; 63
    2eba:	cd bf       	out	0x3d, r28	; 61
    2ebc:	9a a3       	std	Y+34, r25	; 0x22
    2ebe:	89 a3       	std	Y+33, r24	; 0x21
    2ec0:	7c a3       	std	Y+36, r23	; 0x24
    2ec2:	6b a3       	std	Y+35, r22	; 0x23
    2ec4:	89 a1       	ldd	r24, Y+33	; 0x21
    2ec6:	9a a1       	ldd	r25, Y+34	; 0x22
    2ec8:	00 97       	sbiw	r24, 0x00	; 0
    2eca:	21 f4       	brne	.+8      	; 0x2ed4 <pwm_ramp2B+0x2c>
    2ecc:	81 e0       	ldi	r24, 0x01	; 1
    2ece:	90 e0       	ldi	r25, 0x00	; 0
    2ed0:	9a a3       	std	Y+34, r25	; 0x22
    2ed2:	89 a3       	std	Y+33, r24	; 0x21
    2ed4:	20 91 54 02 	lds	r18, 0x0254
    2ed8:	30 91 55 02 	lds	r19, 0x0255
    2edc:	89 a1       	ldd	r24, Y+33	; 0x21
    2ede:	9a a1       	ldd	r25, Y+34	; 0x22
    2ee0:	28 17       	cp	r18, r24
    2ee2:	39 07       	cpc	r19, r25
    2ee4:	08 f0       	brcs	.+2      	; 0x2ee8 <pwm_ramp2B+0x40>
    2ee6:	9f c0       	rjmp	.+318    	; 0x3026 <pwm_ramp2B+0x17e>
    2ee8:	a0 eb       	ldi	r26, 0xB0	; 176
    2eea:	b0 e0       	ldi	r27, 0x00	; 0
    2eec:	e0 eb       	ldi	r30, 0xB0	; 176
    2eee:	f0 e0       	ldi	r31, 0x00	; 0
    2ef0:	80 81       	ld	r24, Z
    2ef2:	80 62       	ori	r24, 0x20	; 32
    2ef4:	8c 93       	st	X, r24
    2ef6:	80 91 54 02 	lds	r24, 0x0254
    2efa:	90 91 55 02 	lds	r25, 0x0255
    2efe:	98 a3       	std	Y+32, r25	; 0x20
    2f00:	8f 8f       	std	Y+31, r24	; 0x1f
    2f02:	82 c0       	rjmp	.+260    	; 0x3008 <pwm_ramp2B+0x160>
    2f04:	e4 eb       	ldi	r30, 0xB4	; 180
    2f06:	f0 e0       	ldi	r31, 0x00	; 0
    2f08:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f0a:	80 83       	st	Z, r24
    2f0c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2f0e:	98 a1       	ldd	r25, Y+32	; 0x20
    2f10:	01 96       	adiw	r24, 0x01	; 1
    2f12:	98 a3       	std	Y+32, r25	; 0x20
    2f14:	8f 8f       	std	Y+31, r24	; 0x1f
    2f16:	8b a1       	ldd	r24, Y+35	; 0x23
    2f18:	9c a1       	ldd	r25, Y+36	; 0x24
    2f1a:	cc 01       	movw	r24, r24
    2f1c:	a0 e0       	ldi	r26, 0x00	; 0
    2f1e:	b0 e0       	ldi	r27, 0x00	; 0
    2f20:	bc 01       	movw	r22, r24
    2f22:	cd 01       	movw	r24, r26
    2f24:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    2f28:	dc 01       	movw	r26, r24
    2f2a:	cb 01       	movw	r24, r22
    2f2c:	89 8f       	std	Y+25, r24	; 0x19
    2f2e:	9a 8f       	std	Y+26, r25	; 0x1a
    2f30:	ab 8f       	std	Y+27, r26	; 0x1b
    2f32:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f34:	69 8d       	ldd	r22, Y+25	; 0x19
    2f36:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f38:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f3a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f3c:	20 e0       	ldi	r18, 0x00	; 0
    2f3e:	30 e0       	ldi	r19, 0x00	; 0
    2f40:	4a e7       	ldi	r20, 0x7A	; 122
    2f42:	55 e4       	ldi	r21, 0x45	; 69
    2f44:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2f48:	dc 01       	movw	r26, r24
    2f4a:	cb 01       	movw	r24, r22
    2f4c:	8d 8b       	std	Y+21, r24	; 0x15
    2f4e:	9e 8b       	std	Y+22, r25	; 0x16
    2f50:	af 8b       	std	Y+23, r26	; 0x17
    2f52:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2f54:	6d 89       	ldd	r22, Y+21	; 0x15
    2f56:	7e 89       	ldd	r23, Y+22	; 0x16
    2f58:	8f 89       	ldd	r24, Y+23	; 0x17
    2f5a:	98 8d       	ldd	r25, Y+24	; 0x18
    2f5c:	20 e0       	ldi	r18, 0x00	; 0
    2f5e:	30 e0       	ldi	r19, 0x00	; 0
    2f60:	40 e8       	ldi	r20, 0x80	; 128
    2f62:	5f e3       	ldi	r21, 0x3F	; 63
    2f64:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    2f68:	88 23       	and	r24, r24
    2f6a:	2c f4       	brge	.+10     	; 0x2f76 <pwm_ramp2B+0xce>
		__ticks = 1;
    2f6c:	81 e0       	ldi	r24, 0x01	; 1
    2f6e:	90 e0       	ldi	r25, 0x00	; 0
    2f70:	9c 8b       	std	Y+20, r25	; 0x14
    2f72:	8b 8b       	std	Y+19, r24	; 0x13
    2f74:	3f c0       	rjmp	.+126    	; 0x2ff4 <pwm_ramp2B+0x14c>
	else if (__tmp > 65535)
    2f76:	6d 89       	ldd	r22, Y+21	; 0x15
    2f78:	7e 89       	ldd	r23, Y+22	; 0x16
    2f7a:	8f 89       	ldd	r24, Y+23	; 0x17
    2f7c:	98 8d       	ldd	r25, Y+24	; 0x18
    2f7e:	20 e0       	ldi	r18, 0x00	; 0
    2f80:	3f ef       	ldi	r19, 0xFF	; 255
    2f82:	4f e7       	ldi	r20, 0x7F	; 127
    2f84:	57 e4       	ldi	r21, 0x47	; 71
    2f86:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    2f8a:	18 16       	cp	r1, r24
    2f8c:	4c f5       	brge	.+82     	; 0x2fe0 <pwm_ramp2B+0x138>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f8e:	69 8d       	ldd	r22, Y+25	; 0x19
    2f90:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f92:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f94:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f96:	20 e0       	ldi	r18, 0x00	; 0
    2f98:	30 e0       	ldi	r19, 0x00	; 0
    2f9a:	40 e2       	ldi	r20, 0x20	; 32
    2f9c:	51 e4       	ldi	r21, 0x41	; 65
    2f9e:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	cb 01       	movw	r24, r22
    2fa6:	bc 01       	movw	r22, r24
    2fa8:	cd 01       	movw	r24, r26
    2faa:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2fae:	dc 01       	movw	r26, r24
    2fb0:	cb 01       	movw	r24, r22
    2fb2:	9c 8b       	std	Y+20, r25	; 0x14
    2fb4:	8b 8b       	std	Y+19, r24	; 0x13
    2fb6:	0f c0       	rjmp	.+30     	; 0x2fd6 <pwm_ramp2B+0x12e>
    2fb8:	80 e9       	ldi	r24, 0x90	; 144
    2fba:	91 e0       	ldi	r25, 0x01	; 1
    2fbc:	9a 8b       	std	Y+18, r25	; 0x12
    2fbe:	89 8b       	std	Y+17, r24	; 0x11
    2fc0:	89 89       	ldd	r24, Y+17	; 0x11
    2fc2:	9a 89       	ldd	r25, Y+18	; 0x12
    2fc4:	01 97       	sbiw	r24, 0x01	; 1
    2fc6:	f1 f7       	brne	.-4      	; 0x2fc4 <pwm_ramp2B+0x11c>
    2fc8:	9a 8b       	std	Y+18, r25	; 0x12
    2fca:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fcc:	8b 89       	ldd	r24, Y+19	; 0x13
    2fce:	9c 89       	ldd	r25, Y+20	; 0x14
    2fd0:	01 97       	sbiw	r24, 0x01	; 1
    2fd2:	9c 8b       	std	Y+20, r25	; 0x14
    2fd4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fd6:	8b 89       	ldd	r24, Y+19	; 0x13
    2fd8:	9c 89       	ldd	r25, Y+20	; 0x14
    2fda:	00 97       	sbiw	r24, 0x00	; 0
    2fdc:	69 f7       	brne	.-38     	; 0x2fb8 <pwm_ramp2B+0x110>
    2fde:	14 c0       	rjmp	.+40     	; 0x3008 <pwm_ramp2B+0x160>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fe0:	6d 89       	ldd	r22, Y+21	; 0x15
    2fe2:	7e 89       	ldd	r23, Y+22	; 0x16
    2fe4:	8f 89       	ldd	r24, Y+23	; 0x17
    2fe6:	98 8d       	ldd	r25, Y+24	; 0x18
    2fe8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    2fec:	dc 01       	movw	r26, r24
    2fee:	cb 01       	movw	r24, r22
    2ff0:	9c 8b       	std	Y+20, r25	; 0x14
    2ff2:	8b 8b       	std	Y+19, r24	; 0x13
    2ff4:	8b 89       	ldd	r24, Y+19	; 0x13
    2ff6:	9c 89       	ldd	r25, Y+20	; 0x14
    2ff8:	98 8b       	std	Y+16, r25	; 0x10
    2ffa:	8f 87       	std	Y+15, r24	; 0x0f
    2ffc:	8f 85       	ldd	r24, Y+15	; 0x0f
    2ffe:	98 89       	ldd	r25, Y+16	; 0x10
    3000:	01 97       	sbiw	r24, 0x01	; 1
    3002:	f1 f7       	brne	.-4      	; 0x3000 <pwm_ramp2B+0x158>
    3004:	98 8b       	std	Y+16, r25	; 0x10
    3006:	8f 87       	std	Y+15, r24	; 0x0f
    3008:	2f 8d       	ldd	r18, Y+31	; 0x1f
    300a:	38 a1       	ldd	r19, Y+32	; 0x20
    300c:	89 a1       	ldd	r24, Y+33	; 0x21
    300e:	9a a1       	ldd	r25, Y+34	; 0x22
    3010:	82 17       	cp	r24, r18
    3012:	93 07       	cpc	r25, r19
    3014:	08 f0       	brcs	.+2      	; 0x3018 <pwm_ramp2B+0x170>
    3016:	76 cf       	rjmp	.-276    	; 0x2f04 <pwm_ramp2B+0x5c>
    3018:	89 a1       	ldd	r24, Y+33	; 0x21
    301a:	9a a1       	ldd	r25, Y+34	; 0x22
    301c:	90 93 55 02 	sts	0x0255, r25
    3020:	80 93 54 02 	sts	0x0254, r24
    3024:	9e c0       	rjmp	.+316    	; 0x3162 <pwm_ramp2B+0x2ba>
    3026:	a0 eb       	ldi	r26, 0xB0	; 176
    3028:	b0 e0       	ldi	r27, 0x00	; 0
    302a:	e0 eb       	ldi	r30, 0xB0	; 176
    302c:	f0 e0       	ldi	r31, 0x00	; 0
    302e:	80 81       	ld	r24, Z
    3030:	80 62       	ori	r24, 0x20	; 32
    3032:	8c 93       	st	X, r24
    3034:	80 91 54 02 	lds	r24, 0x0254
    3038:	90 91 55 02 	lds	r25, 0x0255
    303c:	9e 8f       	std	Y+30, r25	; 0x1e
    303e:	8d 8f       	std	Y+29, r24	; 0x1d
    3040:	82 c0       	rjmp	.+260    	; 0x3146 <pwm_ramp2B+0x29e>
    3042:	e4 eb       	ldi	r30, 0xB4	; 180
    3044:	f0 e0       	ldi	r31, 0x00	; 0
    3046:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3048:	80 83       	st	Z, r24
    304a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    304c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    304e:	01 97       	sbiw	r24, 0x01	; 1
    3050:	9e 8f       	std	Y+30, r25	; 0x1e
    3052:	8d 8f       	std	Y+29, r24	; 0x1d
    3054:	8b a1       	ldd	r24, Y+35	; 0x23
    3056:	9c a1       	ldd	r25, Y+36	; 0x24
    3058:	cc 01       	movw	r24, r24
    305a:	a0 e0       	ldi	r26, 0x00	; 0
    305c:	b0 e0       	ldi	r27, 0x00	; 0
    305e:	bc 01       	movw	r22, r24
    3060:	cd 01       	movw	r24, r26
    3062:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    3066:	dc 01       	movw	r26, r24
    3068:	cb 01       	movw	r24, r22
    306a:	8b 87       	std	Y+11, r24	; 0x0b
    306c:	9c 87       	std	Y+12, r25	; 0x0c
    306e:	ad 87       	std	Y+13, r26	; 0x0d
    3070:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3072:	6b 85       	ldd	r22, Y+11	; 0x0b
    3074:	7c 85       	ldd	r23, Y+12	; 0x0c
    3076:	8d 85       	ldd	r24, Y+13	; 0x0d
    3078:	9e 85       	ldd	r25, Y+14	; 0x0e
    307a:	20 e0       	ldi	r18, 0x00	; 0
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	4a e7       	ldi	r20, 0x7A	; 122
    3080:	55 e4       	ldi	r21, 0x45	; 69
    3082:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    3086:	dc 01       	movw	r26, r24
    3088:	cb 01       	movw	r24, r22
    308a:	8f 83       	std	Y+7, r24	; 0x07
    308c:	98 87       	std	Y+8, r25	; 0x08
    308e:	a9 87       	std	Y+9, r26	; 0x09
    3090:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3092:	6f 81       	ldd	r22, Y+7	; 0x07
    3094:	78 85       	ldd	r23, Y+8	; 0x08
    3096:	89 85       	ldd	r24, Y+9	; 0x09
    3098:	9a 85       	ldd	r25, Y+10	; 0x0a
    309a:	20 e0       	ldi	r18, 0x00	; 0
    309c:	30 e0       	ldi	r19, 0x00	; 0
    309e:	40 e8       	ldi	r20, 0x80	; 128
    30a0:	5f e3       	ldi	r21, 0x3F	; 63
    30a2:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    30a6:	88 23       	and	r24, r24
    30a8:	2c f4       	brge	.+10     	; 0x30b4 <pwm_ramp2B+0x20c>
		__ticks = 1;
    30aa:	81 e0       	ldi	r24, 0x01	; 1
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	9e 83       	std	Y+6, r25	; 0x06
    30b0:	8d 83       	std	Y+5, r24	; 0x05
    30b2:	3f c0       	rjmp	.+126    	; 0x3132 <pwm_ramp2B+0x28a>
	else if (__tmp > 65535)
    30b4:	6f 81       	ldd	r22, Y+7	; 0x07
    30b6:	78 85       	ldd	r23, Y+8	; 0x08
    30b8:	89 85       	ldd	r24, Y+9	; 0x09
    30ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    30bc:	20 e0       	ldi	r18, 0x00	; 0
    30be:	3f ef       	ldi	r19, 0xFF	; 255
    30c0:	4f e7       	ldi	r20, 0x7F	; 127
    30c2:	57 e4       	ldi	r21, 0x47	; 71
    30c4:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    30c8:	18 16       	cp	r1, r24
    30ca:	4c f5       	brge	.+82     	; 0x311e <pwm_ramp2B+0x276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    30ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    30d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    30d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    30d4:	20 e0       	ldi	r18, 0x00	; 0
    30d6:	30 e0       	ldi	r19, 0x00	; 0
    30d8:	40 e2       	ldi	r20, 0x20	; 32
    30da:	51 e4       	ldi	r21, 0x41	; 65
    30dc:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    30e0:	dc 01       	movw	r26, r24
    30e2:	cb 01       	movw	r24, r22
    30e4:	bc 01       	movw	r22, r24
    30e6:	cd 01       	movw	r24, r26
    30e8:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    30ec:	dc 01       	movw	r26, r24
    30ee:	cb 01       	movw	r24, r22
    30f0:	9e 83       	std	Y+6, r25	; 0x06
    30f2:	8d 83       	std	Y+5, r24	; 0x05
    30f4:	0f c0       	rjmp	.+30     	; 0x3114 <pwm_ramp2B+0x26c>
    30f6:	80 e9       	ldi	r24, 0x90	; 144
    30f8:	91 e0       	ldi	r25, 0x01	; 1
    30fa:	9c 83       	std	Y+4, r25	; 0x04
    30fc:	8b 83       	std	Y+3, r24	; 0x03
    30fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3100:	9c 81       	ldd	r25, Y+4	; 0x04
    3102:	01 97       	sbiw	r24, 0x01	; 1
    3104:	f1 f7       	brne	.-4      	; 0x3102 <pwm_ramp2B+0x25a>
    3106:	9c 83       	std	Y+4, r25	; 0x04
    3108:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    310a:	8d 81       	ldd	r24, Y+5	; 0x05
    310c:	9e 81       	ldd	r25, Y+6	; 0x06
    310e:	01 97       	sbiw	r24, 0x01	; 1
    3110:	9e 83       	std	Y+6, r25	; 0x06
    3112:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3114:	8d 81       	ldd	r24, Y+5	; 0x05
    3116:	9e 81       	ldd	r25, Y+6	; 0x06
    3118:	00 97       	sbiw	r24, 0x00	; 0
    311a:	69 f7       	brne	.-38     	; 0x30f6 <pwm_ramp2B+0x24e>
    311c:	14 c0       	rjmp	.+40     	; 0x3146 <pwm_ramp2B+0x29e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    311e:	6f 81       	ldd	r22, Y+7	; 0x07
    3120:	78 85       	ldd	r23, Y+8	; 0x08
    3122:	89 85       	ldd	r24, Y+9	; 0x09
    3124:	9a 85       	ldd	r25, Y+10	; 0x0a
    3126:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    312a:	dc 01       	movw	r26, r24
    312c:	cb 01       	movw	r24, r22
    312e:	9e 83       	std	Y+6, r25	; 0x06
    3130:	8d 83       	std	Y+5, r24	; 0x05
    3132:	8d 81       	ldd	r24, Y+5	; 0x05
    3134:	9e 81       	ldd	r25, Y+6	; 0x06
    3136:	9a 83       	std	Y+2, r25	; 0x02
    3138:	89 83       	std	Y+1, r24	; 0x01
    313a:	89 81       	ldd	r24, Y+1	; 0x01
    313c:	9a 81       	ldd	r25, Y+2	; 0x02
    313e:	01 97       	sbiw	r24, 0x01	; 1
    3140:	f1 f7       	brne	.-4      	; 0x313e <pwm_ramp2B+0x296>
    3142:	9a 83       	std	Y+2, r25	; 0x02
    3144:	89 83       	std	Y+1, r24	; 0x01
    3146:	2d 8d       	ldd	r18, Y+29	; 0x1d
    3148:	3e 8d       	ldd	r19, Y+30	; 0x1e
    314a:	89 a1       	ldd	r24, Y+33	; 0x21
    314c:	9a a1       	ldd	r25, Y+34	; 0x22
    314e:	28 17       	cp	r18, r24
    3150:	39 07       	cpc	r19, r25
    3152:	08 f0       	brcs	.+2      	; 0x3156 <pwm_ramp2B+0x2ae>
    3154:	76 cf       	rjmp	.-276    	; 0x3042 <pwm_ramp2B+0x19a>
    3156:	89 a1       	ldd	r24, Y+33	; 0x21
    3158:	9a a1       	ldd	r25, Y+34	; 0x22
    315a:	90 93 55 02 	sts	0x0255, r25
    315e:	80 93 54 02 	sts	0x0254, r24
    3162:	a4 96       	adiw	r28, 0x24	; 36
    3164:	0f b6       	in	r0, 0x3f	; 63
    3166:	f8 94       	cli
    3168:	de bf       	out	0x3e, r29	; 62
    316a:	0f be       	out	0x3f, r0	; 63
    316c:	cd bf       	out	0x3d, r28	; 61
    316e:	cf 91       	pop	r28
    3170:	df 91       	pop	r29
    3172:	08 95       	ret

00003174 <pwm_rampUp2B>:
    3174:	df 93       	push	r29
    3176:	cf 93       	push	r28
    3178:	cd b7       	in	r28, 0x3d	; 61
    317a:	de b7       	in	r29, 0x3e	; 62
    317c:	64 97       	sbiw	r28, 0x14	; 20
    317e:	0f b6       	in	r0, 0x3f	; 63
    3180:	f8 94       	cli
    3182:	de bf       	out	0x3e, r29	; 62
    3184:	0f be       	out	0x3f, r0	; 63
    3186:	cd bf       	out	0x3d, r28	; 61
    3188:	9a 8b       	std	Y+18, r25	; 0x12
    318a:	89 8b       	std	Y+17, r24	; 0x11
    318c:	7c 8b       	std	Y+20, r23	; 0x14
    318e:	6b 8b       	std	Y+19, r22	; 0x13
    3190:	a0 eb       	ldi	r26, 0xB0	; 176
    3192:	b0 e0       	ldi	r27, 0x00	; 0
    3194:	e0 eb       	ldi	r30, 0xB0	; 176
    3196:	f0 e0       	ldi	r31, 0x00	; 0
    3198:	80 81       	ld	r24, Z
    319a:	80 62       	ori	r24, 0x20	; 32
    319c:	8c 93       	st	X, r24
    319e:	80 91 54 02 	lds	r24, 0x0254
    31a2:	90 91 55 02 	lds	r25, 0x0255
    31a6:	98 8b       	std	Y+16, r25	; 0x10
    31a8:	8f 87       	std	Y+15, r24	; 0x0f
    31aa:	82 c0       	rjmp	.+260    	; 0x32b0 <pwm_rampUp2B+0x13c>
    31ac:	e4 eb       	ldi	r30, 0xB4	; 180
    31ae:	f0 e0       	ldi	r31, 0x00	; 0
    31b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    31b2:	80 83       	st	Z, r24
    31b4:	8f 85       	ldd	r24, Y+15	; 0x0f
    31b6:	98 89       	ldd	r25, Y+16	; 0x10
    31b8:	01 96       	adiw	r24, 0x01	; 1
    31ba:	98 8b       	std	Y+16, r25	; 0x10
    31bc:	8f 87       	std	Y+15, r24	; 0x0f
    31be:	8b 89       	ldd	r24, Y+19	; 0x13
    31c0:	9c 89       	ldd	r25, Y+20	; 0x14
    31c2:	cc 01       	movw	r24, r24
    31c4:	a0 e0       	ldi	r26, 0x00	; 0
    31c6:	b0 e0       	ldi	r27, 0x00	; 0
    31c8:	bc 01       	movw	r22, r24
    31ca:	cd 01       	movw	r24, r26
    31cc:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    31d0:	dc 01       	movw	r26, r24
    31d2:	cb 01       	movw	r24, r22
    31d4:	8b 87       	std	Y+11, r24	; 0x0b
    31d6:	9c 87       	std	Y+12, r25	; 0x0c
    31d8:	ad 87       	std	Y+13, r26	; 0x0d
    31da:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    31dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    31de:	7c 85       	ldd	r23, Y+12	; 0x0c
    31e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    31e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    31e4:	20 e0       	ldi	r18, 0x00	; 0
    31e6:	30 e0       	ldi	r19, 0x00	; 0
    31e8:	4a e7       	ldi	r20, 0x7A	; 122
    31ea:	55 e4       	ldi	r21, 0x45	; 69
    31ec:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    31f0:	dc 01       	movw	r26, r24
    31f2:	cb 01       	movw	r24, r22
    31f4:	8f 83       	std	Y+7, r24	; 0x07
    31f6:	98 87       	std	Y+8, r25	; 0x08
    31f8:	a9 87       	std	Y+9, r26	; 0x09
    31fa:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    31fc:	6f 81       	ldd	r22, Y+7	; 0x07
    31fe:	78 85       	ldd	r23, Y+8	; 0x08
    3200:	89 85       	ldd	r24, Y+9	; 0x09
    3202:	9a 85       	ldd	r25, Y+10	; 0x0a
    3204:	20 e0       	ldi	r18, 0x00	; 0
    3206:	30 e0       	ldi	r19, 0x00	; 0
    3208:	40 e8       	ldi	r20, 0x80	; 128
    320a:	5f e3       	ldi	r21, 0x3F	; 63
    320c:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    3210:	88 23       	and	r24, r24
    3212:	2c f4       	brge	.+10     	; 0x321e <pwm_rampUp2B+0xaa>
		__ticks = 1;
    3214:	81 e0       	ldi	r24, 0x01	; 1
    3216:	90 e0       	ldi	r25, 0x00	; 0
    3218:	9e 83       	std	Y+6, r25	; 0x06
    321a:	8d 83       	std	Y+5, r24	; 0x05
    321c:	3f c0       	rjmp	.+126    	; 0x329c <pwm_rampUp2B+0x128>
	else if (__tmp > 65535)
    321e:	6f 81       	ldd	r22, Y+7	; 0x07
    3220:	78 85       	ldd	r23, Y+8	; 0x08
    3222:	89 85       	ldd	r24, Y+9	; 0x09
    3224:	9a 85       	ldd	r25, Y+10	; 0x0a
    3226:	20 e0       	ldi	r18, 0x00	; 0
    3228:	3f ef       	ldi	r19, 0xFF	; 255
    322a:	4f e7       	ldi	r20, 0x7F	; 127
    322c:	57 e4       	ldi	r21, 0x47	; 71
    322e:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    3232:	18 16       	cp	r1, r24
    3234:	4c f5       	brge	.+82     	; 0x3288 <pwm_rampUp2B+0x114>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3236:	6b 85       	ldd	r22, Y+11	; 0x0b
    3238:	7c 85       	ldd	r23, Y+12	; 0x0c
    323a:	8d 85       	ldd	r24, Y+13	; 0x0d
    323c:	9e 85       	ldd	r25, Y+14	; 0x0e
    323e:	20 e0       	ldi	r18, 0x00	; 0
    3240:	30 e0       	ldi	r19, 0x00	; 0
    3242:	40 e2       	ldi	r20, 0x20	; 32
    3244:	51 e4       	ldi	r21, 0x41	; 65
    3246:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    324a:	dc 01       	movw	r26, r24
    324c:	cb 01       	movw	r24, r22
    324e:	bc 01       	movw	r22, r24
    3250:	cd 01       	movw	r24, r26
    3252:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    3256:	dc 01       	movw	r26, r24
    3258:	cb 01       	movw	r24, r22
    325a:	9e 83       	std	Y+6, r25	; 0x06
    325c:	8d 83       	std	Y+5, r24	; 0x05
    325e:	0f c0       	rjmp	.+30     	; 0x327e <pwm_rampUp2B+0x10a>
    3260:	80 e9       	ldi	r24, 0x90	; 144
    3262:	91 e0       	ldi	r25, 0x01	; 1
    3264:	9c 83       	std	Y+4, r25	; 0x04
    3266:	8b 83       	std	Y+3, r24	; 0x03
    3268:	8b 81       	ldd	r24, Y+3	; 0x03
    326a:	9c 81       	ldd	r25, Y+4	; 0x04
    326c:	01 97       	sbiw	r24, 0x01	; 1
    326e:	f1 f7       	brne	.-4      	; 0x326c <pwm_rampUp2B+0xf8>
    3270:	9c 83       	std	Y+4, r25	; 0x04
    3272:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3274:	8d 81       	ldd	r24, Y+5	; 0x05
    3276:	9e 81       	ldd	r25, Y+6	; 0x06
    3278:	01 97       	sbiw	r24, 0x01	; 1
    327a:	9e 83       	std	Y+6, r25	; 0x06
    327c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    327e:	8d 81       	ldd	r24, Y+5	; 0x05
    3280:	9e 81       	ldd	r25, Y+6	; 0x06
    3282:	00 97       	sbiw	r24, 0x00	; 0
    3284:	69 f7       	brne	.-38     	; 0x3260 <pwm_rampUp2B+0xec>
    3286:	14 c0       	rjmp	.+40     	; 0x32b0 <pwm_rampUp2B+0x13c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3288:	6f 81       	ldd	r22, Y+7	; 0x07
    328a:	78 85       	ldd	r23, Y+8	; 0x08
    328c:	89 85       	ldd	r24, Y+9	; 0x09
    328e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3290:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    3294:	dc 01       	movw	r26, r24
    3296:	cb 01       	movw	r24, r22
    3298:	9e 83       	std	Y+6, r25	; 0x06
    329a:	8d 83       	std	Y+5, r24	; 0x05
    329c:	8d 81       	ldd	r24, Y+5	; 0x05
    329e:	9e 81       	ldd	r25, Y+6	; 0x06
    32a0:	9a 83       	std	Y+2, r25	; 0x02
    32a2:	89 83       	std	Y+1, r24	; 0x01
    32a4:	89 81       	ldd	r24, Y+1	; 0x01
    32a6:	9a 81       	ldd	r25, Y+2	; 0x02
    32a8:	01 97       	sbiw	r24, 0x01	; 1
    32aa:	f1 f7       	brne	.-4      	; 0x32a8 <pwm_rampUp2B+0x134>
    32ac:	9a 83       	std	Y+2, r25	; 0x02
    32ae:	89 83       	std	Y+1, r24	; 0x01
    32b0:	2f 85       	ldd	r18, Y+15	; 0x0f
    32b2:	38 89       	ldd	r19, Y+16	; 0x10
    32b4:	89 89       	ldd	r24, Y+17	; 0x11
    32b6:	9a 89       	ldd	r25, Y+18	; 0x12
    32b8:	82 17       	cp	r24, r18
    32ba:	93 07       	cpc	r25, r19
    32bc:	08 f0       	brcs	.+2      	; 0x32c0 <pwm_rampUp2B+0x14c>
    32be:	76 cf       	rjmp	.-276    	; 0x31ac <pwm_rampUp2B+0x38>
    32c0:	89 89       	ldd	r24, Y+17	; 0x11
    32c2:	9a 89       	ldd	r25, Y+18	; 0x12
    32c4:	90 93 55 02 	sts	0x0255, r25
    32c8:	80 93 54 02 	sts	0x0254, r24
    32cc:	64 96       	adiw	r28, 0x14	; 20
    32ce:	0f b6       	in	r0, 0x3f	; 63
    32d0:	f8 94       	cli
    32d2:	de bf       	out	0x3e, r29	; 62
    32d4:	0f be       	out	0x3f, r0	; 63
    32d6:	cd bf       	out	0x3d, r28	; 61
    32d8:	cf 91       	pop	r28
    32da:	df 91       	pop	r29
    32dc:	08 95       	ret

000032de <pwm_rampDown2B>:
    32de:	df 93       	push	r29
    32e0:	cf 93       	push	r28
    32e2:	cd b7       	in	r28, 0x3d	; 61
    32e4:	de b7       	in	r29, 0x3e	; 62
    32e6:	64 97       	sbiw	r28, 0x14	; 20
    32e8:	0f b6       	in	r0, 0x3f	; 63
    32ea:	f8 94       	cli
    32ec:	de bf       	out	0x3e, r29	; 62
    32ee:	0f be       	out	0x3f, r0	; 63
    32f0:	cd bf       	out	0x3d, r28	; 61
    32f2:	9a 8b       	std	Y+18, r25	; 0x12
    32f4:	89 8b       	std	Y+17, r24	; 0x11
    32f6:	7c 8b       	std	Y+20, r23	; 0x14
    32f8:	6b 8b       	std	Y+19, r22	; 0x13
    32fa:	89 89       	ldd	r24, Y+17	; 0x11
    32fc:	9a 89       	ldd	r25, Y+18	; 0x12
    32fe:	00 97       	sbiw	r24, 0x00	; 0
    3300:	21 f4       	brne	.+8      	; 0x330a <pwm_rampDown2B+0x2c>
    3302:	81 e0       	ldi	r24, 0x01	; 1
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	9a 8b       	std	Y+18, r25	; 0x12
    3308:	89 8b       	std	Y+17, r24	; 0x11
    330a:	a0 eb       	ldi	r26, 0xB0	; 176
    330c:	b0 e0       	ldi	r27, 0x00	; 0
    330e:	e0 eb       	ldi	r30, 0xB0	; 176
    3310:	f0 e0       	ldi	r31, 0x00	; 0
    3312:	80 81       	ld	r24, Z
    3314:	80 62       	ori	r24, 0x20	; 32
    3316:	8c 93       	st	X, r24
    3318:	80 91 54 02 	lds	r24, 0x0254
    331c:	90 91 55 02 	lds	r25, 0x0255
    3320:	98 8b       	std	Y+16, r25	; 0x10
    3322:	8f 87       	std	Y+15, r24	; 0x0f
    3324:	82 c0       	rjmp	.+260    	; 0x342a <pwm_rampDown2B+0x14c>
    3326:	e4 eb       	ldi	r30, 0xB4	; 180
    3328:	f0 e0       	ldi	r31, 0x00	; 0
    332a:	8f 85       	ldd	r24, Y+15	; 0x0f
    332c:	80 83       	st	Z, r24
    332e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3330:	98 89       	ldd	r25, Y+16	; 0x10
    3332:	01 97       	sbiw	r24, 0x01	; 1
    3334:	98 8b       	std	Y+16, r25	; 0x10
    3336:	8f 87       	std	Y+15, r24	; 0x0f
    3338:	8b 89       	ldd	r24, Y+19	; 0x13
    333a:	9c 89       	ldd	r25, Y+20	; 0x14
    333c:	cc 01       	movw	r24, r24
    333e:	a0 e0       	ldi	r26, 0x00	; 0
    3340:	b0 e0       	ldi	r27, 0x00	; 0
    3342:	bc 01       	movw	r22, r24
    3344:	cd 01       	movw	r24, r26
    3346:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <__floatunsisf>
    334a:	dc 01       	movw	r26, r24
    334c:	cb 01       	movw	r24, r22
    334e:	8b 87       	std	Y+11, r24	; 0x0b
    3350:	9c 87       	std	Y+12, r25	; 0x0c
    3352:	ad 87       	std	Y+13, r26	; 0x0d
    3354:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3356:	6b 85       	ldd	r22, Y+11	; 0x0b
    3358:	7c 85       	ldd	r23, Y+12	; 0x0c
    335a:	8d 85       	ldd	r24, Y+13	; 0x0d
    335c:	9e 85       	ldd	r25, Y+14	; 0x0e
    335e:	20 e0       	ldi	r18, 0x00	; 0
    3360:	30 e0       	ldi	r19, 0x00	; 0
    3362:	4a e7       	ldi	r20, 0x7A	; 122
    3364:	55 e4       	ldi	r21, 0x45	; 69
    3366:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    336a:	dc 01       	movw	r26, r24
    336c:	cb 01       	movw	r24, r22
    336e:	8f 83       	std	Y+7, r24	; 0x07
    3370:	98 87       	std	Y+8, r25	; 0x08
    3372:	a9 87       	std	Y+9, r26	; 0x09
    3374:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3376:	6f 81       	ldd	r22, Y+7	; 0x07
    3378:	78 85       	ldd	r23, Y+8	; 0x08
    337a:	89 85       	ldd	r24, Y+9	; 0x09
    337c:	9a 85       	ldd	r25, Y+10	; 0x0a
    337e:	20 e0       	ldi	r18, 0x00	; 0
    3380:	30 e0       	ldi	r19, 0x00	; 0
    3382:	40 e8       	ldi	r20, 0x80	; 128
    3384:	5f e3       	ldi	r21, 0x3F	; 63
    3386:	0e 94 3d 1f 	call	0x3e7a	; 0x3e7a <__ltsf2>
    338a:	88 23       	and	r24, r24
    338c:	2c f4       	brge	.+10     	; 0x3398 <pwm_rampDown2B+0xba>
		__ticks = 1;
    338e:	81 e0       	ldi	r24, 0x01	; 1
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	9e 83       	std	Y+6, r25	; 0x06
    3394:	8d 83       	std	Y+5, r24	; 0x05
    3396:	3f c0       	rjmp	.+126    	; 0x3416 <pwm_rampDown2B+0x138>
	else if (__tmp > 65535)
    3398:	6f 81       	ldd	r22, Y+7	; 0x07
    339a:	78 85       	ldd	r23, Y+8	; 0x08
    339c:	89 85       	ldd	r24, Y+9	; 0x09
    339e:	9a 85       	ldd	r25, Y+10	; 0x0a
    33a0:	20 e0       	ldi	r18, 0x00	; 0
    33a2:	3f ef       	ldi	r19, 0xFF	; 255
    33a4:	4f e7       	ldi	r20, 0x7F	; 127
    33a6:	57 e4       	ldi	r21, 0x47	; 71
    33a8:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <__gtsf2>
    33ac:	18 16       	cp	r1, r24
    33ae:	4c f5       	brge	.+82     	; 0x3402 <pwm_rampDown2B+0x124>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33b0:	6b 85       	ldd	r22, Y+11	; 0x0b
    33b2:	7c 85       	ldd	r23, Y+12	; 0x0c
    33b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    33b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    33b8:	20 e0       	ldi	r18, 0x00	; 0
    33ba:	30 e0       	ldi	r19, 0x00	; 0
    33bc:	40 e2       	ldi	r20, 0x20	; 32
    33be:	51 e4       	ldi	r21, 0x41	; 65
    33c0:	0e 94 e3 1d 	call	0x3bc6	; 0x3bc6 <__mulsf3>
    33c4:	dc 01       	movw	r26, r24
    33c6:	cb 01       	movw	r24, r22
    33c8:	bc 01       	movw	r22, r24
    33ca:	cd 01       	movw	r24, r26
    33cc:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    33d0:	dc 01       	movw	r26, r24
    33d2:	cb 01       	movw	r24, r22
    33d4:	9e 83       	std	Y+6, r25	; 0x06
    33d6:	8d 83       	std	Y+5, r24	; 0x05
    33d8:	0f c0       	rjmp	.+30     	; 0x33f8 <pwm_rampDown2B+0x11a>
    33da:	80 e9       	ldi	r24, 0x90	; 144
    33dc:	91 e0       	ldi	r25, 0x01	; 1
    33de:	9c 83       	std	Y+4, r25	; 0x04
    33e0:	8b 83       	std	Y+3, r24	; 0x03
    33e2:	8b 81       	ldd	r24, Y+3	; 0x03
    33e4:	9c 81       	ldd	r25, Y+4	; 0x04
    33e6:	01 97       	sbiw	r24, 0x01	; 1
    33e8:	f1 f7       	brne	.-4      	; 0x33e6 <pwm_rampDown2B+0x108>
    33ea:	9c 83       	std	Y+4, r25	; 0x04
    33ec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33ee:	8d 81       	ldd	r24, Y+5	; 0x05
    33f0:	9e 81       	ldd	r25, Y+6	; 0x06
    33f2:	01 97       	sbiw	r24, 0x01	; 1
    33f4:	9e 83       	std	Y+6, r25	; 0x06
    33f6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33f8:	8d 81       	ldd	r24, Y+5	; 0x05
    33fa:	9e 81       	ldd	r25, Y+6	; 0x06
    33fc:	00 97       	sbiw	r24, 0x00	; 0
    33fe:	69 f7       	brne	.-38     	; 0x33da <pwm_rampDown2B+0xfc>
    3400:	14 c0       	rjmp	.+40     	; 0x342a <pwm_rampDown2B+0x14c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3402:	6f 81       	ldd	r22, Y+7	; 0x07
    3404:	78 85       	ldd	r23, Y+8	; 0x08
    3406:	89 85       	ldd	r24, Y+9	; 0x09
    3408:	9a 85       	ldd	r25, Y+10	; 0x0a
    340a:	0e 94 0d 1c 	call	0x381a	; 0x381a <__fixunssfsi>
    340e:	dc 01       	movw	r26, r24
    3410:	cb 01       	movw	r24, r22
    3412:	9e 83       	std	Y+6, r25	; 0x06
    3414:	8d 83       	std	Y+5, r24	; 0x05
    3416:	8d 81       	ldd	r24, Y+5	; 0x05
    3418:	9e 81       	ldd	r25, Y+6	; 0x06
    341a:	9a 83       	std	Y+2, r25	; 0x02
    341c:	89 83       	std	Y+1, r24	; 0x01
    341e:	89 81       	ldd	r24, Y+1	; 0x01
    3420:	9a 81       	ldd	r25, Y+2	; 0x02
    3422:	01 97       	sbiw	r24, 0x01	; 1
    3424:	f1 f7       	brne	.-4      	; 0x3422 <pwm_rampDown2B+0x144>
    3426:	9a 83       	std	Y+2, r25	; 0x02
    3428:	89 83       	std	Y+1, r24	; 0x01
    342a:	2f 85       	ldd	r18, Y+15	; 0x0f
    342c:	38 89       	ldd	r19, Y+16	; 0x10
    342e:	89 89       	ldd	r24, Y+17	; 0x11
    3430:	9a 89       	ldd	r25, Y+18	; 0x12
    3432:	28 17       	cp	r18, r24
    3434:	39 07       	cpc	r19, r25
    3436:	08 f0       	brcs	.+2      	; 0x343a <pwm_rampDown2B+0x15c>
    3438:	76 cf       	rjmp	.-276    	; 0x3326 <pwm_rampDown2B+0x48>
    343a:	89 89       	ldd	r24, Y+17	; 0x11
    343c:	9a 89       	ldd	r25, Y+18	; 0x12
    343e:	90 93 55 02 	sts	0x0255, r25
    3442:	80 93 54 02 	sts	0x0254, r24
    3446:	64 96       	adiw	r28, 0x14	; 20
    3448:	0f b6       	in	r0, 0x3f	; 63
    344a:	f8 94       	cli
    344c:	de bf       	out	0x3e, r29	; 62
    344e:	0f be       	out	0x3f, r0	; 63
    3450:	cd bf       	out	0x3d, r28	; 61
    3452:	cf 91       	pop	r28
    3454:	df 91       	pop	r29
    3456:	08 95       	ret

00003458 <turn_left>:
freenode - JoshAshby
*/
//-------------------------------------------
//add a basica bios that will take, start the ADC, calibrate the sensors to what value they should try to stay at
//also go through and make sure everything is working from what it can tell if there is an error then it will blink the status led
void all_good(){//turn the status led on
    3458:	df 93       	push	r29
    345a:	cf 93       	push	r28
    345c:	cd b7       	in	r28, 0x3d	; 61
    345e:	de b7       	in	r29, 0x3e	; 62
    out('D', 3, 1);
    3460:	cf 91       	pop	r28
    3462:	df 91       	pop	r29
    3464:	08 95       	ret

00003466 <turn_right>:
}
    3466:	df 93       	push	r29
    3468:	cf 93       	push	r28
    346a:	cd b7       	in	r28, 0x3d	; 61
    346c:	de b7       	in	r29, 0x3e	; 62
void oh_crap(){//status led off
    346e:	cf 91       	pop	r28
    3470:	df 91       	pop	r29
    3472:	08 95       	ret

00003474 <stop>:
    out('D', 3, 0);
    3474:	df 93       	push	r29
    3476:	cf 93       	push	r28
    3478:	cd b7       	in	r28, 0x3d	; 61
    347a:	de b7       	in	r29, 0x3e	; 62
}
    347c:	0e 94 68 01 	call	0x2d0	; 0x2d0 <error>
void error(){//blink the status led if there is an error
    3480:	cf 91       	pop	r28
    3482:	df 91       	pop	r29
    3484:	08 95       	ret

00003486 <calibrate>:
    out('D', 3, 1);
    3486:	df 93       	push	r29
    3488:	cf 93       	push	r28
    348a:	cd b7       	in	r28, 0x3d	; 61
    348c:	de b7       	in	r29, 0x3e	; 62
    348e:	28 97       	sbiw	r28, 0x08	; 8
    3490:	0f b6       	in	r0, 0x3f	; 63
    3492:	f8 94       	cli
    3494:	de bf       	out	0x3e, r29	; 62
    3496:	0f be       	out	0x3f, r0	; 63
    3498:	cd bf       	out	0x3d, r28	; 61
    _delay_ms(500);
    349a:	85 e0       	ldi	r24, 0x05	; 5
    349c:	90 e0       	ldi	r25, 0x00	; 0
    349e:	0e 94 a9 00 	call	0x152	; 0x152 <adc_change>
    out('D', 3, 0);
    34a2:	e9 e7       	ldi	r30, 0x79	; 121
    34a4:	f0 e0       	ldi	r31, 0x00	; 0
    34a6:	80 81       	ld	r24, Z
    34a8:	88 2f       	mov	r24, r24
    34aa:	90 e0       	ldi	r25, 0x00	; 0
    34ac:	90 93 5d 02 	sts	0x025D, r25
    34b0:	80 93 5c 02 	sts	0x025C, r24
    _delay_ms(500);
    34b4:	10 92 5b 02 	sts	0x025B, r1
    34b8:	10 92 5a 02 	sts	0x025A, r1
    34bc:	7c c0       	rjmp	.+248    	; 0x35b6 <calibrate+0x130>
}
    34be:	e9 e7       	ldi	r30, 0x79	; 121
    34c0:	f0 e0       	ldi	r31, 0x00	; 0
    34c2:	80 81       	ld	r24, Z
    34c4:	28 2f       	mov	r18, r24
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	80 91 30 02 	lds	r24, 0x0230
    34cc:	90 91 31 02 	lds	r25, 0x0231
    34d0:	8c 59       	subi	r24, 0x9C	; 156
    34d2:	9f 4f       	sbci	r25, 0xFF	; 255
    34d4:	82 17       	cp	r24, r18
    34d6:	93 07       	cpc	r25, r19
    34d8:	24 f5       	brge	.+72     	; 0x3522 <calibrate+0x9c>
void setup(){
    DDRD |= (1<<2);//LED power
    34da:	e9 e7       	ldi	r30, 0x79	; 121
    34dc:	f0 e0       	ldi	r31, 0x00	; 0
    34de:	80 81       	ld	r24, Z
    34e0:	86 95       	lsr	r24
    34e2:	28 2f       	mov	r18, r24
    34e4:	30 e0       	ldi	r19, 0x00	; 0
    34e6:	3c 83       	std	Y+4, r19	; 0x04
    34e8:	2b 83       	std	Y+3, r18	; 0x03
    34ea:	80 91 30 02 	lds	r24, 0x0230
    34ee:	90 91 31 02 	lds	r25, 0x0231
    34f2:	9e 83       	std	Y+6, r25	; 0x06
    34f4:	8d 83       	std	Y+5, r24	; 0x05
    34f6:	8d 81       	ldd	r24, Y+5	; 0x05
    34f8:	9e 81       	ldd	r25, Y+6	; 0x06
    34fa:	99 23       	and	r25, r25
    34fc:	34 f4       	brge	.+12     	; 0x350a <calibrate+0x84>
    34fe:	2d 81       	ldd	r18, Y+5	; 0x05
    3500:	3e 81       	ldd	r19, Y+6	; 0x06
    3502:	2f 5f       	subi	r18, 0xFF	; 255
    3504:	3f 4f       	sbci	r19, 0xFF	; 255
    3506:	3e 83       	std	Y+6, r19	; 0x06
    3508:	2d 83       	std	Y+5, r18	; 0x05
    350a:	8d 81       	ldd	r24, Y+5	; 0x05
    350c:	9e 81       	ldd	r25, Y+6	; 0x06
    350e:	95 95       	asr	r25
    3510:	87 95       	ror	r24
    3512:	2b 81       	ldd	r18, Y+3	; 0x03
    3514:	3c 81       	ldd	r19, Y+4	; 0x04
    3516:	82 0f       	add	r24, r18
    3518:	93 1f       	adc	r25, r19
    351a:	90 93 5d 02 	sts	0x025D, r25
    351e:	80 93 5c 02 	sts	0x025C, r24
    DDRD |= (1<<3);//LED Status
    DDRD |= (1<<4);//relay back
    3522:	e9 e7       	ldi	r30, 0x79	; 121
    3524:	f0 e0       	ldi	r31, 0x00	; 0
    3526:	80 81       	ld	r24, Z
    3528:	28 2f       	mov	r18, r24
    352a:	30 e0       	ldi	r19, 0x00	; 0
    352c:	80 91 30 02 	lds	r24, 0x0230
    3530:	90 91 31 02 	lds	r25, 0x0231
    3534:	84 56       	subi	r24, 0x64	; 100
    3536:	90 40       	sbci	r25, 0x00	; 0
    3538:	28 17       	cp	r18, r24
    353a:	39 07       	cpc	r19, r25
    353c:	24 f5       	brge	.+72     	; 0x3586 <calibrate+0x100>
    DDRD |= (1<<5);//relay front
    353e:	e9 e7       	ldi	r30, 0x79	; 121
    3540:	f0 e0       	ldi	r31, 0x00	; 0
    3542:	80 81       	ld	r24, Z
    3544:	86 95       	lsr	r24
    3546:	28 2f       	mov	r18, r24
    3548:	30 e0       	ldi	r19, 0x00	; 0
    354a:	3a 83       	std	Y+2, r19	; 0x02
    354c:	29 83       	std	Y+1, r18	; 0x01
    354e:	80 91 30 02 	lds	r24, 0x0230
    3552:	90 91 31 02 	lds	r25, 0x0231
    3556:	98 87       	std	Y+8, r25	; 0x08
    3558:	8f 83       	std	Y+7, r24	; 0x07
    355a:	8f 81       	ldd	r24, Y+7	; 0x07
    355c:	98 85       	ldd	r25, Y+8	; 0x08
    355e:	99 23       	and	r25, r25
    3560:	34 f4       	brge	.+12     	; 0x356e <calibrate+0xe8>
    3562:	2f 81       	ldd	r18, Y+7	; 0x07
    3564:	38 85       	ldd	r19, Y+8	; 0x08
    3566:	2f 5f       	subi	r18, 0xFF	; 255
    3568:	3f 4f       	sbci	r19, 0xFF	; 255
    356a:	38 87       	std	Y+8, r19	; 0x08
    356c:	2f 83       	std	Y+7, r18	; 0x07
    356e:	8f 81       	ldd	r24, Y+7	; 0x07
    3570:	98 85       	ldd	r25, Y+8	; 0x08
    3572:	95 95       	asr	r25
    3574:	87 95       	ror	r24
    3576:	29 81       	ldd	r18, Y+1	; 0x01
    3578:	3a 81       	ldd	r19, Y+2	; 0x02
    357a:	82 0f       	add	r24, r18
    357c:	93 1f       	adc	r25, r19
    357e:	90 93 5d 02 	sts	0x025D, r25
    3582:	80 93 5c 02 	sts	0x025C, r24
    out('D', 2, 1);
    pwm_setup1();
    3586:	80 91 5a 02 	lds	r24, 0x025A
    358a:	90 91 5b 02 	lds	r25, 0x025B
    358e:	20 91 5c 02 	lds	r18, 0x025C
    3592:	30 91 5d 02 	lds	r19, 0x025D
    3596:	88 0f       	add	r24, r24
    3598:	99 1f       	adc	r25, r25
    359a:	fc 01       	movw	r30, r24
    359c:	e8 5f       	subi	r30, 0xF8	; 248
    359e:	fd 4f       	sbci	r31, 0xFD	; 253
    35a0:	31 83       	std	Z+1, r19	; 0x01
    35a2:	20 83       	st	Z, r18
}
void error(){//blink the status led if there is an error
    out('D', 3, 1);
    _delay_ms(500);
    out('D', 3, 0);
    _delay_ms(500);
    35a4:	80 91 5a 02 	lds	r24, 0x025A
    35a8:	90 91 5b 02 	lds	r25, 0x025B
    35ac:	01 96       	adiw	r24, 0x01	; 1
    35ae:	90 93 5b 02 	sts	0x025B, r25
    35b2:	80 93 5a 02 	sts	0x025A, r24
    35b6:	80 91 5a 02 	lds	r24, 0x025A
    35ba:	90 91 5b 02 	lds	r25, 0x025B
    35be:	85 31       	cpi	r24, 0x15	; 21
    35c0:	91 05       	cpc	r25, r1
    35c2:	0c f4       	brge	.+2      	; 0x35c6 <calibrate+0x140>
    35c4:	7c cf       	rjmp	.-264    	; 0x34be <calibrate+0x38>
    DDRD |= (1<<4);//relay back
    DDRD |= (1<<5);//relay front
    out('D', 2, 1);
    pwm_setup1();
    adc_start();//because we're using interrupts ADCH will auto update'
    all_good();
    35c6:	10 92 5b 02 	sts	0x025B, r1
    35ca:	10 92 5a 02 	sts	0x025A, r1
    35ce:	1e c0       	rjmp	.+60     	; 0x360c <calibrate+0x186>
}
    35d0:	80 91 5a 02 	lds	r24, 0x025A
    35d4:	90 91 5b 02 	lds	r25, 0x025B
    35d8:	88 0f       	add	r24, r24
    35da:	99 1f       	adc	r25, r25
    35dc:	fc 01       	movw	r30, r24
    35de:	e8 5f       	subi	r30, 0xF8	; 248
    35e0:	fd 4f       	sbci	r31, 0xFD	; 253
    35e2:	20 81       	ld	r18, Z
    35e4:	31 81       	ldd	r19, Z+1	; 0x01
    35e6:	80 91 30 02 	lds	r24, 0x0230
    35ea:	90 91 31 02 	lds	r25, 0x0231
    35ee:	82 0f       	add	r24, r18
    35f0:	93 1f       	adc	r25, r19
    35f2:	90 93 31 02 	sts	0x0231, r25
    35f6:	80 93 30 02 	sts	0x0230, r24
    DDRD |= (1<<4);//relay back
    DDRD |= (1<<5);//relay front
    out('D', 2, 1);
    pwm_setup1();
    adc_start();//because we're using interrupts ADCH will auto update'
    all_good();
    35fa:	80 91 5a 02 	lds	r24, 0x025A
    35fe:	90 91 5b 02 	lds	r25, 0x025B
    3602:	01 96       	adiw	r24, 0x01	; 1
    3604:	90 93 5b 02 	sts	0x025B, r25
    3608:	80 93 5a 02 	sts	0x025A, r24
    360c:	80 91 5a 02 	lds	r24, 0x025A
    3610:	90 91 5b 02 	lds	r25, 0x025B
    3614:	85 31       	cpi	r24, 0x15	; 21
    3616:	91 05       	cpc	r25, r1
    3618:	dc f2       	brlt	.-74     	; 0x35d0 <calibrate+0x14a>
}
void test(){
    pwm_ramp1A(255, 10);
    361a:	80 91 30 02 	lds	r24, 0x0230
    361e:	90 91 31 02 	lds	r25, 0x0231
    3622:	24 e1       	ldi	r18, 0x14	; 20
    3624:	30 e0       	ldi	r19, 0x00	; 0
    3626:	b9 01       	movw	r22, r18
    3628:	0e 94 2f 22 	call	0x445e	; 0x445e <__divmodhi4>
    362c:	cb 01       	movw	r24, r22
    362e:	90 93 31 02 	sts	0x0231, r25
    3632:	80 93 30 02 	sts	0x0230, r24
    _delay_ms(500);
    3636:	80 91 30 02 	lds	r24, 0x0230
    363a:	90 91 31 02 	lds	r25, 0x0231
    363e:	90 93 57 02 	sts	0x0257, r25
    3642:	80 93 56 02 	sts	0x0256, r24
    pwm_ramp1A(0, 10);
    3646:	28 96       	adiw	r28, 0x08	; 8
    3648:	0f b6       	in	r0, 0x3f	; 63
    364a:	f8 94       	cli
    364c:	de bf       	out	0x3e, r29	; 62
    364e:	0f be       	out	0x3f, r0	; 63
    3650:	cd bf       	out	0x3d, r28	; 61
    3652:	cf 91       	pop	r28
    3654:	df 91       	pop	r29
    3656:	08 95       	ret

00003658 <ultrasound_filter>:
    out('D', 4, 1);
    3658:	df 93       	push	r29
    365a:	cf 93       	push	r28
    365c:	cd b7       	in	r28, 0x3d	; 61
    365e:	de b7       	in	r29, 0x3e	; 62
    3660:	28 97       	sbiw	r28, 0x08	; 8
    3662:	0f b6       	in	r0, 0x3f	; 63
    3664:	f8 94       	cli
    3666:	de bf       	out	0x3e, r29	; 62
    3668:	0f be       	out	0x3f, r0	; 63
    366a:	cd bf       	out	0x3d, r28	; 61
    pwm_ramp1A(255, 10);
    _delay_ms(500);
    pwm_ramp1A(0,10);
    366c:	e9 e7       	ldi	r30, 0x79	; 121
    366e:	f0 e0       	ldi	r31, 0x00	; 0
    3670:	80 81       	ld	r24, Z
    3672:	88 2f       	mov	r24, r24
    3674:	90 e0       	ldi	r25, 0x00	; 0
    3676:	90 93 5d 02 	sts	0x025D, r25
    367a:	80 93 5c 02 	sts	0x025C, r24
    out('D', 4, 0);
    367e:	10 92 5b 02 	sts	0x025B, r1
    3682:	10 92 5a 02 	sts	0x025A, r1
    3686:	7c c0       	rjmp	.+248    	; 0x3780 <ultrasound_filter+0x128>
    oh_crap();
    3688:	e9 e7       	ldi	r30, 0x79	; 121
    368a:	f0 e0       	ldi	r31, 0x00	; 0
    368c:	80 81       	ld	r24, Z
    368e:	28 2f       	mov	r18, r24
    3690:	30 e0       	ldi	r19, 0x00	; 0
    3692:	80 91 30 02 	lds	r24, 0x0230
    3696:	90 91 31 02 	lds	r25, 0x0231
    369a:	8c 59       	subi	r24, 0x9C	; 156
    369c:	9f 4f       	sbci	r25, 0xFF	; 255
    369e:	82 17       	cp	r24, r18
    36a0:	93 07       	cpc	r25, r19
    36a2:	24 f5       	brge	.+72     	; 0x36ec <ultrasound_filter+0x94>
    _delay_ms(1000);
    all_good();
    36a4:	e9 e7       	ldi	r30, 0x79	; 121
    36a6:	f0 e0       	ldi	r31, 0x00	; 0
    36a8:	80 81       	ld	r24, Z
    36aa:	86 95       	lsr	r24
    36ac:	28 2f       	mov	r18, r24
    36ae:	30 e0       	ldi	r19, 0x00	; 0
    36b0:	3c 83       	std	Y+4, r19	; 0x04
    36b2:	2b 83       	std	Y+3, r18	; 0x03
    36b4:	80 91 30 02 	lds	r24, 0x0230
    36b8:	90 91 31 02 	lds	r25, 0x0231
    36bc:	9e 83       	std	Y+6, r25	; 0x06
    36be:	8d 83       	std	Y+5, r24	; 0x05
    36c0:	8d 81       	ldd	r24, Y+5	; 0x05
    36c2:	9e 81       	ldd	r25, Y+6	; 0x06
    36c4:	99 23       	and	r25, r25
    36c6:	34 f4       	brge	.+12     	; 0x36d4 <ultrasound_filter+0x7c>
    36c8:	2d 81       	ldd	r18, Y+5	; 0x05
    36ca:	3e 81       	ldd	r19, Y+6	; 0x06
    36cc:	2f 5f       	subi	r18, 0xFF	; 255
    36ce:	3f 4f       	sbci	r19, 0xFF	; 255
    36d0:	3e 83       	std	Y+6, r19	; 0x06
    36d2:	2d 83       	std	Y+5, r18	; 0x05
    36d4:	8d 81       	ldd	r24, Y+5	; 0x05
    36d6:	9e 81       	ldd	r25, Y+6	; 0x06
    36d8:	95 95       	asr	r25
    36da:	87 95       	ror	r24
    36dc:	2b 81       	ldd	r18, Y+3	; 0x03
    36de:	3c 81       	ldd	r19, Y+4	; 0x04
    36e0:	82 0f       	add	r24, r18
    36e2:	93 1f       	adc	r25, r19
    36e4:	90 93 5d 02 	sts	0x025D, r25
    36e8:	80 93 5c 02 	sts	0x025C, r24
    pwm1B(255);
    _delay_ms(500);
    36ec:	e9 e7       	ldi	r30, 0x79	; 121
    36ee:	f0 e0       	ldi	r31, 0x00	; 0
    36f0:	80 81       	ld	r24, Z
    36f2:	28 2f       	mov	r18, r24
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	80 91 30 02 	lds	r24, 0x0230
    36fa:	90 91 31 02 	lds	r25, 0x0231
    36fe:	84 56       	subi	r24, 0x64	; 100
    3700:	90 40       	sbci	r25, 0x00	; 0
    3702:	28 17       	cp	r18, r24
    3704:	39 07       	cpc	r19, r25
    3706:	24 f5       	brge	.+72     	; 0x3750 <ultrasound_filter+0xf8>
    pwm1B(0);
    3708:	e9 e7       	ldi	r30, 0x79	; 121
    370a:	f0 e0       	ldi	r31, 0x00	; 0
    370c:	80 81       	ld	r24, Z
    370e:	86 95       	lsr	r24
    3710:	28 2f       	mov	r18, r24
    3712:	30 e0       	ldi	r19, 0x00	; 0
    3714:	3a 83       	std	Y+2, r19	; 0x02
    3716:	29 83       	std	Y+1, r18	; 0x01
    3718:	80 91 30 02 	lds	r24, 0x0230
    371c:	90 91 31 02 	lds	r25, 0x0231
    3720:	98 87       	std	Y+8, r25	; 0x08
    3722:	8f 83       	std	Y+7, r24	; 0x07
    3724:	8f 81       	ldd	r24, Y+7	; 0x07
    3726:	98 85       	ldd	r25, Y+8	; 0x08
    3728:	99 23       	and	r25, r25
    372a:	34 f4       	brge	.+12     	; 0x3738 <ultrasound_filter+0xe0>
    372c:	2f 81       	ldd	r18, Y+7	; 0x07
    372e:	38 85       	ldd	r19, Y+8	; 0x08
    3730:	2f 5f       	subi	r18, 0xFF	; 255
    3732:	3f 4f       	sbci	r19, 0xFF	; 255
    3734:	38 87       	std	Y+8, r19	; 0x08
    3736:	2f 83       	std	Y+7, r18	; 0x07
    3738:	8f 81       	ldd	r24, Y+7	; 0x07
    373a:	98 85       	ldd	r25, Y+8	; 0x08
    373c:	95 95       	asr	r25
    373e:	87 95       	ror	r24
    3740:	29 81       	ldd	r18, Y+1	; 0x01
    3742:	3a 81       	ldd	r19, Y+2	; 0x02
    3744:	82 0f       	add	r24, r18
    3746:	93 1f       	adc	r25, r19
    3748:	90 93 5d 02 	sts	0x025D, r25
    374c:	80 93 5c 02 	sts	0x025C, r24
    out('D', 5, 1);
    _delay_ms(500);
    3750:	80 91 5a 02 	lds	r24, 0x025A
    3754:	90 91 5b 02 	lds	r25, 0x025B
    3758:	20 91 5c 02 	lds	r18, 0x025C
    375c:	30 91 5d 02 	lds	r19, 0x025D
    3760:	88 0f       	add	r24, r24
    3762:	99 1f       	adc	r25, r25
    3764:	fc 01       	movw	r30, r24
    3766:	e8 5f       	subi	r30, 0xF8	; 248
    3768:	fd 4f       	sbci	r31, 0xFD	; 253
    376a:	31 83       	std	Z+1, r19	; 0x01
    376c:	20 83       	st	Z, r18
    pwm_ramp1A(0, 10);
    out('D', 4, 1);
    pwm_ramp1A(255, 10);
    _delay_ms(500);
    pwm_ramp1A(0,10);
    out('D', 4, 0);
    376e:	80 91 5a 02 	lds	r24, 0x025A
    3772:	90 91 5b 02 	lds	r25, 0x025B
    3776:	01 96       	adiw	r24, 0x01	; 1
    3778:	90 93 5b 02 	sts	0x025B, r25
    377c:	80 93 5a 02 	sts	0x025A, r24
    3780:	80 91 5a 02 	lds	r24, 0x025A
    3784:	90 91 5b 02 	lds	r25, 0x025B
    3788:	85 31       	cpi	r24, 0x15	; 21
    378a:	91 05       	cpc	r25, r1
    378c:	0c f4       	brge	.+2      	; 0x3790 <ultrasound_filter+0x138>
    378e:	7c cf       	rjmp	.-264    	; 0x3688 <ultrasound_filter+0x30>
    _delay_ms(500);
    pwm1B(0);
    out('D', 5, 1);
    _delay_ms(500);
    pwm1B(255);
    _delay_ms(500);
    3790:	10 92 5b 02 	sts	0x025B, r1
    3794:	10 92 5a 02 	sts	0x025A, r1
    3798:	1e c0       	rjmp	.+60     	; 0x37d6 <ultrasound_filter+0x17e>
    pwm1B(0);
    379a:	80 91 5a 02 	lds	r24, 0x025A
    379e:	90 91 5b 02 	lds	r25, 0x025B
    37a2:	88 0f       	add	r24, r24
    37a4:	99 1f       	adc	r25, r25
    37a6:	fc 01       	movw	r30, r24
    37a8:	e8 5f       	subi	r30, 0xF8	; 248
    37aa:	fd 4f       	sbci	r31, 0xFD	; 253
    37ac:	20 81       	ld	r18, Z
    37ae:	31 81       	ldd	r19, Z+1	; 0x01
    37b0:	80 91 30 02 	lds	r24, 0x0230
    37b4:	90 91 31 02 	lds	r25, 0x0231
    37b8:	82 0f       	add	r24, r18
    37ba:	93 1f       	adc	r25, r19
    37bc:	90 93 31 02 	sts	0x0231, r25
    37c0:	80 93 30 02 	sts	0x0230, r24
    _delay_ms(500);
    pwm1B(0);
    out('D', 5, 1);
    _delay_ms(500);
    pwm1B(255);
    _delay_ms(500);
    37c4:	80 91 5a 02 	lds	r24, 0x025A
    37c8:	90 91 5b 02 	lds	r25, 0x025B
    37cc:	01 96       	adiw	r24, 0x01	; 1
    37ce:	90 93 5b 02 	sts	0x025B, r25
    37d2:	80 93 5a 02 	sts	0x025A, r24
    37d6:	80 91 5a 02 	lds	r24, 0x025A
    37da:	90 91 5b 02 	lds	r25, 0x025B
    37de:	85 31       	cpi	r24, 0x15	; 21
    37e0:	91 05       	cpc	r25, r1
    37e2:	dc f2       	brlt	.-74     	; 0x379a <ultrasound_filter+0x142>
    pwm1B(0);
    out('D', 5, 0);
}
    37e4:	80 91 30 02 	lds	r24, 0x0230
    37e8:	90 91 31 02 	lds	r25, 0x0231
    37ec:	24 e1       	ldi	r18, 0x14	; 20
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	b9 01       	movw	r22, r18
    37f2:	0e 94 2f 22 	call	0x445e	; 0x445e <__divmodhi4>
    37f6:	cb 01       	movw	r24, r22
    37f8:	90 93 31 02 	sts	0x0231, r25
    37fc:	80 93 30 02 	sts	0x0230, r24
    3800:	80 91 30 02 	lds	r24, 0x0230
    3804:	90 91 31 02 	lds	r25, 0x0231
    3808:	28 96       	adiw	r28, 0x08	; 8
    380a:	0f b6       	in	r0, 0x3f	; 63
    380c:	f8 94       	cli
    380e:	de bf       	out	0x3e, r29	; 62
    3810:	0f be       	out	0x3f, r0	; 63
    3812:	cd bf       	out	0x3d, r28	; 61
    3814:	cf 91       	pop	r28
    3816:	df 91       	pop	r29
    3818:	08 95       	ret

0000381a <__fixunssfsi>:
    381a:	ef 92       	push	r14
    381c:	ff 92       	push	r15
    381e:	0f 93       	push	r16
    3820:	1f 93       	push	r17
    3822:	7b 01       	movw	r14, r22
    3824:	8c 01       	movw	r16, r24
    3826:	20 e0       	ldi	r18, 0x00	; 0
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	40 e0       	ldi	r20, 0x00	; 0
    382c:	5f e4       	ldi	r21, 0x4F	; 79
    382e:	0e 94 0d 1f 	call	0x3e1a	; 0x3e1a <__gesf2>
    3832:	88 23       	and	r24, r24
    3834:	8c f0       	brlt	.+34     	; 0x3858 <__fixunssfsi+0x3e>
    3836:	c8 01       	movw	r24, r16
    3838:	b7 01       	movw	r22, r14
    383a:	20 e0       	ldi	r18, 0x00	; 0
    383c:	30 e0       	ldi	r19, 0x00	; 0
    383e:	40 e0       	ldi	r20, 0x00	; 0
    3840:	5f e4       	ldi	r21, 0x4F	; 79
    3842:	0e 94 85 1d 	call	0x3b0a	; 0x3b0a <__subsf3>
    3846:	0e 94 6d 1f 	call	0x3eda	; 0x3eda <__fixsfsi>
    384a:	9b 01       	movw	r18, r22
    384c:	ac 01       	movw	r20, r24
    384e:	20 50       	subi	r18, 0x00	; 0
    3850:	30 40       	sbci	r19, 0x00	; 0
    3852:	40 40       	sbci	r20, 0x00	; 0
    3854:	50 48       	sbci	r21, 0x80	; 128
    3856:	06 c0       	rjmp	.+12     	; 0x3864 <__fixunssfsi+0x4a>
    3858:	c8 01       	movw	r24, r16
    385a:	b7 01       	movw	r22, r14
    385c:	0e 94 6d 1f 	call	0x3eda	; 0x3eda <__fixsfsi>
    3860:	9b 01       	movw	r18, r22
    3862:	ac 01       	movw	r20, r24
    3864:	b9 01       	movw	r22, r18
    3866:	ca 01       	movw	r24, r20
    3868:	1f 91       	pop	r17
    386a:	0f 91       	pop	r16
    386c:	ff 90       	pop	r15
    386e:	ef 90       	pop	r14
    3870:	08 95       	ret

00003872 <_fpadd_parts>:
    3872:	a0 e0       	ldi	r26, 0x00	; 0
    3874:	b0 e0       	ldi	r27, 0x00	; 0
    3876:	ef e3       	ldi	r30, 0x3F	; 63
    3878:	fc e1       	ldi	r31, 0x1C	; 28
    387a:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__>
    387e:	dc 01       	movw	r26, r24
    3880:	2b 01       	movw	r4, r22
    3882:	fa 01       	movw	r30, r20
    3884:	9c 91       	ld	r25, X
    3886:	92 30       	cpi	r25, 0x02	; 2
    3888:	08 f4       	brcc	.+2      	; 0x388c <_fpadd_parts+0x1a>
    388a:	39 c1       	rjmp	.+626    	; 0x3afe <_fpadd_parts+0x28c>
    388c:	eb 01       	movw	r28, r22
    388e:	88 81       	ld	r24, Y
    3890:	82 30       	cpi	r24, 0x02	; 2
    3892:	08 f4       	brcc	.+2      	; 0x3896 <_fpadd_parts+0x24>
    3894:	33 c1       	rjmp	.+614    	; 0x3afc <_fpadd_parts+0x28a>
    3896:	94 30       	cpi	r25, 0x04	; 4
    3898:	69 f4       	brne	.+26     	; 0x38b4 <_fpadd_parts+0x42>
    389a:	84 30       	cpi	r24, 0x04	; 4
    389c:	09 f0       	breq	.+2      	; 0x38a0 <_fpadd_parts+0x2e>
    389e:	2f c1       	rjmp	.+606    	; 0x3afe <_fpadd_parts+0x28c>
    38a0:	11 96       	adiw	r26, 0x01	; 1
    38a2:	9c 91       	ld	r25, X
    38a4:	11 97       	sbiw	r26, 0x01	; 1
    38a6:	89 81       	ldd	r24, Y+1	; 0x01
    38a8:	98 17       	cp	r25, r24
    38aa:	09 f4       	brne	.+2      	; 0x38ae <_fpadd_parts+0x3c>
    38ac:	28 c1       	rjmp	.+592    	; 0x3afe <_fpadd_parts+0x28c>
    38ae:	a0 e0       	ldi	r26, 0x00	; 0
    38b0:	b1 e0       	ldi	r27, 0x01	; 1
    38b2:	25 c1       	rjmp	.+586    	; 0x3afe <_fpadd_parts+0x28c>
    38b4:	84 30       	cpi	r24, 0x04	; 4
    38b6:	09 f4       	brne	.+2      	; 0x38ba <_fpadd_parts+0x48>
    38b8:	21 c1       	rjmp	.+578    	; 0x3afc <_fpadd_parts+0x28a>
    38ba:	82 30       	cpi	r24, 0x02	; 2
    38bc:	a9 f4       	brne	.+42     	; 0x38e8 <_fpadd_parts+0x76>
    38be:	92 30       	cpi	r25, 0x02	; 2
    38c0:	09 f0       	breq	.+2      	; 0x38c4 <_fpadd_parts+0x52>
    38c2:	1d c1       	rjmp	.+570    	; 0x3afe <_fpadd_parts+0x28c>
    38c4:	9a 01       	movw	r18, r20
    38c6:	ad 01       	movw	r20, r26
    38c8:	88 e0       	ldi	r24, 0x08	; 8
    38ca:	ea 01       	movw	r28, r20
    38cc:	09 90       	ld	r0, Y+
    38ce:	ae 01       	movw	r20, r28
    38d0:	e9 01       	movw	r28, r18
    38d2:	09 92       	st	Y+, r0
    38d4:	9e 01       	movw	r18, r28
    38d6:	81 50       	subi	r24, 0x01	; 1
    38d8:	c1 f7       	brne	.-16     	; 0x38ca <_fpadd_parts+0x58>
    38da:	e2 01       	movw	r28, r4
    38dc:	89 81       	ldd	r24, Y+1	; 0x01
    38de:	11 96       	adiw	r26, 0x01	; 1
    38e0:	9c 91       	ld	r25, X
    38e2:	89 23       	and	r24, r25
    38e4:	81 83       	std	Z+1, r24	; 0x01
    38e6:	08 c1       	rjmp	.+528    	; 0x3af8 <_fpadd_parts+0x286>
    38e8:	92 30       	cpi	r25, 0x02	; 2
    38ea:	09 f4       	brne	.+2      	; 0x38ee <_fpadd_parts+0x7c>
    38ec:	07 c1       	rjmp	.+526    	; 0x3afc <_fpadd_parts+0x28a>
    38ee:	12 96       	adiw	r26, 0x02	; 2
    38f0:	2d 90       	ld	r2, X+
    38f2:	3c 90       	ld	r3, X
    38f4:	13 97       	sbiw	r26, 0x03	; 3
    38f6:	eb 01       	movw	r28, r22
    38f8:	8a 81       	ldd	r24, Y+2	; 0x02
    38fa:	9b 81       	ldd	r25, Y+3	; 0x03
    38fc:	14 96       	adiw	r26, 0x04	; 4
    38fe:	ad 90       	ld	r10, X+
    3900:	bd 90       	ld	r11, X+
    3902:	cd 90       	ld	r12, X+
    3904:	dc 90       	ld	r13, X
    3906:	17 97       	sbiw	r26, 0x07	; 7
    3908:	ec 80       	ldd	r14, Y+4	; 0x04
    390a:	fd 80       	ldd	r15, Y+5	; 0x05
    390c:	0e 81       	ldd	r16, Y+6	; 0x06
    390e:	1f 81       	ldd	r17, Y+7	; 0x07
    3910:	91 01       	movw	r18, r2
    3912:	28 1b       	sub	r18, r24
    3914:	39 0b       	sbc	r19, r25
    3916:	b9 01       	movw	r22, r18
    3918:	37 ff       	sbrs	r19, 7
    391a:	04 c0       	rjmp	.+8      	; 0x3924 <_fpadd_parts+0xb2>
    391c:	66 27       	eor	r22, r22
    391e:	77 27       	eor	r23, r23
    3920:	62 1b       	sub	r22, r18
    3922:	73 0b       	sbc	r23, r19
    3924:	60 32       	cpi	r22, 0x20	; 32
    3926:	71 05       	cpc	r23, r1
    3928:	0c f0       	brlt	.+2      	; 0x392c <_fpadd_parts+0xba>
    392a:	61 c0       	rjmp	.+194    	; 0x39ee <_fpadd_parts+0x17c>
    392c:	12 16       	cp	r1, r18
    392e:	13 06       	cpc	r1, r19
    3930:	6c f5       	brge	.+90     	; 0x398c <_fpadd_parts+0x11a>
    3932:	37 01       	movw	r6, r14
    3934:	48 01       	movw	r8, r16
    3936:	06 2e       	mov	r0, r22
    3938:	04 c0       	rjmp	.+8      	; 0x3942 <_fpadd_parts+0xd0>
    393a:	96 94       	lsr	r9
    393c:	87 94       	ror	r8
    393e:	77 94       	ror	r7
    3940:	67 94       	ror	r6
    3942:	0a 94       	dec	r0
    3944:	d2 f7       	brpl	.-12     	; 0x393a <_fpadd_parts+0xc8>
    3946:	21 e0       	ldi	r18, 0x01	; 1
    3948:	30 e0       	ldi	r19, 0x00	; 0
    394a:	40 e0       	ldi	r20, 0x00	; 0
    394c:	50 e0       	ldi	r21, 0x00	; 0
    394e:	04 c0       	rjmp	.+8      	; 0x3958 <_fpadd_parts+0xe6>
    3950:	22 0f       	add	r18, r18
    3952:	33 1f       	adc	r19, r19
    3954:	44 1f       	adc	r20, r20
    3956:	55 1f       	adc	r21, r21
    3958:	6a 95       	dec	r22
    395a:	d2 f7       	brpl	.-12     	; 0x3950 <_fpadd_parts+0xde>
    395c:	21 50       	subi	r18, 0x01	; 1
    395e:	30 40       	sbci	r19, 0x00	; 0
    3960:	40 40       	sbci	r20, 0x00	; 0
    3962:	50 40       	sbci	r21, 0x00	; 0
    3964:	2e 21       	and	r18, r14
    3966:	3f 21       	and	r19, r15
    3968:	40 23       	and	r20, r16
    396a:	51 23       	and	r21, r17
    396c:	21 15       	cp	r18, r1
    396e:	31 05       	cpc	r19, r1
    3970:	41 05       	cpc	r20, r1
    3972:	51 05       	cpc	r21, r1
    3974:	21 f0       	breq	.+8      	; 0x397e <_fpadd_parts+0x10c>
    3976:	21 e0       	ldi	r18, 0x01	; 1
    3978:	30 e0       	ldi	r19, 0x00	; 0
    397a:	40 e0       	ldi	r20, 0x00	; 0
    397c:	50 e0       	ldi	r21, 0x00	; 0
    397e:	79 01       	movw	r14, r18
    3980:	8a 01       	movw	r16, r20
    3982:	e6 28       	or	r14, r6
    3984:	f7 28       	or	r15, r7
    3986:	08 29       	or	r16, r8
    3988:	19 29       	or	r17, r9
    398a:	3c c0       	rjmp	.+120    	; 0x3a04 <_fpadd_parts+0x192>
    398c:	23 2b       	or	r18, r19
    398e:	d1 f1       	breq	.+116    	; 0x3a04 <_fpadd_parts+0x192>
    3990:	26 0e       	add	r2, r22
    3992:	37 1e       	adc	r3, r23
    3994:	35 01       	movw	r6, r10
    3996:	46 01       	movw	r8, r12
    3998:	06 2e       	mov	r0, r22
    399a:	04 c0       	rjmp	.+8      	; 0x39a4 <_fpadd_parts+0x132>
    399c:	96 94       	lsr	r9
    399e:	87 94       	ror	r8
    39a0:	77 94       	ror	r7
    39a2:	67 94       	ror	r6
    39a4:	0a 94       	dec	r0
    39a6:	d2 f7       	brpl	.-12     	; 0x399c <_fpadd_parts+0x12a>
    39a8:	21 e0       	ldi	r18, 0x01	; 1
    39aa:	30 e0       	ldi	r19, 0x00	; 0
    39ac:	40 e0       	ldi	r20, 0x00	; 0
    39ae:	50 e0       	ldi	r21, 0x00	; 0
    39b0:	04 c0       	rjmp	.+8      	; 0x39ba <_fpadd_parts+0x148>
    39b2:	22 0f       	add	r18, r18
    39b4:	33 1f       	adc	r19, r19
    39b6:	44 1f       	adc	r20, r20
    39b8:	55 1f       	adc	r21, r21
    39ba:	6a 95       	dec	r22
    39bc:	d2 f7       	brpl	.-12     	; 0x39b2 <_fpadd_parts+0x140>
    39be:	21 50       	subi	r18, 0x01	; 1
    39c0:	30 40       	sbci	r19, 0x00	; 0
    39c2:	40 40       	sbci	r20, 0x00	; 0
    39c4:	50 40       	sbci	r21, 0x00	; 0
    39c6:	2a 21       	and	r18, r10
    39c8:	3b 21       	and	r19, r11
    39ca:	4c 21       	and	r20, r12
    39cc:	5d 21       	and	r21, r13
    39ce:	21 15       	cp	r18, r1
    39d0:	31 05       	cpc	r19, r1
    39d2:	41 05       	cpc	r20, r1
    39d4:	51 05       	cpc	r21, r1
    39d6:	21 f0       	breq	.+8      	; 0x39e0 <_fpadd_parts+0x16e>
    39d8:	21 e0       	ldi	r18, 0x01	; 1
    39da:	30 e0       	ldi	r19, 0x00	; 0
    39dc:	40 e0       	ldi	r20, 0x00	; 0
    39de:	50 e0       	ldi	r21, 0x00	; 0
    39e0:	59 01       	movw	r10, r18
    39e2:	6a 01       	movw	r12, r20
    39e4:	a6 28       	or	r10, r6
    39e6:	b7 28       	or	r11, r7
    39e8:	c8 28       	or	r12, r8
    39ea:	d9 28       	or	r13, r9
    39ec:	0b c0       	rjmp	.+22     	; 0x3a04 <_fpadd_parts+0x192>
    39ee:	82 15       	cp	r24, r2
    39f0:	93 05       	cpc	r25, r3
    39f2:	2c f0       	brlt	.+10     	; 0x39fe <_fpadd_parts+0x18c>
    39f4:	1c 01       	movw	r2, r24
    39f6:	aa 24       	eor	r10, r10
    39f8:	bb 24       	eor	r11, r11
    39fa:	65 01       	movw	r12, r10
    39fc:	03 c0       	rjmp	.+6      	; 0x3a04 <_fpadd_parts+0x192>
    39fe:	ee 24       	eor	r14, r14
    3a00:	ff 24       	eor	r15, r15
    3a02:	87 01       	movw	r16, r14
    3a04:	11 96       	adiw	r26, 0x01	; 1
    3a06:	9c 91       	ld	r25, X
    3a08:	d2 01       	movw	r26, r4
    3a0a:	11 96       	adiw	r26, 0x01	; 1
    3a0c:	8c 91       	ld	r24, X
    3a0e:	98 17       	cp	r25, r24
    3a10:	09 f4       	brne	.+2      	; 0x3a14 <_fpadd_parts+0x1a2>
    3a12:	45 c0       	rjmp	.+138    	; 0x3a9e <_fpadd_parts+0x22c>
    3a14:	99 23       	and	r25, r25
    3a16:	39 f0       	breq	.+14     	; 0x3a26 <_fpadd_parts+0x1b4>
    3a18:	a8 01       	movw	r20, r16
    3a1a:	97 01       	movw	r18, r14
    3a1c:	2a 19       	sub	r18, r10
    3a1e:	3b 09       	sbc	r19, r11
    3a20:	4c 09       	sbc	r20, r12
    3a22:	5d 09       	sbc	r21, r13
    3a24:	06 c0       	rjmp	.+12     	; 0x3a32 <_fpadd_parts+0x1c0>
    3a26:	a6 01       	movw	r20, r12
    3a28:	95 01       	movw	r18, r10
    3a2a:	2e 19       	sub	r18, r14
    3a2c:	3f 09       	sbc	r19, r15
    3a2e:	40 0b       	sbc	r20, r16
    3a30:	51 0b       	sbc	r21, r17
    3a32:	57 fd       	sbrc	r21, 7
    3a34:	08 c0       	rjmp	.+16     	; 0x3a46 <_fpadd_parts+0x1d4>
    3a36:	11 82       	std	Z+1, r1	; 0x01
    3a38:	33 82       	std	Z+3, r3	; 0x03
    3a3a:	22 82       	std	Z+2, r2	; 0x02
    3a3c:	24 83       	std	Z+4, r18	; 0x04
    3a3e:	35 83       	std	Z+5, r19	; 0x05
    3a40:	46 83       	std	Z+6, r20	; 0x06
    3a42:	57 83       	std	Z+7, r21	; 0x07
    3a44:	1d c0       	rjmp	.+58     	; 0x3a80 <_fpadd_parts+0x20e>
    3a46:	81 e0       	ldi	r24, 0x01	; 1
    3a48:	81 83       	std	Z+1, r24	; 0x01
    3a4a:	33 82       	std	Z+3, r3	; 0x03
    3a4c:	22 82       	std	Z+2, r2	; 0x02
    3a4e:	88 27       	eor	r24, r24
    3a50:	99 27       	eor	r25, r25
    3a52:	dc 01       	movw	r26, r24
    3a54:	82 1b       	sub	r24, r18
    3a56:	93 0b       	sbc	r25, r19
    3a58:	a4 0b       	sbc	r26, r20
    3a5a:	b5 0b       	sbc	r27, r21
    3a5c:	84 83       	std	Z+4, r24	; 0x04
    3a5e:	95 83       	std	Z+5, r25	; 0x05
    3a60:	a6 83       	std	Z+6, r26	; 0x06
    3a62:	b7 83       	std	Z+7, r27	; 0x07
    3a64:	0d c0       	rjmp	.+26     	; 0x3a80 <_fpadd_parts+0x20e>
    3a66:	22 0f       	add	r18, r18
    3a68:	33 1f       	adc	r19, r19
    3a6a:	44 1f       	adc	r20, r20
    3a6c:	55 1f       	adc	r21, r21
    3a6e:	24 83       	std	Z+4, r18	; 0x04
    3a70:	35 83       	std	Z+5, r19	; 0x05
    3a72:	46 83       	std	Z+6, r20	; 0x06
    3a74:	57 83       	std	Z+7, r21	; 0x07
    3a76:	82 81       	ldd	r24, Z+2	; 0x02
    3a78:	93 81       	ldd	r25, Z+3	; 0x03
    3a7a:	01 97       	sbiw	r24, 0x01	; 1
    3a7c:	93 83       	std	Z+3, r25	; 0x03
    3a7e:	82 83       	std	Z+2, r24	; 0x02
    3a80:	24 81       	ldd	r18, Z+4	; 0x04
    3a82:	35 81       	ldd	r19, Z+5	; 0x05
    3a84:	46 81       	ldd	r20, Z+6	; 0x06
    3a86:	57 81       	ldd	r21, Z+7	; 0x07
    3a88:	da 01       	movw	r26, r20
    3a8a:	c9 01       	movw	r24, r18
    3a8c:	01 97       	sbiw	r24, 0x01	; 1
    3a8e:	a1 09       	sbc	r26, r1
    3a90:	b1 09       	sbc	r27, r1
    3a92:	8f 5f       	subi	r24, 0xFF	; 255
    3a94:	9f 4f       	sbci	r25, 0xFF	; 255
    3a96:	af 4f       	sbci	r26, 0xFF	; 255
    3a98:	bf 43       	sbci	r27, 0x3F	; 63
    3a9a:	28 f3       	brcs	.-54     	; 0x3a66 <_fpadd_parts+0x1f4>
    3a9c:	0b c0       	rjmp	.+22     	; 0x3ab4 <_fpadd_parts+0x242>
    3a9e:	91 83       	std	Z+1, r25	; 0x01
    3aa0:	33 82       	std	Z+3, r3	; 0x03
    3aa2:	22 82       	std	Z+2, r2	; 0x02
    3aa4:	ea 0c       	add	r14, r10
    3aa6:	fb 1c       	adc	r15, r11
    3aa8:	0c 1d       	adc	r16, r12
    3aaa:	1d 1d       	adc	r17, r13
    3aac:	e4 82       	std	Z+4, r14	; 0x04
    3aae:	f5 82       	std	Z+5, r15	; 0x05
    3ab0:	06 83       	std	Z+6, r16	; 0x06
    3ab2:	17 83       	std	Z+7, r17	; 0x07
    3ab4:	83 e0       	ldi	r24, 0x03	; 3
    3ab6:	80 83       	st	Z, r24
    3ab8:	24 81       	ldd	r18, Z+4	; 0x04
    3aba:	35 81       	ldd	r19, Z+5	; 0x05
    3abc:	46 81       	ldd	r20, Z+6	; 0x06
    3abe:	57 81       	ldd	r21, Z+7	; 0x07
    3ac0:	57 ff       	sbrs	r21, 7
    3ac2:	1a c0       	rjmp	.+52     	; 0x3af8 <_fpadd_parts+0x286>
    3ac4:	c9 01       	movw	r24, r18
    3ac6:	aa 27       	eor	r26, r26
    3ac8:	97 fd       	sbrc	r25, 7
    3aca:	a0 95       	com	r26
    3acc:	ba 2f       	mov	r27, r26
    3ace:	81 70       	andi	r24, 0x01	; 1
    3ad0:	90 70       	andi	r25, 0x00	; 0
    3ad2:	a0 70       	andi	r26, 0x00	; 0
    3ad4:	b0 70       	andi	r27, 0x00	; 0
    3ad6:	56 95       	lsr	r21
    3ad8:	47 95       	ror	r20
    3ada:	37 95       	ror	r19
    3adc:	27 95       	ror	r18
    3ade:	82 2b       	or	r24, r18
    3ae0:	93 2b       	or	r25, r19
    3ae2:	a4 2b       	or	r26, r20
    3ae4:	b5 2b       	or	r27, r21
    3ae6:	84 83       	std	Z+4, r24	; 0x04
    3ae8:	95 83       	std	Z+5, r25	; 0x05
    3aea:	a6 83       	std	Z+6, r26	; 0x06
    3aec:	b7 83       	std	Z+7, r27	; 0x07
    3aee:	82 81       	ldd	r24, Z+2	; 0x02
    3af0:	93 81       	ldd	r25, Z+3	; 0x03
    3af2:	01 96       	adiw	r24, 0x01	; 1
    3af4:	93 83       	std	Z+3, r25	; 0x03
    3af6:	82 83       	std	Z+2, r24	; 0x02
    3af8:	df 01       	movw	r26, r30
    3afa:	01 c0       	rjmp	.+2      	; 0x3afe <_fpadd_parts+0x28c>
    3afc:	d2 01       	movw	r26, r4
    3afe:	cd 01       	movw	r24, r26
    3b00:	cd b7       	in	r28, 0x3d	; 61
    3b02:	de b7       	in	r29, 0x3e	; 62
    3b04:	e2 e1       	ldi	r30, 0x12	; 18
    3b06:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__>

00003b0a <__subsf3>:
    3b0a:	a0 e2       	ldi	r26, 0x20	; 32
    3b0c:	b0 e0       	ldi	r27, 0x00	; 0
    3b0e:	eb e8       	ldi	r30, 0x8B	; 139
    3b10:	fd e1       	ldi	r31, 0x1D	; 29
    3b12:	0c 94 62 22 	jmp	0x44c4	; 0x44c4 <__prologue_saves__+0x18>
    3b16:	69 83       	std	Y+1, r22	; 0x01
    3b18:	7a 83       	std	Y+2, r23	; 0x02
    3b1a:	8b 83       	std	Y+3, r24	; 0x03
    3b1c:	9c 83       	std	Y+4, r25	; 0x04
    3b1e:	2d 83       	std	Y+5, r18	; 0x05
    3b20:	3e 83       	std	Y+6, r19	; 0x06
    3b22:	4f 83       	std	Y+7, r20	; 0x07
    3b24:	58 87       	std	Y+8, r21	; 0x08
    3b26:	e9 e0       	ldi	r30, 0x09	; 9
    3b28:	ee 2e       	mov	r14, r30
    3b2a:	f1 2c       	mov	r15, r1
    3b2c:	ec 0e       	add	r14, r28
    3b2e:	fd 1e       	adc	r15, r29
    3b30:	ce 01       	movw	r24, r28
    3b32:	01 96       	adiw	r24, 0x01	; 1
    3b34:	b7 01       	movw	r22, r14
    3b36:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3b3a:	8e 01       	movw	r16, r28
    3b3c:	0f 5e       	subi	r16, 0xEF	; 239
    3b3e:	1f 4f       	sbci	r17, 0xFF	; 255
    3b40:	ce 01       	movw	r24, r28
    3b42:	05 96       	adiw	r24, 0x05	; 5
    3b44:	b8 01       	movw	r22, r16
    3b46:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3b4a:	8a 89       	ldd	r24, Y+18	; 0x12
    3b4c:	91 e0       	ldi	r25, 0x01	; 1
    3b4e:	89 27       	eor	r24, r25
    3b50:	8a 8b       	std	Y+18, r24	; 0x12
    3b52:	c7 01       	movw	r24, r14
    3b54:	b8 01       	movw	r22, r16
    3b56:	ae 01       	movw	r20, r28
    3b58:	47 5e       	subi	r20, 0xE7	; 231
    3b5a:	5f 4f       	sbci	r21, 0xFF	; 255
    3b5c:	0e 94 39 1c 	call	0x3872	; 0x3872 <_fpadd_parts>
    3b60:	0e 94 89 20 	call	0x4112	; 0x4112 <__pack_f>
    3b64:	a0 96       	adiw	r28, 0x20	; 32
    3b66:	e6 e0       	ldi	r30, 0x06	; 6
    3b68:	0c 94 7e 22 	jmp	0x44fc	; 0x44fc <__epilogue_restores__+0x18>

00003b6c <__addsf3>:
    3b6c:	a0 e2       	ldi	r26, 0x20	; 32
    3b6e:	b0 e0       	ldi	r27, 0x00	; 0
    3b70:	ec eb       	ldi	r30, 0xBC	; 188
    3b72:	fd e1       	ldi	r31, 0x1D	; 29
    3b74:	0c 94 62 22 	jmp	0x44c4	; 0x44c4 <__prologue_saves__+0x18>
    3b78:	69 83       	std	Y+1, r22	; 0x01
    3b7a:	7a 83       	std	Y+2, r23	; 0x02
    3b7c:	8b 83       	std	Y+3, r24	; 0x03
    3b7e:	9c 83       	std	Y+4, r25	; 0x04
    3b80:	2d 83       	std	Y+5, r18	; 0x05
    3b82:	3e 83       	std	Y+6, r19	; 0x06
    3b84:	4f 83       	std	Y+7, r20	; 0x07
    3b86:	58 87       	std	Y+8, r21	; 0x08
    3b88:	f9 e0       	ldi	r31, 0x09	; 9
    3b8a:	ef 2e       	mov	r14, r31
    3b8c:	f1 2c       	mov	r15, r1
    3b8e:	ec 0e       	add	r14, r28
    3b90:	fd 1e       	adc	r15, r29
    3b92:	ce 01       	movw	r24, r28
    3b94:	01 96       	adiw	r24, 0x01	; 1
    3b96:	b7 01       	movw	r22, r14
    3b98:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3b9c:	8e 01       	movw	r16, r28
    3b9e:	0f 5e       	subi	r16, 0xEF	; 239
    3ba0:	1f 4f       	sbci	r17, 0xFF	; 255
    3ba2:	ce 01       	movw	r24, r28
    3ba4:	05 96       	adiw	r24, 0x05	; 5
    3ba6:	b8 01       	movw	r22, r16
    3ba8:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3bac:	c7 01       	movw	r24, r14
    3bae:	b8 01       	movw	r22, r16
    3bb0:	ae 01       	movw	r20, r28
    3bb2:	47 5e       	subi	r20, 0xE7	; 231
    3bb4:	5f 4f       	sbci	r21, 0xFF	; 255
    3bb6:	0e 94 39 1c 	call	0x3872	; 0x3872 <_fpadd_parts>
    3bba:	0e 94 89 20 	call	0x4112	; 0x4112 <__pack_f>
    3bbe:	a0 96       	adiw	r28, 0x20	; 32
    3bc0:	e6 e0       	ldi	r30, 0x06	; 6
    3bc2:	0c 94 7e 22 	jmp	0x44fc	; 0x44fc <__epilogue_restores__+0x18>

00003bc6 <__mulsf3>:
    3bc6:	a0 e2       	ldi	r26, 0x20	; 32
    3bc8:	b0 e0       	ldi	r27, 0x00	; 0
    3bca:	e9 ee       	ldi	r30, 0xE9	; 233
    3bcc:	fd e1       	ldi	r31, 0x1D	; 29
    3bce:	0c 94 56 22 	jmp	0x44ac	; 0x44ac <__prologue_saves__>
    3bd2:	69 83       	std	Y+1, r22	; 0x01
    3bd4:	7a 83       	std	Y+2, r23	; 0x02
    3bd6:	8b 83       	std	Y+3, r24	; 0x03
    3bd8:	9c 83       	std	Y+4, r25	; 0x04
    3bda:	2d 83       	std	Y+5, r18	; 0x05
    3bdc:	3e 83       	std	Y+6, r19	; 0x06
    3bde:	4f 83       	std	Y+7, r20	; 0x07
    3be0:	58 87       	std	Y+8, r21	; 0x08
    3be2:	ce 01       	movw	r24, r28
    3be4:	01 96       	adiw	r24, 0x01	; 1
    3be6:	be 01       	movw	r22, r28
    3be8:	67 5f       	subi	r22, 0xF7	; 247
    3bea:	7f 4f       	sbci	r23, 0xFF	; 255
    3bec:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3bf0:	ce 01       	movw	r24, r28
    3bf2:	05 96       	adiw	r24, 0x05	; 5
    3bf4:	be 01       	movw	r22, r28
    3bf6:	6f 5e       	subi	r22, 0xEF	; 239
    3bf8:	7f 4f       	sbci	r23, 0xFF	; 255
    3bfa:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3bfe:	99 85       	ldd	r25, Y+9	; 0x09
    3c00:	92 30       	cpi	r25, 0x02	; 2
    3c02:	88 f0       	brcs	.+34     	; 0x3c26 <__mulsf3+0x60>
    3c04:	89 89       	ldd	r24, Y+17	; 0x11
    3c06:	82 30       	cpi	r24, 0x02	; 2
    3c08:	c8 f0       	brcs	.+50     	; 0x3c3c <__mulsf3+0x76>
    3c0a:	94 30       	cpi	r25, 0x04	; 4
    3c0c:	19 f4       	brne	.+6      	; 0x3c14 <__mulsf3+0x4e>
    3c0e:	82 30       	cpi	r24, 0x02	; 2
    3c10:	51 f4       	brne	.+20     	; 0x3c26 <__mulsf3+0x60>
    3c12:	04 c0       	rjmp	.+8      	; 0x3c1c <__mulsf3+0x56>
    3c14:	84 30       	cpi	r24, 0x04	; 4
    3c16:	29 f4       	brne	.+10     	; 0x3c22 <__mulsf3+0x5c>
    3c18:	92 30       	cpi	r25, 0x02	; 2
    3c1a:	81 f4       	brne	.+32     	; 0x3c3c <__mulsf3+0x76>
    3c1c:	80 e0       	ldi	r24, 0x00	; 0
    3c1e:	91 e0       	ldi	r25, 0x01	; 1
    3c20:	c6 c0       	rjmp	.+396    	; 0x3dae <__mulsf3+0x1e8>
    3c22:	92 30       	cpi	r25, 0x02	; 2
    3c24:	49 f4       	brne	.+18     	; 0x3c38 <__mulsf3+0x72>
    3c26:	20 e0       	ldi	r18, 0x00	; 0
    3c28:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c2a:	8a 89       	ldd	r24, Y+18	; 0x12
    3c2c:	98 13       	cpse	r25, r24
    3c2e:	21 e0       	ldi	r18, 0x01	; 1
    3c30:	2a 87       	std	Y+10, r18	; 0x0a
    3c32:	ce 01       	movw	r24, r28
    3c34:	09 96       	adiw	r24, 0x09	; 9
    3c36:	bb c0       	rjmp	.+374    	; 0x3dae <__mulsf3+0x1e8>
    3c38:	82 30       	cpi	r24, 0x02	; 2
    3c3a:	49 f4       	brne	.+18     	; 0x3c4e <__mulsf3+0x88>
    3c3c:	20 e0       	ldi	r18, 0x00	; 0
    3c3e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c40:	8a 89       	ldd	r24, Y+18	; 0x12
    3c42:	98 13       	cpse	r25, r24
    3c44:	21 e0       	ldi	r18, 0x01	; 1
    3c46:	2a 8b       	std	Y+18, r18	; 0x12
    3c48:	ce 01       	movw	r24, r28
    3c4a:	41 96       	adiw	r24, 0x11	; 17
    3c4c:	b0 c0       	rjmp	.+352    	; 0x3dae <__mulsf3+0x1e8>
    3c4e:	2d 84       	ldd	r2, Y+13	; 0x0d
    3c50:	3e 84       	ldd	r3, Y+14	; 0x0e
    3c52:	4f 84       	ldd	r4, Y+15	; 0x0f
    3c54:	58 88       	ldd	r5, Y+16	; 0x10
    3c56:	6d 88       	ldd	r6, Y+21	; 0x15
    3c58:	7e 88       	ldd	r7, Y+22	; 0x16
    3c5a:	8f 88       	ldd	r8, Y+23	; 0x17
    3c5c:	98 8c       	ldd	r9, Y+24	; 0x18
    3c5e:	ee 24       	eor	r14, r14
    3c60:	ff 24       	eor	r15, r15
    3c62:	87 01       	movw	r16, r14
    3c64:	aa 24       	eor	r10, r10
    3c66:	bb 24       	eor	r11, r11
    3c68:	65 01       	movw	r12, r10
    3c6a:	40 e0       	ldi	r20, 0x00	; 0
    3c6c:	50 e0       	ldi	r21, 0x00	; 0
    3c6e:	60 e0       	ldi	r22, 0x00	; 0
    3c70:	70 e0       	ldi	r23, 0x00	; 0
    3c72:	e0 e0       	ldi	r30, 0x00	; 0
    3c74:	f0 e0       	ldi	r31, 0x00	; 0
    3c76:	c1 01       	movw	r24, r2
    3c78:	81 70       	andi	r24, 0x01	; 1
    3c7a:	90 70       	andi	r25, 0x00	; 0
    3c7c:	89 2b       	or	r24, r25
    3c7e:	e9 f0       	breq	.+58     	; 0x3cba <__mulsf3+0xf4>
    3c80:	e6 0c       	add	r14, r6
    3c82:	f7 1c       	adc	r15, r7
    3c84:	08 1d       	adc	r16, r8
    3c86:	19 1d       	adc	r17, r9
    3c88:	9a 01       	movw	r18, r20
    3c8a:	ab 01       	movw	r20, r22
    3c8c:	2a 0d       	add	r18, r10
    3c8e:	3b 1d       	adc	r19, r11
    3c90:	4c 1d       	adc	r20, r12
    3c92:	5d 1d       	adc	r21, r13
    3c94:	80 e0       	ldi	r24, 0x00	; 0
    3c96:	90 e0       	ldi	r25, 0x00	; 0
    3c98:	a0 e0       	ldi	r26, 0x00	; 0
    3c9a:	b0 e0       	ldi	r27, 0x00	; 0
    3c9c:	e6 14       	cp	r14, r6
    3c9e:	f7 04       	cpc	r15, r7
    3ca0:	08 05       	cpc	r16, r8
    3ca2:	19 05       	cpc	r17, r9
    3ca4:	20 f4       	brcc	.+8      	; 0x3cae <__mulsf3+0xe8>
    3ca6:	81 e0       	ldi	r24, 0x01	; 1
    3ca8:	90 e0       	ldi	r25, 0x00	; 0
    3caa:	a0 e0       	ldi	r26, 0x00	; 0
    3cac:	b0 e0       	ldi	r27, 0x00	; 0
    3cae:	ba 01       	movw	r22, r20
    3cb0:	a9 01       	movw	r20, r18
    3cb2:	48 0f       	add	r20, r24
    3cb4:	59 1f       	adc	r21, r25
    3cb6:	6a 1f       	adc	r22, r26
    3cb8:	7b 1f       	adc	r23, r27
    3cba:	aa 0c       	add	r10, r10
    3cbc:	bb 1c       	adc	r11, r11
    3cbe:	cc 1c       	adc	r12, r12
    3cc0:	dd 1c       	adc	r13, r13
    3cc2:	97 fe       	sbrs	r9, 7
    3cc4:	08 c0       	rjmp	.+16     	; 0x3cd6 <__mulsf3+0x110>
    3cc6:	81 e0       	ldi	r24, 0x01	; 1
    3cc8:	90 e0       	ldi	r25, 0x00	; 0
    3cca:	a0 e0       	ldi	r26, 0x00	; 0
    3ccc:	b0 e0       	ldi	r27, 0x00	; 0
    3cce:	a8 2a       	or	r10, r24
    3cd0:	b9 2a       	or	r11, r25
    3cd2:	ca 2a       	or	r12, r26
    3cd4:	db 2a       	or	r13, r27
    3cd6:	31 96       	adiw	r30, 0x01	; 1
    3cd8:	e0 32       	cpi	r30, 0x20	; 32
    3cda:	f1 05       	cpc	r31, r1
    3cdc:	49 f0       	breq	.+18     	; 0x3cf0 <__mulsf3+0x12a>
    3cde:	66 0c       	add	r6, r6
    3ce0:	77 1c       	adc	r7, r7
    3ce2:	88 1c       	adc	r8, r8
    3ce4:	99 1c       	adc	r9, r9
    3ce6:	56 94       	lsr	r5
    3ce8:	47 94       	ror	r4
    3cea:	37 94       	ror	r3
    3cec:	27 94       	ror	r2
    3cee:	c3 cf       	rjmp	.-122    	; 0x3c76 <__mulsf3+0xb0>
    3cf0:	fa 85       	ldd	r31, Y+10	; 0x0a
    3cf2:	ea 89       	ldd	r30, Y+18	; 0x12
    3cf4:	2b 89       	ldd	r18, Y+19	; 0x13
    3cf6:	3c 89       	ldd	r19, Y+20	; 0x14
    3cf8:	8b 85       	ldd	r24, Y+11	; 0x0b
    3cfa:	9c 85       	ldd	r25, Y+12	; 0x0c
    3cfc:	28 0f       	add	r18, r24
    3cfe:	39 1f       	adc	r19, r25
    3d00:	2e 5f       	subi	r18, 0xFE	; 254
    3d02:	3f 4f       	sbci	r19, 0xFF	; 255
    3d04:	17 c0       	rjmp	.+46     	; 0x3d34 <__mulsf3+0x16e>
    3d06:	ca 01       	movw	r24, r20
    3d08:	81 70       	andi	r24, 0x01	; 1
    3d0a:	90 70       	andi	r25, 0x00	; 0
    3d0c:	89 2b       	or	r24, r25
    3d0e:	61 f0       	breq	.+24     	; 0x3d28 <__mulsf3+0x162>
    3d10:	16 95       	lsr	r17
    3d12:	07 95       	ror	r16
    3d14:	f7 94       	ror	r15
    3d16:	e7 94       	ror	r14
    3d18:	80 e0       	ldi	r24, 0x00	; 0
    3d1a:	90 e0       	ldi	r25, 0x00	; 0
    3d1c:	a0 e0       	ldi	r26, 0x00	; 0
    3d1e:	b0 e8       	ldi	r27, 0x80	; 128
    3d20:	e8 2a       	or	r14, r24
    3d22:	f9 2a       	or	r15, r25
    3d24:	0a 2b       	or	r16, r26
    3d26:	1b 2b       	or	r17, r27
    3d28:	76 95       	lsr	r23
    3d2a:	67 95       	ror	r22
    3d2c:	57 95       	ror	r21
    3d2e:	47 95       	ror	r20
    3d30:	2f 5f       	subi	r18, 0xFF	; 255
    3d32:	3f 4f       	sbci	r19, 0xFF	; 255
    3d34:	77 fd       	sbrc	r23, 7
    3d36:	e7 cf       	rjmp	.-50     	; 0x3d06 <__mulsf3+0x140>
    3d38:	0c c0       	rjmp	.+24     	; 0x3d52 <__mulsf3+0x18c>
    3d3a:	44 0f       	add	r20, r20
    3d3c:	55 1f       	adc	r21, r21
    3d3e:	66 1f       	adc	r22, r22
    3d40:	77 1f       	adc	r23, r23
    3d42:	17 fd       	sbrc	r17, 7
    3d44:	41 60       	ori	r20, 0x01	; 1
    3d46:	ee 0c       	add	r14, r14
    3d48:	ff 1c       	adc	r15, r15
    3d4a:	00 1f       	adc	r16, r16
    3d4c:	11 1f       	adc	r17, r17
    3d4e:	21 50       	subi	r18, 0x01	; 1
    3d50:	30 40       	sbci	r19, 0x00	; 0
    3d52:	40 30       	cpi	r20, 0x00	; 0
    3d54:	90 e0       	ldi	r25, 0x00	; 0
    3d56:	59 07       	cpc	r21, r25
    3d58:	90 e0       	ldi	r25, 0x00	; 0
    3d5a:	69 07       	cpc	r22, r25
    3d5c:	90 e4       	ldi	r25, 0x40	; 64
    3d5e:	79 07       	cpc	r23, r25
    3d60:	60 f3       	brcs	.-40     	; 0x3d3a <__mulsf3+0x174>
    3d62:	2b 8f       	std	Y+27, r18	; 0x1b
    3d64:	3c 8f       	std	Y+28, r19	; 0x1c
    3d66:	db 01       	movw	r26, r22
    3d68:	ca 01       	movw	r24, r20
    3d6a:	8f 77       	andi	r24, 0x7F	; 127
    3d6c:	90 70       	andi	r25, 0x00	; 0
    3d6e:	a0 70       	andi	r26, 0x00	; 0
    3d70:	b0 70       	andi	r27, 0x00	; 0
    3d72:	80 34       	cpi	r24, 0x40	; 64
    3d74:	91 05       	cpc	r25, r1
    3d76:	a1 05       	cpc	r26, r1
    3d78:	b1 05       	cpc	r27, r1
    3d7a:	61 f4       	brne	.+24     	; 0x3d94 <__mulsf3+0x1ce>
    3d7c:	47 fd       	sbrc	r20, 7
    3d7e:	0a c0       	rjmp	.+20     	; 0x3d94 <__mulsf3+0x1ce>
    3d80:	e1 14       	cp	r14, r1
    3d82:	f1 04       	cpc	r15, r1
    3d84:	01 05       	cpc	r16, r1
    3d86:	11 05       	cpc	r17, r1
    3d88:	29 f0       	breq	.+10     	; 0x3d94 <__mulsf3+0x1ce>
    3d8a:	40 5c       	subi	r20, 0xC0	; 192
    3d8c:	5f 4f       	sbci	r21, 0xFF	; 255
    3d8e:	6f 4f       	sbci	r22, 0xFF	; 255
    3d90:	7f 4f       	sbci	r23, 0xFF	; 255
    3d92:	40 78       	andi	r20, 0x80	; 128
    3d94:	1a 8e       	std	Y+26, r1	; 0x1a
    3d96:	fe 17       	cp	r31, r30
    3d98:	11 f0       	breq	.+4      	; 0x3d9e <__mulsf3+0x1d8>
    3d9a:	81 e0       	ldi	r24, 0x01	; 1
    3d9c:	8a 8f       	std	Y+26, r24	; 0x1a
    3d9e:	4d 8f       	std	Y+29, r20	; 0x1d
    3da0:	5e 8f       	std	Y+30, r21	; 0x1e
    3da2:	6f 8f       	std	Y+31, r22	; 0x1f
    3da4:	78 a3       	std	Y+32, r23	; 0x20
    3da6:	83 e0       	ldi	r24, 0x03	; 3
    3da8:	89 8f       	std	Y+25, r24	; 0x19
    3daa:	ce 01       	movw	r24, r28
    3dac:	49 96       	adiw	r24, 0x19	; 25
    3dae:	0e 94 89 20 	call	0x4112	; 0x4112 <__pack_f>
    3db2:	a0 96       	adiw	r28, 0x20	; 32
    3db4:	e2 e1       	ldi	r30, 0x12	; 18
    3db6:	0c 94 72 22 	jmp	0x44e4	; 0x44e4 <__epilogue_restores__>

00003dba <__gtsf2>:
    3dba:	a8 e1       	ldi	r26, 0x18	; 24
    3dbc:	b0 e0       	ldi	r27, 0x00	; 0
    3dbe:	e3 ee       	ldi	r30, 0xE3	; 227
    3dc0:	fe e1       	ldi	r31, 0x1E	; 30
    3dc2:	0c 94 62 22 	jmp	0x44c4	; 0x44c4 <__prologue_saves__+0x18>
    3dc6:	69 83       	std	Y+1, r22	; 0x01
    3dc8:	7a 83       	std	Y+2, r23	; 0x02
    3dca:	8b 83       	std	Y+3, r24	; 0x03
    3dcc:	9c 83       	std	Y+4, r25	; 0x04
    3dce:	2d 83       	std	Y+5, r18	; 0x05
    3dd0:	3e 83       	std	Y+6, r19	; 0x06
    3dd2:	4f 83       	std	Y+7, r20	; 0x07
    3dd4:	58 87       	std	Y+8, r21	; 0x08
    3dd6:	89 e0       	ldi	r24, 0x09	; 9
    3dd8:	e8 2e       	mov	r14, r24
    3dda:	f1 2c       	mov	r15, r1
    3ddc:	ec 0e       	add	r14, r28
    3dde:	fd 1e       	adc	r15, r29
    3de0:	ce 01       	movw	r24, r28
    3de2:	01 96       	adiw	r24, 0x01	; 1
    3de4:	b7 01       	movw	r22, r14
    3de6:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3dea:	8e 01       	movw	r16, r28
    3dec:	0f 5e       	subi	r16, 0xEF	; 239
    3dee:	1f 4f       	sbci	r17, 0xFF	; 255
    3df0:	ce 01       	movw	r24, r28
    3df2:	05 96       	adiw	r24, 0x05	; 5
    3df4:	b8 01       	movw	r22, r16
    3df6:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3dfa:	89 85       	ldd	r24, Y+9	; 0x09
    3dfc:	82 30       	cpi	r24, 0x02	; 2
    3dfe:	40 f0       	brcs	.+16     	; 0x3e10 <__gtsf2+0x56>
    3e00:	89 89       	ldd	r24, Y+17	; 0x11
    3e02:	82 30       	cpi	r24, 0x02	; 2
    3e04:	28 f0       	brcs	.+10     	; 0x3e10 <__gtsf2+0x56>
    3e06:	c7 01       	movw	r24, r14
    3e08:	b8 01       	movw	r22, r16
    3e0a:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__fpcmp_parts_f>
    3e0e:	01 c0       	rjmp	.+2      	; 0x3e12 <__gtsf2+0x58>
    3e10:	8f ef       	ldi	r24, 0xFF	; 255
    3e12:	68 96       	adiw	r28, 0x18	; 24
    3e14:	e6 e0       	ldi	r30, 0x06	; 6
    3e16:	0c 94 7e 22 	jmp	0x44fc	; 0x44fc <__epilogue_restores__+0x18>

00003e1a <__gesf2>:
    3e1a:	a8 e1       	ldi	r26, 0x18	; 24
    3e1c:	b0 e0       	ldi	r27, 0x00	; 0
    3e1e:	e3 e1       	ldi	r30, 0x13	; 19
    3e20:	ff e1       	ldi	r31, 0x1F	; 31
    3e22:	0c 94 62 22 	jmp	0x44c4	; 0x44c4 <__prologue_saves__+0x18>
    3e26:	69 83       	std	Y+1, r22	; 0x01
    3e28:	7a 83       	std	Y+2, r23	; 0x02
    3e2a:	8b 83       	std	Y+3, r24	; 0x03
    3e2c:	9c 83       	std	Y+4, r25	; 0x04
    3e2e:	2d 83       	std	Y+5, r18	; 0x05
    3e30:	3e 83       	std	Y+6, r19	; 0x06
    3e32:	4f 83       	std	Y+7, r20	; 0x07
    3e34:	58 87       	std	Y+8, r21	; 0x08
    3e36:	89 e0       	ldi	r24, 0x09	; 9
    3e38:	e8 2e       	mov	r14, r24
    3e3a:	f1 2c       	mov	r15, r1
    3e3c:	ec 0e       	add	r14, r28
    3e3e:	fd 1e       	adc	r15, r29
    3e40:	ce 01       	movw	r24, r28
    3e42:	01 96       	adiw	r24, 0x01	; 1
    3e44:	b7 01       	movw	r22, r14
    3e46:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3e4a:	8e 01       	movw	r16, r28
    3e4c:	0f 5e       	subi	r16, 0xEF	; 239
    3e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    3e50:	ce 01       	movw	r24, r28
    3e52:	05 96       	adiw	r24, 0x05	; 5
    3e54:	b8 01       	movw	r22, r16
    3e56:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3e5a:	89 85       	ldd	r24, Y+9	; 0x09
    3e5c:	82 30       	cpi	r24, 0x02	; 2
    3e5e:	40 f0       	brcs	.+16     	; 0x3e70 <__gesf2+0x56>
    3e60:	89 89       	ldd	r24, Y+17	; 0x11
    3e62:	82 30       	cpi	r24, 0x02	; 2
    3e64:	28 f0       	brcs	.+10     	; 0x3e70 <__gesf2+0x56>
    3e66:	c7 01       	movw	r24, r14
    3e68:	b8 01       	movw	r22, r16
    3e6a:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__fpcmp_parts_f>
    3e6e:	01 c0       	rjmp	.+2      	; 0x3e72 <__gesf2+0x58>
    3e70:	8f ef       	ldi	r24, 0xFF	; 255
    3e72:	68 96       	adiw	r28, 0x18	; 24
    3e74:	e6 e0       	ldi	r30, 0x06	; 6
    3e76:	0c 94 7e 22 	jmp	0x44fc	; 0x44fc <__epilogue_restores__+0x18>

00003e7a <__ltsf2>:
    3e7a:	a8 e1       	ldi	r26, 0x18	; 24
    3e7c:	b0 e0       	ldi	r27, 0x00	; 0
    3e7e:	e3 e4       	ldi	r30, 0x43	; 67
    3e80:	ff e1       	ldi	r31, 0x1F	; 31
    3e82:	0c 94 62 22 	jmp	0x44c4	; 0x44c4 <__prologue_saves__+0x18>
    3e86:	69 83       	std	Y+1, r22	; 0x01
    3e88:	7a 83       	std	Y+2, r23	; 0x02
    3e8a:	8b 83       	std	Y+3, r24	; 0x03
    3e8c:	9c 83       	std	Y+4, r25	; 0x04
    3e8e:	2d 83       	std	Y+5, r18	; 0x05
    3e90:	3e 83       	std	Y+6, r19	; 0x06
    3e92:	4f 83       	std	Y+7, r20	; 0x07
    3e94:	58 87       	std	Y+8, r21	; 0x08
    3e96:	89 e0       	ldi	r24, 0x09	; 9
    3e98:	e8 2e       	mov	r14, r24
    3e9a:	f1 2c       	mov	r15, r1
    3e9c:	ec 0e       	add	r14, r28
    3e9e:	fd 1e       	adc	r15, r29
    3ea0:	ce 01       	movw	r24, r28
    3ea2:	01 96       	adiw	r24, 0x01	; 1
    3ea4:	b7 01       	movw	r22, r14
    3ea6:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3eaa:	8e 01       	movw	r16, r28
    3eac:	0f 5e       	subi	r16, 0xEF	; 239
    3eae:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb0:	ce 01       	movw	r24, r28
    3eb2:	05 96       	adiw	r24, 0x05	; 5
    3eb4:	b8 01       	movw	r22, r16
    3eb6:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3eba:	89 85       	ldd	r24, Y+9	; 0x09
    3ebc:	82 30       	cpi	r24, 0x02	; 2
    3ebe:	40 f0       	brcs	.+16     	; 0x3ed0 <__ltsf2+0x56>
    3ec0:	89 89       	ldd	r24, Y+17	; 0x11
    3ec2:	82 30       	cpi	r24, 0x02	; 2
    3ec4:	28 f0       	brcs	.+10     	; 0x3ed0 <__ltsf2+0x56>
    3ec6:	c7 01       	movw	r24, r14
    3ec8:	b8 01       	movw	r22, r16
    3eca:	0e 94 d6 21 	call	0x43ac	; 0x43ac <__fpcmp_parts_f>
    3ece:	01 c0       	rjmp	.+2      	; 0x3ed2 <__ltsf2+0x58>
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	68 96       	adiw	r28, 0x18	; 24
    3ed4:	e6 e0       	ldi	r30, 0x06	; 6
    3ed6:	0c 94 7e 22 	jmp	0x44fc	; 0x44fc <__epilogue_restores__+0x18>

00003eda <__fixsfsi>:
    3eda:	ac e0       	ldi	r26, 0x0C	; 12
    3edc:	b0 e0       	ldi	r27, 0x00	; 0
    3ede:	e3 e7       	ldi	r30, 0x73	; 115
    3ee0:	ff e1       	ldi	r31, 0x1F	; 31
    3ee2:	0c 94 66 22 	jmp	0x44cc	; 0x44cc <__prologue_saves__+0x20>
    3ee6:	69 83       	std	Y+1, r22	; 0x01
    3ee8:	7a 83       	std	Y+2, r23	; 0x02
    3eea:	8b 83       	std	Y+3, r24	; 0x03
    3eec:	9c 83       	std	Y+4, r25	; 0x04
    3eee:	ce 01       	movw	r24, r28
    3ef0:	01 96       	adiw	r24, 0x01	; 1
    3ef2:	be 01       	movw	r22, r28
    3ef4:	6b 5f       	subi	r22, 0xFB	; 251
    3ef6:	7f 4f       	sbci	r23, 0xFF	; 255
    3ef8:	0e 94 5e 21 	call	0x42bc	; 0x42bc <__unpack_f>
    3efc:	8d 81       	ldd	r24, Y+5	; 0x05
    3efe:	82 30       	cpi	r24, 0x02	; 2
    3f00:	61 f1       	breq	.+88     	; 0x3f5a <__fixsfsi+0x80>
    3f02:	82 30       	cpi	r24, 0x02	; 2
    3f04:	50 f1       	brcs	.+84     	; 0x3f5a <__fixsfsi+0x80>
    3f06:	84 30       	cpi	r24, 0x04	; 4
    3f08:	21 f4       	brne	.+8      	; 0x3f12 <__fixsfsi+0x38>
    3f0a:	8e 81       	ldd	r24, Y+6	; 0x06
    3f0c:	88 23       	and	r24, r24
    3f0e:	51 f1       	breq	.+84     	; 0x3f64 <__fixsfsi+0x8a>
    3f10:	2e c0       	rjmp	.+92     	; 0x3f6e <__fixsfsi+0x94>
    3f12:	2f 81       	ldd	r18, Y+7	; 0x07
    3f14:	38 85       	ldd	r19, Y+8	; 0x08
    3f16:	37 fd       	sbrc	r19, 7
    3f18:	20 c0       	rjmp	.+64     	; 0x3f5a <__fixsfsi+0x80>
    3f1a:	6e 81       	ldd	r22, Y+6	; 0x06
    3f1c:	2f 31       	cpi	r18, 0x1F	; 31
    3f1e:	31 05       	cpc	r19, r1
    3f20:	1c f0       	brlt	.+6      	; 0x3f28 <__fixsfsi+0x4e>
    3f22:	66 23       	and	r22, r22
    3f24:	f9 f0       	breq	.+62     	; 0x3f64 <__fixsfsi+0x8a>
    3f26:	23 c0       	rjmp	.+70     	; 0x3f6e <__fixsfsi+0x94>
    3f28:	8e e1       	ldi	r24, 0x1E	; 30
    3f2a:	90 e0       	ldi	r25, 0x00	; 0
    3f2c:	82 1b       	sub	r24, r18
    3f2e:	93 0b       	sbc	r25, r19
    3f30:	29 85       	ldd	r18, Y+9	; 0x09
    3f32:	3a 85       	ldd	r19, Y+10	; 0x0a
    3f34:	4b 85       	ldd	r20, Y+11	; 0x0b
    3f36:	5c 85       	ldd	r21, Y+12	; 0x0c
    3f38:	04 c0       	rjmp	.+8      	; 0x3f42 <__fixsfsi+0x68>
    3f3a:	56 95       	lsr	r21
    3f3c:	47 95       	ror	r20
    3f3e:	37 95       	ror	r19
    3f40:	27 95       	ror	r18
    3f42:	8a 95       	dec	r24
    3f44:	d2 f7       	brpl	.-12     	; 0x3f3a <__fixsfsi+0x60>
    3f46:	66 23       	and	r22, r22
    3f48:	b1 f0       	breq	.+44     	; 0x3f76 <__fixsfsi+0x9c>
    3f4a:	50 95       	com	r21
    3f4c:	40 95       	com	r20
    3f4e:	30 95       	com	r19
    3f50:	21 95       	neg	r18
    3f52:	3f 4f       	sbci	r19, 0xFF	; 255
    3f54:	4f 4f       	sbci	r20, 0xFF	; 255
    3f56:	5f 4f       	sbci	r21, 0xFF	; 255
    3f58:	0e c0       	rjmp	.+28     	; 0x3f76 <__fixsfsi+0x9c>
    3f5a:	20 e0       	ldi	r18, 0x00	; 0
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	40 e0       	ldi	r20, 0x00	; 0
    3f60:	50 e0       	ldi	r21, 0x00	; 0
    3f62:	09 c0       	rjmp	.+18     	; 0x3f76 <__fixsfsi+0x9c>
    3f64:	2f ef       	ldi	r18, 0xFF	; 255
    3f66:	3f ef       	ldi	r19, 0xFF	; 255
    3f68:	4f ef       	ldi	r20, 0xFF	; 255
    3f6a:	5f e7       	ldi	r21, 0x7F	; 127
    3f6c:	04 c0       	rjmp	.+8      	; 0x3f76 <__fixsfsi+0x9c>
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	40 e0       	ldi	r20, 0x00	; 0
    3f74:	50 e8       	ldi	r21, 0x80	; 128
    3f76:	b9 01       	movw	r22, r18
    3f78:	ca 01       	movw	r24, r20
    3f7a:	2c 96       	adiw	r28, 0x0c	; 12
    3f7c:	e2 e0       	ldi	r30, 0x02	; 2
    3f7e:	0c 94 82 22 	jmp	0x4504	; 0x4504 <__epilogue_restores__+0x20>

00003f82 <__floatunsisf>:
    3f82:	a8 e0       	ldi	r26, 0x08	; 8
    3f84:	b0 e0       	ldi	r27, 0x00	; 0
    3f86:	e7 ec       	ldi	r30, 0xC7	; 199
    3f88:	ff e1       	ldi	r31, 0x1F	; 31
    3f8a:	0c 94 5e 22 	jmp	0x44bc	; 0x44bc <__prologue_saves__+0x10>
    3f8e:	7b 01       	movw	r14, r22
    3f90:	8c 01       	movw	r16, r24
    3f92:	61 15       	cp	r22, r1
    3f94:	71 05       	cpc	r23, r1
    3f96:	81 05       	cpc	r24, r1
    3f98:	91 05       	cpc	r25, r1
    3f9a:	19 f4       	brne	.+6      	; 0x3fa2 <__floatunsisf+0x20>
    3f9c:	82 e0       	ldi	r24, 0x02	; 2
    3f9e:	89 83       	std	Y+1, r24	; 0x01
    3fa0:	60 c0       	rjmp	.+192    	; 0x4062 <__floatunsisf+0xe0>
    3fa2:	83 e0       	ldi	r24, 0x03	; 3
    3fa4:	89 83       	std	Y+1, r24	; 0x01
    3fa6:	8e e1       	ldi	r24, 0x1E	; 30
    3fa8:	c8 2e       	mov	r12, r24
    3faa:	d1 2c       	mov	r13, r1
    3fac:	dc 82       	std	Y+4, r13	; 0x04
    3fae:	cb 82       	std	Y+3, r12	; 0x03
    3fb0:	ed 82       	std	Y+5, r14	; 0x05
    3fb2:	fe 82       	std	Y+6, r15	; 0x06
    3fb4:	0f 83       	std	Y+7, r16	; 0x07
    3fb6:	18 87       	std	Y+8, r17	; 0x08
    3fb8:	c8 01       	movw	r24, r16
    3fba:	b7 01       	movw	r22, r14
    3fbc:	0e 94 3a 20 	call	0x4074	; 0x4074 <__clzsi2>
    3fc0:	fc 01       	movw	r30, r24
    3fc2:	31 97       	sbiw	r30, 0x01	; 1
    3fc4:	f7 ff       	sbrs	r31, 7
    3fc6:	3b c0       	rjmp	.+118    	; 0x403e <__floatunsisf+0xbc>
    3fc8:	22 27       	eor	r18, r18
    3fca:	33 27       	eor	r19, r19
    3fcc:	2e 1b       	sub	r18, r30
    3fce:	3f 0b       	sbc	r19, r31
    3fd0:	57 01       	movw	r10, r14
    3fd2:	68 01       	movw	r12, r16
    3fd4:	02 2e       	mov	r0, r18
    3fd6:	04 c0       	rjmp	.+8      	; 0x3fe0 <__floatunsisf+0x5e>
    3fd8:	d6 94       	lsr	r13
    3fda:	c7 94       	ror	r12
    3fdc:	b7 94       	ror	r11
    3fde:	a7 94       	ror	r10
    3fe0:	0a 94       	dec	r0
    3fe2:	d2 f7       	brpl	.-12     	; 0x3fd8 <__floatunsisf+0x56>
    3fe4:	40 e0       	ldi	r20, 0x00	; 0
    3fe6:	50 e0       	ldi	r21, 0x00	; 0
    3fe8:	60 e0       	ldi	r22, 0x00	; 0
    3fea:	70 e0       	ldi	r23, 0x00	; 0
    3fec:	81 e0       	ldi	r24, 0x01	; 1
    3fee:	90 e0       	ldi	r25, 0x00	; 0
    3ff0:	a0 e0       	ldi	r26, 0x00	; 0
    3ff2:	b0 e0       	ldi	r27, 0x00	; 0
    3ff4:	04 c0       	rjmp	.+8      	; 0x3ffe <__floatunsisf+0x7c>
    3ff6:	88 0f       	add	r24, r24
    3ff8:	99 1f       	adc	r25, r25
    3ffa:	aa 1f       	adc	r26, r26
    3ffc:	bb 1f       	adc	r27, r27
    3ffe:	2a 95       	dec	r18
    4000:	d2 f7       	brpl	.-12     	; 0x3ff6 <__floatunsisf+0x74>
    4002:	01 97       	sbiw	r24, 0x01	; 1
    4004:	a1 09       	sbc	r26, r1
    4006:	b1 09       	sbc	r27, r1
    4008:	8e 21       	and	r24, r14
    400a:	9f 21       	and	r25, r15
    400c:	a0 23       	and	r26, r16
    400e:	b1 23       	and	r27, r17
    4010:	00 97       	sbiw	r24, 0x00	; 0
    4012:	a1 05       	cpc	r26, r1
    4014:	b1 05       	cpc	r27, r1
    4016:	21 f0       	breq	.+8      	; 0x4020 <__floatunsisf+0x9e>
    4018:	41 e0       	ldi	r20, 0x01	; 1
    401a:	50 e0       	ldi	r21, 0x00	; 0
    401c:	60 e0       	ldi	r22, 0x00	; 0
    401e:	70 e0       	ldi	r23, 0x00	; 0
    4020:	4a 29       	or	r20, r10
    4022:	5b 29       	or	r21, r11
    4024:	6c 29       	or	r22, r12
    4026:	7d 29       	or	r23, r13
    4028:	4d 83       	std	Y+5, r20	; 0x05
    402a:	5e 83       	std	Y+6, r21	; 0x06
    402c:	6f 83       	std	Y+7, r22	; 0x07
    402e:	78 87       	std	Y+8, r23	; 0x08
    4030:	8e e1       	ldi	r24, 0x1E	; 30
    4032:	90 e0       	ldi	r25, 0x00	; 0
    4034:	8e 1b       	sub	r24, r30
    4036:	9f 0b       	sbc	r25, r31
    4038:	9c 83       	std	Y+4, r25	; 0x04
    403a:	8b 83       	std	Y+3, r24	; 0x03
    403c:	12 c0       	rjmp	.+36     	; 0x4062 <__floatunsisf+0xe0>
    403e:	30 97       	sbiw	r30, 0x00	; 0
    4040:	81 f0       	breq	.+32     	; 0x4062 <__floatunsisf+0xe0>
    4042:	0e 2e       	mov	r0, r30
    4044:	04 c0       	rjmp	.+8      	; 0x404e <__floatunsisf+0xcc>
    4046:	ee 0c       	add	r14, r14
    4048:	ff 1c       	adc	r15, r15
    404a:	00 1f       	adc	r16, r16
    404c:	11 1f       	adc	r17, r17
    404e:	0a 94       	dec	r0
    4050:	d2 f7       	brpl	.-12     	; 0x4046 <__floatunsisf+0xc4>
    4052:	ed 82       	std	Y+5, r14	; 0x05
    4054:	fe 82       	std	Y+6, r15	; 0x06
    4056:	0f 83       	std	Y+7, r16	; 0x07
    4058:	18 87       	std	Y+8, r17	; 0x08
    405a:	ce 1a       	sub	r12, r30
    405c:	df 0a       	sbc	r13, r31
    405e:	dc 82       	std	Y+4, r13	; 0x04
    4060:	cb 82       	std	Y+3, r12	; 0x03
    4062:	1a 82       	std	Y+2, r1	; 0x02
    4064:	ce 01       	movw	r24, r28
    4066:	01 96       	adiw	r24, 0x01	; 1
    4068:	0e 94 89 20 	call	0x4112	; 0x4112 <__pack_f>
    406c:	28 96       	adiw	r28, 0x08	; 8
    406e:	ea e0       	ldi	r30, 0x0A	; 10
    4070:	0c 94 7a 22 	jmp	0x44f4	; 0x44f4 <__epilogue_restores__+0x10>

00004074 <__clzsi2>:
    4074:	ef 92       	push	r14
    4076:	ff 92       	push	r15
    4078:	0f 93       	push	r16
    407a:	1f 93       	push	r17
    407c:	7b 01       	movw	r14, r22
    407e:	8c 01       	movw	r16, r24
    4080:	80 e0       	ldi	r24, 0x00	; 0
    4082:	e8 16       	cp	r14, r24
    4084:	80 e0       	ldi	r24, 0x00	; 0
    4086:	f8 06       	cpc	r15, r24
    4088:	81 e0       	ldi	r24, 0x01	; 1
    408a:	08 07       	cpc	r16, r24
    408c:	80 e0       	ldi	r24, 0x00	; 0
    408e:	18 07       	cpc	r17, r24
    4090:	88 f4       	brcc	.+34     	; 0x40b4 <__clzsi2+0x40>
    4092:	8f ef       	ldi	r24, 0xFF	; 255
    4094:	e8 16       	cp	r14, r24
    4096:	f1 04       	cpc	r15, r1
    4098:	01 05       	cpc	r16, r1
    409a:	11 05       	cpc	r17, r1
    409c:	31 f0       	breq	.+12     	; 0x40aa <__clzsi2+0x36>
    409e:	28 f0       	brcs	.+10     	; 0x40aa <__clzsi2+0x36>
    40a0:	88 e0       	ldi	r24, 0x08	; 8
    40a2:	90 e0       	ldi	r25, 0x00	; 0
    40a4:	a0 e0       	ldi	r26, 0x00	; 0
    40a6:	b0 e0       	ldi	r27, 0x00	; 0
    40a8:	17 c0       	rjmp	.+46     	; 0x40d8 <__clzsi2+0x64>
    40aa:	80 e0       	ldi	r24, 0x00	; 0
    40ac:	90 e0       	ldi	r25, 0x00	; 0
    40ae:	a0 e0       	ldi	r26, 0x00	; 0
    40b0:	b0 e0       	ldi	r27, 0x00	; 0
    40b2:	12 c0       	rjmp	.+36     	; 0x40d8 <__clzsi2+0x64>
    40b4:	80 e0       	ldi	r24, 0x00	; 0
    40b6:	e8 16       	cp	r14, r24
    40b8:	80 e0       	ldi	r24, 0x00	; 0
    40ba:	f8 06       	cpc	r15, r24
    40bc:	80 e0       	ldi	r24, 0x00	; 0
    40be:	08 07       	cpc	r16, r24
    40c0:	81 e0       	ldi	r24, 0x01	; 1
    40c2:	18 07       	cpc	r17, r24
    40c4:	28 f0       	brcs	.+10     	; 0x40d0 <__clzsi2+0x5c>
    40c6:	88 e1       	ldi	r24, 0x18	; 24
    40c8:	90 e0       	ldi	r25, 0x00	; 0
    40ca:	a0 e0       	ldi	r26, 0x00	; 0
    40cc:	b0 e0       	ldi	r27, 0x00	; 0
    40ce:	04 c0       	rjmp	.+8      	; 0x40d8 <__clzsi2+0x64>
    40d0:	80 e1       	ldi	r24, 0x10	; 16
    40d2:	90 e0       	ldi	r25, 0x00	; 0
    40d4:	a0 e0       	ldi	r26, 0x00	; 0
    40d6:	b0 e0       	ldi	r27, 0x00	; 0
    40d8:	20 e2       	ldi	r18, 0x20	; 32
    40da:	30 e0       	ldi	r19, 0x00	; 0
    40dc:	40 e0       	ldi	r20, 0x00	; 0
    40de:	50 e0       	ldi	r21, 0x00	; 0
    40e0:	28 1b       	sub	r18, r24
    40e2:	39 0b       	sbc	r19, r25
    40e4:	4a 0b       	sbc	r20, r26
    40e6:	5b 0b       	sbc	r21, r27
    40e8:	04 c0       	rjmp	.+8      	; 0x40f2 <__clzsi2+0x7e>
    40ea:	16 95       	lsr	r17
    40ec:	07 95       	ror	r16
    40ee:	f7 94       	ror	r15
    40f0:	e7 94       	ror	r14
    40f2:	8a 95       	dec	r24
    40f4:	d2 f7       	brpl	.-12     	; 0x40ea <__clzsi2+0x76>
    40f6:	f7 01       	movw	r30, r14
    40f8:	e8 5f       	subi	r30, 0xF8	; 248
    40fa:	fe 4f       	sbci	r31, 0xFE	; 254
    40fc:	80 81       	ld	r24, Z
    40fe:	28 1b       	sub	r18, r24
    4100:	31 09       	sbc	r19, r1
    4102:	41 09       	sbc	r20, r1
    4104:	51 09       	sbc	r21, r1
    4106:	c9 01       	movw	r24, r18
    4108:	1f 91       	pop	r17
    410a:	0f 91       	pop	r16
    410c:	ff 90       	pop	r15
    410e:	ef 90       	pop	r14
    4110:	08 95       	ret

00004112 <__pack_f>:
    4112:	df 92       	push	r13
    4114:	ef 92       	push	r14
    4116:	ff 92       	push	r15
    4118:	0f 93       	push	r16
    411a:	1f 93       	push	r17
    411c:	fc 01       	movw	r30, r24
    411e:	e4 80       	ldd	r14, Z+4	; 0x04
    4120:	f5 80       	ldd	r15, Z+5	; 0x05
    4122:	06 81       	ldd	r16, Z+6	; 0x06
    4124:	17 81       	ldd	r17, Z+7	; 0x07
    4126:	d1 80       	ldd	r13, Z+1	; 0x01
    4128:	80 81       	ld	r24, Z
    412a:	82 30       	cpi	r24, 0x02	; 2
    412c:	48 f4       	brcc	.+18     	; 0x4140 <__pack_f+0x2e>
    412e:	80 e0       	ldi	r24, 0x00	; 0
    4130:	90 e0       	ldi	r25, 0x00	; 0
    4132:	a0 e1       	ldi	r26, 0x10	; 16
    4134:	b0 e0       	ldi	r27, 0x00	; 0
    4136:	e8 2a       	or	r14, r24
    4138:	f9 2a       	or	r15, r25
    413a:	0a 2b       	or	r16, r26
    413c:	1b 2b       	or	r17, r27
    413e:	a5 c0       	rjmp	.+330    	; 0x428a <__pack_f+0x178>
    4140:	84 30       	cpi	r24, 0x04	; 4
    4142:	09 f4       	brne	.+2      	; 0x4146 <__pack_f+0x34>
    4144:	9f c0       	rjmp	.+318    	; 0x4284 <__pack_f+0x172>
    4146:	82 30       	cpi	r24, 0x02	; 2
    4148:	21 f4       	brne	.+8      	; 0x4152 <__pack_f+0x40>
    414a:	ee 24       	eor	r14, r14
    414c:	ff 24       	eor	r15, r15
    414e:	87 01       	movw	r16, r14
    4150:	05 c0       	rjmp	.+10     	; 0x415c <__pack_f+0x4a>
    4152:	e1 14       	cp	r14, r1
    4154:	f1 04       	cpc	r15, r1
    4156:	01 05       	cpc	r16, r1
    4158:	11 05       	cpc	r17, r1
    415a:	19 f4       	brne	.+6      	; 0x4162 <__pack_f+0x50>
    415c:	e0 e0       	ldi	r30, 0x00	; 0
    415e:	f0 e0       	ldi	r31, 0x00	; 0
    4160:	96 c0       	rjmp	.+300    	; 0x428e <__pack_f+0x17c>
    4162:	62 81       	ldd	r22, Z+2	; 0x02
    4164:	73 81       	ldd	r23, Z+3	; 0x03
    4166:	9f ef       	ldi	r25, 0xFF	; 255
    4168:	62 38       	cpi	r22, 0x82	; 130
    416a:	79 07       	cpc	r23, r25
    416c:	0c f0       	brlt	.+2      	; 0x4170 <__pack_f+0x5e>
    416e:	5b c0       	rjmp	.+182    	; 0x4226 <__pack_f+0x114>
    4170:	22 e8       	ldi	r18, 0x82	; 130
    4172:	3f ef       	ldi	r19, 0xFF	; 255
    4174:	26 1b       	sub	r18, r22
    4176:	37 0b       	sbc	r19, r23
    4178:	2a 31       	cpi	r18, 0x1A	; 26
    417a:	31 05       	cpc	r19, r1
    417c:	2c f0       	brlt	.+10     	; 0x4188 <__pack_f+0x76>
    417e:	20 e0       	ldi	r18, 0x00	; 0
    4180:	30 e0       	ldi	r19, 0x00	; 0
    4182:	40 e0       	ldi	r20, 0x00	; 0
    4184:	50 e0       	ldi	r21, 0x00	; 0
    4186:	2a c0       	rjmp	.+84     	; 0x41dc <__pack_f+0xca>
    4188:	b8 01       	movw	r22, r16
    418a:	a7 01       	movw	r20, r14
    418c:	02 2e       	mov	r0, r18
    418e:	04 c0       	rjmp	.+8      	; 0x4198 <__pack_f+0x86>
    4190:	76 95       	lsr	r23
    4192:	67 95       	ror	r22
    4194:	57 95       	ror	r21
    4196:	47 95       	ror	r20
    4198:	0a 94       	dec	r0
    419a:	d2 f7       	brpl	.-12     	; 0x4190 <__pack_f+0x7e>
    419c:	81 e0       	ldi	r24, 0x01	; 1
    419e:	90 e0       	ldi	r25, 0x00	; 0
    41a0:	a0 e0       	ldi	r26, 0x00	; 0
    41a2:	b0 e0       	ldi	r27, 0x00	; 0
    41a4:	04 c0       	rjmp	.+8      	; 0x41ae <__pack_f+0x9c>
    41a6:	88 0f       	add	r24, r24
    41a8:	99 1f       	adc	r25, r25
    41aa:	aa 1f       	adc	r26, r26
    41ac:	bb 1f       	adc	r27, r27
    41ae:	2a 95       	dec	r18
    41b0:	d2 f7       	brpl	.-12     	; 0x41a6 <__pack_f+0x94>
    41b2:	01 97       	sbiw	r24, 0x01	; 1
    41b4:	a1 09       	sbc	r26, r1
    41b6:	b1 09       	sbc	r27, r1
    41b8:	8e 21       	and	r24, r14
    41ba:	9f 21       	and	r25, r15
    41bc:	a0 23       	and	r26, r16
    41be:	b1 23       	and	r27, r17
    41c0:	00 97       	sbiw	r24, 0x00	; 0
    41c2:	a1 05       	cpc	r26, r1
    41c4:	b1 05       	cpc	r27, r1
    41c6:	21 f0       	breq	.+8      	; 0x41d0 <__pack_f+0xbe>
    41c8:	81 e0       	ldi	r24, 0x01	; 1
    41ca:	90 e0       	ldi	r25, 0x00	; 0
    41cc:	a0 e0       	ldi	r26, 0x00	; 0
    41ce:	b0 e0       	ldi	r27, 0x00	; 0
    41d0:	9a 01       	movw	r18, r20
    41d2:	ab 01       	movw	r20, r22
    41d4:	28 2b       	or	r18, r24
    41d6:	39 2b       	or	r19, r25
    41d8:	4a 2b       	or	r20, r26
    41da:	5b 2b       	or	r21, r27
    41dc:	da 01       	movw	r26, r20
    41de:	c9 01       	movw	r24, r18
    41e0:	8f 77       	andi	r24, 0x7F	; 127
    41e2:	90 70       	andi	r25, 0x00	; 0
    41e4:	a0 70       	andi	r26, 0x00	; 0
    41e6:	b0 70       	andi	r27, 0x00	; 0
    41e8:	80 34       	cpi	r24, 0x40	; 64
    41ea:	91 05       	cpc	r25, r1
    41ec:	a1 05       	cpc	r26, r1
    41ee:	b1 05       	cpc	r27, r1
    41f0:	39 f4       	brne	.+14     	; 0x4200 <__pack_f+0xee>
    41f2:	27 ff       	sbrs	r18, 7
    41f4:	09 c0       	rjmp	.+18     	; 0x4208 <__pack_f+0xf6>
    41f6:	20 5c       	subi	r18, 0xC0	; 192
    41f8:	3f 4f       	sbci	r19, 0xFF	; 255
    41fa:	4f 4f       	sbci	r20, 0xFF	; 255
    41fc:	5f 4f       	sbci	r21, 0xFF	; 255
    41fe:	04 c0       	rjmp	.+8      	; 0x4208 <__pack_f+0xf6>
    4200:	21 5c       	subi	r18, 0xC1	; 193
    4202:	3f 4f       	sbci	r19, 0xFF	; 255
    4204:	4f 4f       	sbci	r20, 0xFF	; 255
    4206:	5f 4f       	sbci	r21, 0xFF	; 255
    4208:	e0 e0       	ldi	r30, 0x00	; 0
    420a:	f0 e0       	ldi	r31, 0x00	; 0
    420c:	20 30       	cpi	r18, 0x00	; 0
    420e:	a0 e0       	ldi	r26, 0x00	; 0
    4210:	3a 07       	cpc	r19, r26
    4212:	a0 e0       	ldi	r26, 0x00	; 0
    4214:	4a 07       	cpc	r20, r26
    4216:	a0 e4       	ldi	r26, 0x40	; 64
    4218:	5a 07       	cpc	r21, r26
    421a:	10 f0       	brcs	.+4      	; 0x4220 <__pack_f+0x10e>
    421c:	e1 e0       	ldi	r30, 0x01	; 1
    421e:	f0 e0       	ldi	r31, 0x00	; 0
    4220:	79 01       	movw	r14, r18
    4222:	8a 01       	movw	r16, r20
    4224:	27 c0       	rjmp	.+78     	; 0x4274 <__pack_f+0x162>
    4226:	60 38       	cpi	r22, 0x80	; 128
    4228:	71 05       	cpc	r23, r1
    422a:	64 f5       	brge	.+88     	; 0x4284 <__pack_f+0x172>
    422c:	fb 01       	movw	r30, r22
    422e:	e1 58       	subi	r30, 0x81	; 129
    4230:	ff 4f       	sbci	r31, 0xFF	; 255
    4232:	d8 01       	movw	r26, r16
    4234:	c7 01       	movw	r24, r14
    4236:	8f 77       	andi	r24, 0x7F	; 127
    4238:	90 70       	andi	r25, 0x00	; 0
    423a:	a0 70       	andi	r26, 0x00	; 0
    423c:	b0 70       	andi	r27, 0x00	; 0
    423e:	80 34       	cpi	r24, 0x40	; 64
    4240:	91 05       	cpc	r25, r1
    4242:	a1 05       	cpc	r26, r1
    4244:	b1 05       	cpc	r27, r1
    4246:	39 f4       	brne	.+14     	; 0x4256 <__pack_f+0x144>
    4248:	e7 fe       	sbrs	r14, 7
    424a:	0d c0       	rjmp	.+26     	; 0x4266 <__pack_f+0x154>
    424c:	80 e4       	ldi	r24, 0x40	; 64
    424e:	90 e0       	ldi	r25, 0x00	; 0
    4250:	a0 e0       	ldi	r26, 0x00	; 0
    4252:	b0 e0       	ldi	r27, 0x00	; 0
    4254:	04 c0       	rjmp	.+8      	; 0x425e <__pack_f+0x14c>
    4256:	8f e3       	ldi	r24, 0x3F	; 63
    4258:	90 e0       	ldi	r25, 0x00	; 0
    425a:	a0 e0       	ldi	r26, 0x00	; 0
    425c:	b0 e0       	ldi	r27, 0x00	; 0
    425e:	e8 0e       	add	r14, r24
    4260:	f9 1e       	adc	r15, r25
    4262:	0a 1f       	adc	r16, r26
    4264:	1b 1f       	adc	r17, r27
    4266:	17 ff       	sbrs	r17, 7
    4268:	05 c0       	rjmp	.+10     	; 0x4274 <__pack_f+0x162>
    426a:	16 95       	lsr	r17
    426c:	07 95       	ror	r16
    426e:	f7 94       	ror	r15
    4270:	e7 94       	ror	r14
    4272:	31 96       	adiw	r30, 0x01	; 1
    4274:	87 e0       	ldi	r24, 0x07	; 7
    4276:	16 95       	lsr	r17
    4278:	07 95       	ror	r16
    427a:	f7 94       	ror	r15
    427c:	e7 94       	ror	r14
    427e:	8a 95       	dec	r24
    4280:	d1 f7       	brne	.-12     	; 0x4276 <__pack_f+0x164>
    4282:	05 c0       	rjmp	.+10     	; 0x428e <__pack_f+0x17c>
    4284:	ee 24       	eor	r14, r14
    4286:	ff 24       	eor	r15, r15
    4288:	87 01       	movw	r16, r14
    428a:	ef ef       	ldi	r30, 0xFF	; 255
    428c:	f0 e0       	ldi	r31, 0x00	; 0
    428e:	6e 2f       	mov	r22, r30
    4290:	67 95       	ror	r22
    4292:	66 27       	eor	r22, r22
    4294:	67 95       	ror	r22
    4296:	90 2f       	mov	r25, r16
    4298:	9f 77       	andi	r25, 0x7F	; 127
    429a:	d7 94       	ror	r13
    429c:	dd 24       	eor	r13, r13
    429e:	d7 94       	ror	r13
    42a0:	8e 2f       	mov	r24, r30
    42a2:	86 95       	lsr	r24
    42a4:	49 2f       	mov	r20, r25
    42a6:	46 2b       	or	r20, r22
    42a8:	58 2f       	mov	r21, r24
    42aa:	5d 29       	or	r21, r13
    42ac:	b7 01       	movw	r22, r14
    42ae:	ca 01       	movw	r24, r20
    42b0:	1f 91       	pop	r17
    42b2:	0f 91       	pop	r16
    42b4:	ff 90       	pop	r15
    42b6:	ef 90       	pop	r14
    42b8:	df 90       	pop	r13
    42ba:	08 95       	ret

000042bc <__unpack_f>:
    42bc:	fc 01       	movw	r30, r24
    42be:	db 01       	movw	r26, r22
    42c0:	40 81       	ld	r20, Z
    42c2:	51 81       	ldd	r21, Z+1	; 0x01
    42c4:	22 81       	ldd	r18, Z+2	; 0x02
    42c6:	62 2f       	mov	r22, r18
    42c8:	6f 77       	andi	r22, 0x7F	; 127
    42ca:	70 e0       	ldi	r23, 0x00	; 0
    42cc:	22 1f       	adc	r18, r18
    42ce:	22 27       	eor	r18, r18
    42d0:	22 1f       	adc	r18, r18
    42d2:	93 81       	ldd	r25, Z+3	; 0x03
    42d4:	89 2f       	mov	r24, r25
    42d6:	88 0f       	add	r24, r24
    42d8:	82 2b       	or	r24, r18
    42da:	28 2f       	mov	r18, r24
    42dc:	30 e0       	ldi	r19, 0x00	; 0
    42de:	99 1f       	adc	r25, r25
    42e0:	99 27       	eor	r25, r25
    42e2:	99 1f       	adc	r25, r25
    42e4:	11 96       	adiw	r26, 0x01	; 1
    42e6:	9c 93       	st	X, r25
    42e8:	11 97       	sbiw	r26, 0x01	; 1
    42ea:	21 15       	cp	r18, r1
    42ec:	31 05       	cpc	r19, r1
    42ee:	a9 f5       	brne	.+106    	; 0x435a <__unpack_f+0x9e>
    42f0:	41 15       	cp	r20, r1
    42f2:	51 05       	cpc	r21, r1
    42f4:	61 05       	cpc	r22, r1
    42f6:	71 05       	cpc	r23, r1
    42f8:	11 f4       	brne	.+4      	; 0x42fe <__unpack_f+0x42>
    42fa:	82 e0       	ldi	r24, 0x02	; 2
    42fc:	37 c0       	rjmp	.+110    	; 0x436c <__unpack_f+0xb0>
    42fe:	82 e8       	ldi	r24, 0x82	; 130
    4300:	9f ef       	ldi	r25, 0xFF	; 255
    4302:	13 96       	adiw	r26, 0x03	; 3
    4304:	9c 93       	st	X, r25
    4306:	8e 93       	st	-X, r24
    4308:	12 97       	sbiw	r26, 0x02	; 2
    430a:	9a 01       	movw	r18, r20
    430c:	ab 01       	movw	r20, r22
    430e:	67 e0       	ldi	r22, 0x07	; 7
    4310:	22 0f       	add	r18, r18
    4312:	33 1f       	adc	r19, r19
    4314:	44 1f       	adc	r20, r20
    4316:	55 1f       	adc	r21, r21
    4318:	6a 95       	dec	r22
    431a:	d1 f7       	brne	.-12     	; 0x4310 <__unpack_f+0x54>
    431c:	83 e0       	ldi	r24, 0x03	; 3
    431e:	8c 93       	st	X, r24
    4320:	0d c0       	rjmp	.+26     	; 0x433c <__unpack_f+0x80>
    4322:	22 0f       	add	r18, r18
    4324:	33 1f       	adc	r19, r19
    4326:	44 1f       	adc	r20, r20
    4328:	55 1f       	adc	r21, r21
    432a:	12 96       	adiw	r26, 0x02	; 2
    432c:	8d 91       	ld	r24, X+
    432e:	9c 91       	ld	r25, X
    4330:	13 97       	sbiw	r26, 0x03	; 3
    4332:	01 97       	sbiw	r24, 0x01	; 1
    4334:	13 96       	adiw	r26, 0x03	; 3
    4336:	9c 93       	st	X, r25
    4338:	8e 93       	st	-X, r24
    433a:	12 97       	sbiw	r26, 0x02	; 2
    433c:	20 30       	cpi	r18, 0x00	; 0
    433e:	80 e0       	ldi	r24, 0x00	; 0
    4340:	38 07       	cpc	r19, r24
    4342:	80 e0       	ldi	r24, 0x00	; 0
    4344:	48 07       	cpc	r20, r24
    4346:	80 e4       	ldi	r24, 0x40	; 64
    4348:	58 07       	cpc	r21, r24
    434a:	58 f3       	brcs	.-42     	; 0x4322 <__unpack_f+0x66>
    434c:	14 96       	adiw	r26, 0x04	; 4
    434e:	2d 93       	st	X+, r18
    4350:	3d 93       	st	X+, r19
    4352:	4d 93       	st	X+, r20
    4354:	5c 93       	st	X, r21
    4356:	17 97       	sbiw	r26, 0x07	; 7
    4358:	08 95       	ret
    435a:	2f 3f       	cpi	r18, 0xFF	; 255
    435c:	31 05       	cpc	r19, r1
    435e:	79 f4       	brne	.+30     	; 0x437e <__unpack_f+0xc2>
    4360:	41 15       	cp	r20, r1
    4362:	51 05       	cpc	r21, r1
    4364:	61 05       	cpc	r22, r1
    4366:	71 05       	cpc	r23, r1
    4368:	19 f4       	brne	.+6      	; 0x4370 <__unpack_f+0xb4>
    436a:	84 e0       	ldi	r24, 0x04	; 4
    436c:	8c 93       	st	X, r24
    436e:	08 95       	ret
    4370:	64 ff       	sbrs	r22, 4
    4372:	03 c0       	rjmp	.+6      	; 0x437a <__unpack_f+0xbe>
    4374:	81 e0       	ldi	r24, 0x01	; 1
    4376:	8c 93       	st	X, r24
    4378:	12 c0       	rjmp	.+36     	; 0x439e <__unpack_f+0xe2>
    437a:	1c 92       	st	X, r1
    437c:	10 c0       	rjmp	.+32     	; 0x439e <__unpack_f+0xe2>
    437e:	2f 57       	subi	r18, 0x7F	; 127
    4380:	30 40       	sbci	r19, 0x00	; 0
    4382:	13 96       	adiw	r26, 0x03	; 3
    4384:	3c 93       	st	X, r19
    4386:	2e 93       	st	-X, r18
    4388:	12 97       	sbiw	r26, 0x02	; 2
    438a:	83 e0       	ldi	r24, 0x03	; 3
    438c:	8c 93       	st	X, r24
    438e:	87 e0       	ldi	r24, 0x07	; 7
    4390:	44 0f       	add	r20, r20
    4392:	55 1f       	adc	r21, r21
    4394:	66 1f       	adc	r22, r22
    4396:	77 1f       	adc	r23, r23
    4398:	8a 95       	dec	r24
    439a:	d1 f7       	brne	.-12     	; 0x4390 <__unpack_f+0xd4>
    439c:	70 64       	ori	r23, 0x40	; 64
    439e:	14 96       	adiw	r26, 0x04	; 4
    43a0:	4d 93       	st	X+, r20
    43a2:	5d 93       	st	X+, r21
    43a4:	6d 93       	st	X+, r22
    43a6:	7c 93       	st	X, r23
    43a8:	17 97       	sbiw	r26, 0x07	; 7
    43aa:	08 95       	ret

000043ac <__fpcmp_parts_f>:
    43ac:	1f 93       	push	r17
    43ae:	dc 01       	movw	r26, r24
    43b0:	fb 01       	movw	r30, r22
    43b2:	9c 91       	ld	r25, X
    43b4:	92 30       	cpi	r25, 0x02	; 2
    43b6:	08 f4       	brcc	.+2      	; 0x43ba <__fpcmp_parts_f+0xe>
    43b8:	47 c0       	rjmp	.+142    	; 0x4448 <__fpcmp_parts_f+0x9c>
    43ba:	80 81       	ld	r24, Z
    43bc:	82 30       	cpi	r24, 0x02	; 2
    43be:	08 f4       	brcc	.+2      	; 0x43c2 <__fpcmp_parts_f+0x16>
    43c0:	43 c0       	rjmp	.+134    	; 0x4448 <__fpcmp_parts_f+0x9c>
    43c2:	94 30       	cpi	r25, 0x04	; 4
    43c4:	51 f4       	brne	.+20     	; 0x43da <__fpcmp_parts_f+0x2e>
    43c6:	11 96       	adiw	r26, 0x01	; 1
    43c8:	1c 91       	ld	r17, X
    43ca:	84 30       	cpi	r24, 0x04	; 4
    43cc:	99 f5       	brne	.+102    	; 0x4434 <__fpcmp_parts_f+0x88>
    43ce:	81 81       	ldd	r24, Z+1	; 0x01
    43d0:	68 2f       	mov	r22, r24
    43d2:	70 e0       	ldi	r23, 0x00	; 0
    43d4:	61 1b       	sub	r22, r17
    43d6:	71 09       	sbc	r23, r1
    43d8:	3f c0       	rjmp	.+126    	; 0x4458 <__fpcmp_parts_f+0xac>
    43da:	84 30       	cpi	r24, 0x04	; 4
    43dc:	21 f0       	breq	.+8      	; 0x43e6 <__fpcmp_parts_f+0x3a>
    43de:	92 30       	cpi	r25, 0x02	; 2
    43e0:	31 f4       	brne	.+12     	; 0x43ee <__fpcmp_parts_f+0x42>
    43e2:	82 30       	cpi	r24, 0x02	; 2
    43e4:	b9 f1       	breq	.+110    	; 0x4454 <__fpcmp_parts_f+0xa8>
    43e6:	81 81       	ldd	r24, Z+1	; 0x01
    43e8:	88 23       	and	r24, r24
    43ea:	89 f1       	breq	.+98     	; 0x444e <__fpcmp_parts_f+0xa2>
    43ec:	2d c0       	rjmp	.+90     	; 0x4448 <__fpcmp_parts_f+0x9c>
    43ee:	11 96       	adiw	r26, 0x01	; 1
    43f0:	1c 91       	ld	r17, X
    43f2:	11 97       	sbiw	r26, 0x01	; 1
    43f4:	82 30       	cpi	r24, 0x02	; 2
    43f6:	f1 f0       	breq	.+60     	; 0x4434 <__fpcmp_parts_f+0x88>
    43f8:	81 81       	ldd	r24, Z+1	; 0x01
    43fa:	18 17       	cp	r17, r24
    43fc:	d9 f4       	brne	.+54     	; 0x4434 <__fpcmp_parts_f+0x88>
    43fe:	12 96       	adiw	r26, 0x02	; 2
    4400:	2d 91       	ld	r18, X+
    4402:	3c 91       	ld	r19, X
    4404:	13 97       	sbiw	r26, 0x03	; 3
    4406:	82 81       	ldd	r24, Z+2	; 0x02
    4408:	93 81       	ldd	r25, Z+3	; 0x03
    440a:	82 17       	cp	r24, r18
    440c:	93 07       	cpc	r25, r19
    440e:	94 f0       	brlt	.+36     	; 0x4434 <__fpcmp_parts_f+0x88>
    4410:	28 17       	cp	r18, r24
    4412:	39 07       	cpc	r19, r25
    4414:	bc f0       	brlt	.+46     	; 0x4444 <__fpcmp_parts_f+0x98>
    4416:	14 96       	adiw	r26, 0x04	; 4
    4418:	8d 91       	ld	r24, X+
    441a:	9d 91       	ld	r25, X+
    441c:	0d 90       	ld	r0, X+
    441e:	bc 91       	ld	r27, X
    4420:	a0 2d       	mov	r26, r0
    4422:	24 81       	ldd	r18, Z+4	; 0x04
    4424:	35 81       	ldd	r19, Z+5	; 0x05
    4426:	46 81       	ldd	r20, Z+6	; 0x06
    4428:	57 81       	ldd	r21, Z+7	; 0x07
    442a:	28 17       	cp	r18, r24
    442c:	39 07       	cpc	r19, r25
    442e:	4a 07       	cpc	r20, r26
    4430:	5b 07       	cpc	r21, r27
    4432:	18 f4       	brcc	.+6      	; 0x443a <__fpcmp_parts_f+0x8e>
    4434:	11 23       	and	r17, r17
    4436:	41 f0       	breq	.+16     	; 0x4448 <__fpcmp_parts_f+0x9c>
    4438:	0a c0       	rjmp	.+20     	; 0x444e <__fpcmp_parts_f+0xa2>
    443a:	82 17       	cp	r24, r18
    443c:	93 07       	cpc	r25, r19
    443e:	a4 07       	cpc	r26, r20
    4440:	b5 07       	cpc	r27, r21
    4442:	40 f4       	brcc	.+16     	; 0x4454 <__fpcmp_parts_f+0xa8>
    4444:	11 23       	and	r17, r17
    4446:	19 f0       	breq	.+6      	; 0x444e <__fpcmp_parts_f+0xa2>
    4448:	61 e0       	ldi	r22, 0x01	; 1
    444a:	70 e0       	ldi	r23, 0x00	; 0
    444c:	05 c0       	rjmp	.+10     	; 0x4458 <__fpcmp_parts_f+0xac>
    444e:	6f ef       	ldi	r22, 0xFF	; 255
    4450:	7f ef       	ldi	r23, 0xFF	; 255
    4452:	02 c0       	rjmp	.+4      	; 0x4458 <__fpcmp_parts_f+0xac>
    4454:	60 e0       	ldi	r22, 0x00	; 0
    4456:	70 e0       	ldi	r23, 0x00	; 0
    4458:	cb 01       	movw	r24, r22
    445a:	1f 91       	pop	r17
    445c:	08 95       	ret

0000445e <__divmodhi4>:
    445e:	97 fb       	bst	r25, 7
    4460:	09 2e       	mov	r0, r25
    4462:	07 26       	eor	r0, r23
    4464:	0a d0       	rcall	.+20     	; 0x447a <__divmodhi4_neg1>
    4466:	77 fd       	sbrc	r23, 7
    4468:	04 d0       	rcall	.+8      	; 0x4472 <__divmodhi4_neg2>
    446a:	0c d0       	rcall	.+24     	; 0x4484 <__udivmodhi4>
    446c:	06 d0       	rcall	.+12     	; 0x447a <__divmodhi4_neg1>
    446e:	00 20       	and	r0, r0
    4470:	1a f4       	brpl	.+6      	; 0x4478 <__divmodhi4_exit>

00004472 <__divmodhi4_neg2>:
    4472:	70 95       	com	r23
    4474:	61 95       	neg	r22
    4476:	7f 4f       	sbci	r23, 0xFF	; 255

00004478 <__divmodhi4_exit>:
    4478:	08 95       	ret

0000447a <__divmodhi4_neg1>:
    447a:	f6 f7       	brtc	.-4      	; 0x4478 <__divmodhi4_exit>
    447c:	90 95       	com	r25
    447e:	81 95       	neg	r24
    4480:	9f 4f       	sbci	r25, 0xFF	; 255
    4482:	08 95       	ret

00004484 <__udivmodhi4>:
    4484:	aa 1b       	sub	r26, r26
    4486:	bb 1b       	sub	r27, r27
    4488:	51 e1       	ldi	r21, 0x11	; 17
    448a:	07 c0       	rjmp	.+14     	; 0x449a <__udivmodhi4_ep>

0000448c <__udivmodhi4_loop>:
    448c:	aa 1f       	adc	r26, r26
    448e:	bb 1f       	adc	r27, r27
    4490:	a6 17       	cp	r26, r22
    4492:	b7 07       	cpc	r27, r23
    4494:	10 f0       	brcs	.+4      	; 0x449a <__udivmodhi4_ep>
    4496:	a6 1b       	sub	r26, r22
    4498:	b7 0b       	sbc	r27, r23

0000449a <__udivmodhi4_ep>:
    449a:	88 1f       	adc	r24, r24
    449c:	99 1f       	adc	r25, r25
    449e:	5a 95       	dec	r21
    44a0:	a9 f7       	brne	.-22     	; 0x448c <__udivmodhi4_loop>
    44a2:	80 95       	com	r24
    44a4:	90 95       	com	r25
    44a6:	bc 01       	movw	r22, r24
    44a8:	cd 01       	movw	r24, r26
    44aa:	08 95       	ret

000044ac <__prologue_saves__>:
    44ac:	2f 92       	push	r2
    44ae:	3f 92       	push	r3
    44b0:	4f 92       	push	r4
    44b2:	5f 92       	push	r5
    44b4:	6f 92       	push	r6
    44b6:	7f 92       	push	r7
    44b8:	8f 92       	push	r8
    44ba:	9f 92       	push	r9
    44bc:	af 92       	push	r10
    44be:	bf 92       	push	r11
    44c0:	cf 92       	push	r12
    44c2:	df 92       	push	r13
    44c4:	ef 92       	push	r14
    44c6:	ff 92       	push	r15
    44c8:	0f 93       	push	r16
    44ca:	1f 93       	push	r17
    44cc:	cf 93       	push	r28
    44ce:	df 93       	push	r29
    44d0:	cd b7       	in	r28, 0x3d	; 61
    44d2:	de b7       	in	r29, 0x3e	; 62
    44d4:	ca 1b       	sub	r28, r26
    44d6:	db 0b       	sbc	r29, r27
    44d8:	0f b6       	in	r0, 0x3f	; 63
    44da:	f8 94       	cli
    44dc:	de bf       	out	0x3e, r29	; 62
    44de:	0f be       	out	0x3f, r0	; 63
    44e0:	cd bf       	out	0x3d, r28	; 61
    44e2:	09 94       	ijmp

000044e4 <__epilogue_restores__>:
    44e4:	2a 88       	ldd	r2, Y+18	; 0x12
    44e6:	39 88       	ldd	r3, Y+17	; 0x11
    44e8:	48 88       	ldd	r4, Y+16	; 0x10
    44ea:	5f 84       	ldd	r5, Y+15	; 0x0f
    44ec:	6e 84       	ldd	r6, Y+14	; 0x0e
    44ee:	7d 84       	ldd	r7, Y+13	; 0x0d
    44f0:	8c 84       	ldd	r8, Y+12	; 0x0c
    44f2:	9b 84       	ldd	r9, Y+11	; 0x0b
    44f4:	aa 84       	ldd	r10, Y+10	; 0x0a
    44f6:	b9 84       	ldd	r11, Y+9	; 0x09
    44f8:	c8 84       	ldd	r12, Y+8	; 0x08
    44fa:	df 80       	ldd	r13, Y+7	; 0x07
    44fc:	ee 80       	ldd	r14, Y+6	; 0x06
    44fe:	fd 80       	ldd	r15, Y+5	; 0x05
    4500:	0c 81       	ldd	r16, Y+4	; 0x04
    4502:	1b 81       	ldd	r17, Y+3	; 0x03
    4504:	aa 81       	ldd	r26, Y+2	; 0x02
    4506:	b9 81       	ldd	r27, Y+1	; 0x01
    4508:	ce 0f       	add	r28, r30
    450a:	d1 1d       	adc	r29, r1
    450c:	0f b6       	in	r0, 0x3f	; 63
    450e:	f8 94       	cli
    4510:	de bf       	out	0x3e, r29	; 62
    4512:	0f be       	out	0x3f, r0	; 63
    4514:	cd bf       	out	0x3d, r28	; 61
    4516:	ed 01       	movw	r28, r26
    4518:	08 95       	ret

0000451a <_exit>:
    451a:	f8 94       	cli

0000451c <__stop_program>:
    451c:	ff cf       	rjmp	.-2      	; 0x451c <__stop_program>
